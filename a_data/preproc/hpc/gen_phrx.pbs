#!/bin/bash
#PBS -N t_prx_alpaca_gen_phrx
#PBS -l select=1:ncpus=8:mem=64gb
#PBS -l walltime=45:00:00
#PBS -o logs/t_prx_alpaca_gen_phrx.out
#PBS -e logs/t_prx_alpaca_gen_phrx.err

# Move to the directory from which the job was submitted
cd "$PBS_O_WORKDIR"
. "$HOME/.cargo/env"

echo "$(date "+%Y-%m-%d %H:%M:%S") - t_prx_alpaca_gen_phrx started" >> "$HOME/times.log"

export GOOGLE_API_KEY="AIzaSyCQkDVEvgQofmpkmVAbbPwOR2m6SX6wYsY"

# Path to the Rust workspace
MANIFEST_PATH="$PBS_O_WORKDIR/a_data/preproc/rephras/Cargo.toml"

IN_JSON="a_data/alpaca/slice_100/alpaca_slice1.json"

OUT_JSON="a_data/alpaca/slice_100/prxed_style_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set style \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_length_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set length \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_obstruction_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set obstruction \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_special_chars_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set special_chars \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_syntax_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set syntax \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_language_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set language \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_context_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set context \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_voice_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set voice \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_tone_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set tone \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_boundary_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set boundary \
    "$IN_JSON" \
    "$OUT_JSON"


OUT_JSON="a_data/alpaca/slice_100/prxed_extra_slice1.json"

# Run the Rust program
cargo run \
    --manifest-path "$MANIFEST_PATH" \
    --release -- \
    --version-set extra \
    "$IN_JSON" \
    "$OUT_JSON"


echo "$(date "+%Y-%m-%d %H:%M:%S") - t_prx_alpaca_gen_phrx finished" >> "$HOME/times.log"
