[
  {
    "prompt_count": 401,
    "instruction_original": "Come up with a creative tagline for a beauty product.",
    "input": "",
    "instruct_all_caps": "COME UP WITH A CREATIVE TAGLINE FOR A BEAUTY PRODUCT.",
    "instruct_em_dash_break": "Come up with a creative tagline—for a beauty product.",
    "instruct_extra_punct": "Come up with a creative tagline for a beauty product.!!",
    "instruct_hashtags": "Come up with a creative tagline for a beauty product. #beauty #tagline",
    "instruct_inline_ad": "Come up with a creative tagline (Try Our New Product!) for a beauty product.",
    "instruct_inline_url": "Come up with a creative tagline (Visit Us: beautysite.com) for a beauty product.",
    "instruct_interrobang": "Come up with a creative tagline for a beauty product!?",
    "instruct_key_smash": "Come up with a creative tagline for a beauty product. sadfkj;",
    "instruct_leet_speak": "C0m3 up w17h 4 cr3471v3 74gl1n3 f0r 4 b34u7y pr0duc7.",
    "instruct_misplaced_commas": "Come up, with a, creative tagline, for a beauty product.",
    "instruct_missing_bracket": "[Come up with a creative tagline for a beauty product.",
    "instruct_missing_bracket_and_quote": "[ 'Come up with a creative tagline for a beauty product.",
    "instruct_missing_quote": "'Come up with a creative tagline for a beauty product.",
    "instruct_no_caps": "come up with a creative tagline for a beauty product.",
    "instruct_no_punct": "Come up with a creative tagline for a beauty product",
    "instruct_one_typo_punctuation": "Come up with a creative tagline for a beauty product?",
    "instruct_oxford_comma": "Come up with a creative tagline, for a beauty product.",
    "instruct_parenthetical_aside": "Come up with a creative tagline (make it catchy!) for a beauty product.",
    "instruct_random_caps": "cOmE uP WiTh a cReAtIvE tAgLiNe FoR a bEaUtY pRoDuCt.",
    "instruct_sms_abbrev": "cu w/ a crtv tgln 4 a bty prod.",
    "instruct_three_typos_punctuation": "Come up; with a creative tagline: for a beauty product?!",
    "instruct_two_typos_punctuation": "Come up, with a creative tagline for a beauty product.",
    "instruct_typo_adjacent": "Come ip with a creative tagline for a beauty product.",
    "instruct_typo_extra_letter": "Comee up with a creative tagline for a beauty product.",
    "instruct_typo_extra_space": "Come up with a creative  tagline for a beauty product.",
    "instruct_typo_homophone": "Come up with a creative tagline four a beauty product.",
    "instruct_typo_missing_letter": "Com up with a creative tagline for a beauty product.",
    "instruct_typo_missing_space": "Comeup with a creative tagline for a beauty product.",
    "instruct_typo_missing_vowels": "Cm p wth a crtv tgln fr a bty prdct.",
    "instruct_typo_random": "Comd up with a creativd taglein for a beaity prodcu.",
    "instruct_typo_repeated_letters": "Comeee up with a creative tagline for a beauty product.",
    "instruct_typo_swap": "Coem up with a creative tagline for a beauty product.",
    "instruct_typo_swap_and_punctuation": "Coem up with a creative tagline for a beauty product?!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Cmoe pu with a creative tagline for a beauty product;?",
    "instruct_typo_transpose": "Cmoe up with a creative tagline for a beauty product.",
    "instruct_typo_wrong_letter": "Come op with a creative tagline for a beauty product.",
    "output": "\"The Beauty of Now - Unlock Your Radiance with {Brand Name}\"",
    "prompt_id": "ccf1286c-c147-4fc6-b0b7-70288e529ad8"
  },
  {
    "prompt_count": 402,
    "instruction_original": "Describe how quantum computers work.",
    "input": "",
    "instruct_all_caps": "DESCRIBE HOW QUANTUM COMPUTERS WORK.",
    "instruct_em_dash_break": "Describe how—quantum computers—work.",
    "instruct_extra_punct": "Describe... how!!! quantum??! computers!! work....",
    "instruct_hashtags": "Describe how quantum computers work. #quantumcomputing #technology",
    "instruct_inline_ad": "Describe how quantum computers work. Get the best quantum computer guide at amazingguides.com!",
    "instruct_inline_url": "Describe how quantum computers work. Find more info at https://example.com/quantum",
    "instruct_interrobang": "Describe how quantum computers work?!",
    "instruct_key_smash": "Describe how quantum computers work. asdfghjkl;",
    "instruct_leet_speak": "D35cr1b3 h0w qu4n7um c0mpu73r5 w0rk.",
    "instruct_misplaced_commas": "Describe, how quantum computers, work.",
    "instruct_missing_bracket": "(Describe how quantum computers work.",
    "instruct_missing_bracket_and_quote": "(Describe how quantum computers work.",
    "instruct_missing_quote": "Describe how quantum computers work.",
    "instruct_no_caps": "describe how quantum computers work.",
    "instruct_no_punct": "Describe how quantum computers work",
    "instruct_one_typo_punctuation": "Describe how quantum computers work;",
    "instruct_oxford_comma": "Describe how quantum computers, work.",
    "instruct_parenthetical_aside": "Describe how quantum computers (the complex ones) work.",
    "instruct_random_caps": "dESCrIbE hOW qUaNtUm CoMpUtErS wORk.",
    "instruct_sms_abbrev": "Dscr8b how q pcs wrk.",
    "instruct_three_typos_punctuation": "Describe how quantum computers work?!?!",
    "instruct_two_typos_punctuation": "Describe how quantum computers work??",
    "instruct_typo_adjacent": "Descrobe jpw qusntum compjters worl.",
    "instruct_typo_extra_letter": "Describee howw quantuom computters workk.",
    "instruct_typo_extra_space": "Des crib e how qu antum co mputers wo rk.",
    "instruct_typo_homophone": "Descryb how quantum computrs werke.",
    "instruct_typo_missing_letter": "Descrie how quantm computer work.",
    "instruct_typo_missing_space": "Describehowquantumcomputerswork.",
    "instruct_typo_missing_vowels": "Dscrb hw qntm cmptrs wrk.",
    "instruct_typo_random": "Descrie hoi qlanttum compucers worrk.",
    "instruct_typo_repeated_letters": "Descrribe howw quantuum computerers workk.",
    "instruct_typo_swap": "Desrcibe woh qanutm computers wrok.",
    "instruct_typo_swap_and_punctuation": "Desrcibe woh qanutm computers wrok:",
    "instruct_typo_swap_and_transpose_and_punctuation": "Dscribe hwo qantum comptuers wrk,,",
    "instruct_typo_transpose": "Dscribe hwo qantum comptuers wrk.",
    "instruct_typo_wrong_letter": "Descrobe how qualtum compiterd work.",
    "output": "Quantum computers use quantum bits, or qubits, instead of traditional bits to encode information. These qubits can work together in groups, allowing them to process and store data more efficiently than traditional computers. Quantum computers use quantum algorithms to enable them to solve complex problems that would be intractable on classical computers.",
    "prompt_id": "952ab93e-c419-46a7-a719-d63ec7b5bd76"
  },
  {
    "prompt_count": 403,
    "instruction_original": "Generate a memorable quote from Albert Einstein.",
    "input": "",
    "instruct_all_caps": "GENERATE A MEMORABLE QUOTE FROM ALBERT EINSTEIN.",
    "instruct_em_dash_break": "Generate a memorable quote—from Albert Einstein.",
    "instruct_extra_punct": "Generate a memorable quote from Albert Einstein?!?",
    "instruct_hashtags": "Generate a memorable quote from Albert Einstein #quote #alberteinstein",
    "instruct_inline_ad": "Generate a memorable quote (sponsored by ACME Corp) from Albert Einstein.",
    "instruct_inline_url": "Generate a memorable quote (find more here: example.com) from Albert Einstein.",
    "instruct_interrobang": "Generate a memorable quote from Albert Einstein‽",
    "instruct_key_smash": "Generate a memorable quote from Albert Einstein asdfghjkl;",
    "instruct_leet_speak": "G3n3r473 4 m3m0r4bl3 qu073 fr0m 4lb3r7 31n5731n.",
    "instruct_misplaced_commas": "Generate, a memorable, quote from, Albert Einstein.",
    "instruct_missing_bracket": "[Generate a memorable quote from Albert Einstein.",
    "instruct_missing_bracket_and_quote": "['Generate a memorable quote from Albert Einstein.",
    "instruct_missing_quote": "'Generate a memorable quote from Albert Einstein.",
    "instruct_no_caps": "generate a memorable quote from albert einstein.",
    "instruct_no_punct": "Generate a memorable quote from Albert Einstein",
    "instruct_one_typo_punctuation": "Generate a memorable quote from Albert Einstein;",
    "instruct_oxford_comma": "Generate a memorable, and useful quote from Albert Einstein.",
    "instruct_parenthetical_aside": "Generate a memorable quote (something really famous) from Albert Einstein.",
    "instruct_random_caps": "gEnErAtE A mEmOrAbLe QuOtE fRoM aLbErT eInStEiN.",
    "instruct_sms_abbrev": "Gen a mem quote frm Alb Einstein.",
    "instruct_three_typos_punctuation": "Generate a memorable quote?!? from Albert Einstein!?",
    "instruct_two_typos_punctuation": "Generate a memorable quote? from Albert Einstein.",
    "instruct_typo_adjacent": "Generwte a memorable quote from Albert Einstein.",
    "instruct_typo_extra_letter": "Generatte a memorable quote from Albert Einstein.",
    "instruct_typo_extra_space": "Generate a memorable quote from Albert Einstein .",
    "instruct_typo_homophone": "Generate a memorable quite from Albert Einstein.",
    "instruct_typo_missing_letter": "Generte a memorable quote from Albert Einstein.",
    "instruct_typo_missing_space": "Generatea memorable quote from Albert Einstein.",
    "instruct_typo_missing_vowels": "Gnrt a mmrbl qut frm Albrt Enstn.",
    "instruct_typo_random": "Generate a memorable qouote from Albert Einstein.",
    "instruct_typo_repeated_letters": "Generatte a memorablee quote from Albert Einstein.",
    "instruct_typo_swap": "Geenrate a memorable quote from Albert Einstein.",
    "instruct_typo_swap_and_punctuation": "Geenrate a memorable quote from Albert Einstein;",
    "instruct_typo_swap_and_transpose_and_punctuation": "Geenrate a memoarble quote from Albert Einstein?!",
    "instruct_typo_transpose": "Gnerate a memorable quote from Albert Einstein.",
    "instruct_typo_wrong_letter": "Generatz a memorable quote from Albert Einstein.",
    "output": "\"Imagination is more important than knowledge.\" - Albert Einstein.",
    "prompt_id": "28699158-4b31-4fb3-8361-9137d506514a"
  },
  {
    "prompt_count": 404,
    "instruction_original": "Find the sum of the numbers 6 and 12.",
    "input": "6 + 12",
    "instruct_all_caps": "FIND THE SUM OF THE NUMBERS 6 AND 12.",
    "instruct_em_dash_break": "Find the sum—of the numbers 6 and 12.",
    "instruct_extra_punct": "Find the sum!!! of the numbers 6 and 12...",
    "instruct_hashtags": "Find the sum of the numbers 6 and 12. #math #sum #addition",
    "instruct_inline_ad": "Find the sum of the numbers 6 and 12. (Limited Time Offer!)",
    "instruct_inline_url": "Find the sum of the numbers 6 and 12. (Visit example.com)",
    "instruct_interrobang": "Find the sum of the numbers 6 and 12!?",
    "instruct_key_smash": "Find the sum of the numbers 6 and 12. zxcvbnm,./",
    "instruct_leet_speak": "F1nd th3 sum 0f th3 numb3r5 6 @nd 12.",
    "instruct_misplaced_commas": "Find, the sum, of the numbers, 6 and 12.",
    "instruct_missing_bracket": "[Find the sum of the numbers 6 and 12.",
    "instruct_missing_bracket_and_quote": "[\"Find the sum of the numbers 6 and 12.",
    "instruct_missing_quote": "\"Find the sum of the numbers 6 and 12.",
    "instruct_no_caps": "find the sum of the numbers 6 and 12.",
    "instruct_no_punct": "Find the sum of the numbers 6 and 12",
    "instruct_one_typo_punctuation": "Find the sum of the numbers 6 and 12?",
    "instruct_oxford_comma": "Find the sum of the numbers 6, and 12.",
    "instruct_parenthetical_aside": "Find the sum of the numbers (specifically 6 and 12).",
    "instruct_random_caps": "fInd thE sUm Of ThE nUmBeRs 6 aNd 12.",
    "instruct_sms_abbrev": "Fnd da sum of da numbas 6 & 12.",
    "instruct_three_typos_punctuation": "Find the sum of the numbers 6 and 12?!..",
    "instruct_two_typos_punctuation": "Find the sum, of the numbers 6 and 12..",
    "instruct_typo_adjacent": "Rind the sum of the numbers 6 and 12.",
    "instruct_typo_extra_letter": "Findd the sum of the numbers 6 and 12.",
    "instruct_typo_extra_space": "Find the sum of the numbers 6 and 12.",
    "instruct_typo_homophone": "Find the some of the numbers six and twelve.",
    "instruct_typo_missing_letter": "Fnd the sum of the numbrs 6 and 12.",
    "instruct_typo_missing_space": "Findthe sum of the numbers 6 and 12.",
    "instruct_typo_missing_vowels": "Fnd th sm of th nmbrs 6 nd 12.",
    "instruct_typo_random": "Fijnd the suum of the nbumers 6 and 12.",
    "instruct_typo_repeated_letters": "Findd the summ of the numberss 6 and 12.",
    "instruct_typo_swap": "Fidn the sum of the numbers 6 and 12.",
    "instruct_typo_swap_and_punctuation": "Fidn the sum of the numbers 6 and 12,",
    "instruct_typo_swap_and_transpose_and_punctuation": "Fnithe sum, of the numbers 6 and 12..",
    "instruct_typo_transpose": "Fnithe sum of the numbers 6 and 12.",
    "instruct_typo_wrong_letter": "Kind the sum of the numbers 6 and 12.",
    "output": "18.",
    "prompt_id": "66bd18c9-1567-40b0-846c-58c7417c1124"
  },
  {
    "prompt_count": 405,
    "instruction_original": "Transform the following sentence using the past perfect tense: Yesterday they opened the door.",
    "input": "",
    "instruct_all_caps": "TRANSFORM THE FOLLOWING SENTENCE USING THE PAST PERFECT TENSE: YESTERDAY THEY OPENED THE DOOR.",
    "instruct_em_dash_break": "Transform the following sentence—using the past perfect tense—Yesterday they opened the door.",
    "instruct_extra_punct": "Transform the following sentence using the past perfect tense..?!: Yesterday they opened the door.!!!",
    "instruct_hashtags": "Transform the following sentence using the past perfect tense #GrammarRules: Yesterday they opened the door #PastPerfect #English",
    "instruct_inline_ad": "Transform the following sentence using the past perfect tense Shop Now at AmazingDeals.com!: Yesterday they opened the door.",
    "instruct_inline_url": "Transform the following sentence using the past perfect tense https://example.com/grammar-help: Yesterday they opened the door.",
    "instruct_interrobang": "Transform the following sentence using the past perfect tense: Yesterday they opened the door.‽",
    "instruct_key_smash": "Transform the following sentence using the past perfect tense kjhasdghf: Yesterday they opened the door. poiuytrew",
    "instruct_leet_speak": "7r4n5f0rm 7h3 f0ll0w1ng 53n73nc3 u51ng 7h3 p457 p3rf3c7 73n53: Y3573rd4y 7h3y 0p3n3d 7h3 d00r.",
    "instruct_misplaced_commas": "Transform, the following sentence, using the past, perfect tense: Yesterday they, opened the door.",
    "instruct_missing_bracket": "[Transform the following sentence using the past perfect tense: Yesterday they opened the door.",
    "instruct_missing_bracket_and_quote": "['Transform the following sentence using the past perfect tense: Yesterday they opened the door.",
    "instruct_missing_quote": "'Transform the following sentence using the past perfect tense: Yesterday they opened the door.",
    "instruct_no_caps": "transform the following sentence using the past perfect tense: yesterday they opened the door.",
    "instruct_no_punct": "Transform the following sentence using the past perfect tense Yesterday they opened the door",
    "instruct_one_typo_punctuation": "Transform the following sentence using the past perfect tense: Yesterday they opened the door?",
    "instruct_oxford_comma": "Transform the following sentence using the past perfect, tense: Yesterday they opened the door.",
    "instruct_parenthetical_aside": "Transform the following sentence (a simple one) using the past perfect tense: Yesterday they opened the door.",
    "instruct_random_caps": "TrAnSfOrM tHe FOLLOwing sEnTEncE uSiNg thE pAst pERfEcT TEnse: yEsTeRDaY thEY OPeNed tHE dOOr.",
    "instruct_sms_abbrev": "Trnsfrm da fllwng sntnc usin da pst perfct tns: Ystrday thy opnd da dr.",
    "instruct_three_typos_punctuation": "Transform the following sentence using the past perfect tense: Yesterday they opened the door.;?!",
    "instruct_two_typos_punctuation": "Transform the following sentence using the past perfect tense: Yesterday they opened the door.!",
    "instruct_typo_adjacent": "Trqnsform thw following sewntence using thw pqst perfrct tense: Yeszerday they opwned tje dooe.",
    "instruct_typo_extra_letter": "Transforrm the followinng sentence using the paast perfect tenmse: Yesterday theey opened the dooor.",
    "instruct_typo_extra_space": "Transform the following sentence using the past perfect  tense: Yesterday they opened the door.",
    "instruct_typo_homophone": "Transform the following sentience using the past perfect tents: Yesterday they opened the door.",
    "instruct_typo_missing_letter": "Transorm the follwing sentence using the past pefect tense: Yesteray thy opened the dor.",
    "instruct_typo_missing_space": "Transformthefollowingsentenceusingthepastperfecttense:Yesterdaytheyopenedthedoor.",
    "instruct_typo_missing_vowels": "Trnsfrm th fllwng sntnc sng th pst prfct tns: Ystrdy th ypnd th dr.",
    "instruct_typo_random": "Trnsfarm thd follwing sntence usine the past perfevt tns: Yesterdfy thdy openen the door.",
    "instruct_typo_repeated_letters": "Transssform thhhe following sentence ussing the passt perrrfect tensse: Yessterrday theyy oppened the door.",
    "instruct_typo_swap": "Tranfsorm the follwoing setnence uisng the psat pefect tnese: Yeserday tehy opened the odor.",
    "instruct_typo_swap_and_punctuation": "Tranfsorm the follwoing setnence uisng the psat pefect tnese: Yeserday tehy opened the odor?!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Transform thee follwoing setnence uisng pthe ast pefect tnese: Yeserday tehy opneed the odor!?",
    "instruct_typo_transpose": "Transform thee following sentence using pthe ast erfect tense: Yesterday they opneed the door.",
    "instruct_typo_wrong_letter": "Transform the fpllowing sentencr using the past perflct tynse: Yestlrday they openfd the doow.",
    "output": "Yesterday they had opened the door.",
    "prompt_id": "d31a3c94-8509-4d8d-8e9c-5997df4f635c"
  },
  {
    "prompt_count": 406,
    "instruction_original": "Explain the uses of artificial intelligence.",
    "input": "",
    "instruct_all_caps": "EXPLAIN THE USES OF ARTIFICIAL INTELLIGENCE.",
    "instruct_em_dash_break": "Explain the uses\b—of artificial intelligence—\b.",
    "instruct_extra_punct": "Explain! the uses? of artificial intelligence.",
    "instruct_hashtags": "Explain the uses of artificial intelligence #AI #Tech #Future",
    "instruct_inline_ad": "Explain the uses of artificial intelligence. Limited time offer!",
    "instruct_inline_url": "Explain the uses of artificial intelligence. Learn more at fakeurl.com.",
    "instruct_interrobang": "Explain the uses of artificial intelligence?!",
    "instruct_key_smash": "Explain the uses of artificial intelligence jkl;asdf.",
    "instruct_leet_speak": "3xp141n th3 us35 0f 4rt1f1c14l 1n73ll1g3nc3.",
    "instruct_misplaced_commas": "Explain, the uses of, artificial intelligence.",
    "instruct_missing_bracket": "Explain the uses [of artificial intelligence.",
    "instruct_missing_bracket_and_quote": "'Explain the uses [of artificial intelligence.",
    "instruct_missing_quote": "'Explain the uses of artificial intelligence.",
    "instruct_no_caps": "explain the uses of artificial intelligence.",
    "instruct_no_punct": "Explain the uses of artificial intelligence",
    "instruct_one_typo_punctuation": "Explain, the uses of artificial intelligence.",
    "instruct_oxford_comma": "Explain the uses of artificial, intelligence.",
    "instruct_parenthetical_aside": "Explain the uses (and applications) of artificial intelligence.",
    "instruct_random_caps": "eXPlAin thE UsES oF ArTIFICial iNTeLLigEncE.",
    "instruct_sms_abbrev": "Xpln the uses of AI.",
    "instruct_three_typos_punctuation": "Explain; the uses, of; artificial intelligence.",
    "instruct_two_typos_punctuation": "Explain; the uses, of artificial intelligence.",
    "instruct_typo_adjacent": "Exolain the uses of artifucial intellifence.",
    "instruct_typo_extra_letter": "Expplain the uses of artificial intelligence.",
    "instruct_typo_extra_space": "Explain the uses of artificial intelligence.",
    "instruct_typo_homophone": "Explain the u's of artificial intelligence.",
    "instruct_typo_missing_letter": "Explin the uses of artificial intelligence.",
    "instruct_typo_missing_space": "Explainthe uses of artificial intelligence.",
    "instruct_typo_missing_vowels": "Xpln th ss f rtfc ntllgnc.",
    "instruct_typo_random": "Expain the uss of artifcial inteligence.",
    "instruct_typo_repeated_letters": "Expplain thee usses of arttificiaall intelligence.",
    "instruct_typo_swap": "Exlpain teh esus fo aritifical intellignece.",
    "instruct_typo_swap_and_punctuation": "Exlpain; teh esus, fo aritifical intellignece.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Exlpain; teh usse, fo aritifcial; intellgnecie.",
    "instruct_typo_transpose": "Exlpian the usse of aritifcial intellgnecie.",
    "instruct_typo_wrong_letter": "Explain the uses of artifkcial intelligence.",
    "output": "Artificial intelligence is used in a variety of applications ranging from self-driving cars to facial recognition software. AI is used to help automate processes and make decisions in ways that are faster and more accurate than humans. AI can also be used for predictive analytics, where computers can detect patterns in data and make predictions about what could happen in the future.",
    "prompt_id": "3deaabb3-2725-4bd2-962b-c0868499f42a"
  },
  {
    "prompt_count": 407,
    "instruction_original": "Describe a scenario in which blockchain technology could be successfully applied.",
    "input": "",
    "instruct_all_caps": "DESCRIBE A SCENARIO IN WHICH BLOCKCHAIN TECHNOLOGY COULD BE SUCCESSFULLY APPLIED.",
    "instruct_em_dash_break": "Describe a scenario\n—a real-world example—in which blockchain technology could be successfully applied.",
    "instruct_extra_punct": "Describe.. a scenario?! in which blockchain technology... could be successfully applied!??",
    "instruct_hashtags": "Describe a scenario in which blockchain technology could be successfully applied. #Blockchain #Tech #Scenario #UseCases",
    "instruct_inline_ad": "Describe a scenario [Download Our Whitepaper on Blockchain Use Cases!] in which blockchain technology could be successfully applied.",
    "instruct_inline_url": "Describe a scenario (visit example.com/blockchain-cases for info) in which blockchain technology could be successfully applied.",
    "instruct_interrobang": "Describe a scenario in which blockchain technology could be successfully applied?!",
    "instruct_key_smash": "Describe a scenario in which blockchain technology could be successfully applied. sdfjkl;asdlfkj",
    "instruct_leet_speak": "D3scr1b3 @ sc3n@r10 1n wh1ch bl0ckch@1n t3chn0l0gy c0uld b3 succ3ssfull\\/ @ppl13d.",
    "instruct_misplaced_commas": "Describe, a scenario, in which, blockchain, technology, could be, successfully, applied.",
    "instruct_missing_bracket": "Describe a scenario [e.g., supply chain in which blockchain technology could be successfully applied.",
    "instruct_missing_bracket_and_quote": "Describe a 'scenario [like digital identity management] in which blockchain technology could be successfully applied.",
    "instruct_missing_quote": "Describe a scenario, like \"digital identity management, in which blockchain technology could be successfully applied.",
    "instruct_no_caps": "describe a scenario in which blockchain technology could be successfully applied.",
    "instruct_no_punct": "Describe a scenario in which blockchain technology could be successfully applied",
    "instruct_one_typo_punctuation": "Describe a scenario in which blockchain technology could be successfully applied?",
    "instruct_oxford_comma": "Describe a scenario, in which blockchain technology could be successfully applied.",
    "instruct_parenthetical_aside": "Describe a scenario (perhaps in supply chain management) in which blockchain technology could be successfully applied.",
    "instruct_random_caps": "DesCrIBe a scEnaRiO iN whIch BloCkchaiN tEchnolOgy cOulD Be suCcesSfullY aPPlied.",
    "instruct_sms_abbrev": "Dscrbe a scenario in wch blockchain tech cld b succsflly aplyd.",
    "instruct_three_typos_punctuation": "Describe a scenario... in which blockchain technology could be successfully applied?!",
    "instruct_two_typos_punctuation": "Describe a scenario, in which blockchain technology could be successfully applied?!",
    "instruct_typo_adjacent": "Deecribe a xcenario in whuch blickchain yechnology ciukd be syccessfully wpplied.",
    "instruct_typo_extra_letter": "Descriibe a scenaario in which blockchaine technologyy could be successfuly appplied.",
    "instruct_typo_extra_space": "Describe a scenario in which blockchain techno logy could be success fully applied.",
    "instruct_typo_homophone": "Describe a scenario inn witch blockchain technology could be successfully applied.",
    "instruct_typo_missing_letter": "Descrbe a scnario in whch blockchin technolgy coud be succesfuly appied.",
    "instruct_typo_missing_space": "Describeascenarioinwhichblockchaintechnologycouldbesuccessfullyapplied.",
    "instruct_typo_missing_vowels": "Dscrb a scnr n whch blckchn tchnlgy cld b sccssflly pplid.",
    "instruct_typo_random": "Descrebe a sdenario in whch blockchein technokogy coukd be succesefully appllied.",
    "instruct_typo_repeated_letters": "Descrriibe a scennario in which bloockchain techhnology coould be succeessfuully appliedd.",
    "instruct_typo_swap": "Desrcibe a secanrio ni whcih blockhcian techonolgy culod eb sccuessfluly appiled.",
    "instruct_typo_swap_and_punctuation": "Desrcibe a scneario, ni whcih blockhcain techonolgy culod eb sccuessfluly appiled?!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Dscribe a snceario in wich blokchain technolgy could be succesfull applide...?!",
    "instruct_typo_transpose": "Dscribe a snceario in wich blokchain technolgy could be succesfull applide.",
    "instruct_typo_wrong_letter": "Dexcribe a scenariu in which blockchcin techbolocy could be succespfully appliyd.",
    "output": "Blockchain technology can be used for secure transactions and fast payments. For example, it could be used to store and process healthcare records, allowing secure and instantaneous sharing of information between doctors and patients. It can also be used for secure digital voting, allowing votes to be securely and accurately counted while still allowing voters to stay anonymous.",
    "prompt_id": "edff32c0-e80d-46ef-a296-78b1e4cfe4ad"
  },
  {
    "prompt_count": 408,
    "instruction_original": "Complete the following analogy: Loud is to quiet as day is to",
    "input": "",
    "instruct_all_caps": "COMPLETE THE FOLLOWING ANALOGY: LOUD IS TO QUIET AS DAY IS TO",
    "instruct_em_dash_break": "Complete the following analogy---Loud is to quiet as day is to",
    "instruct_extra_punct": "Complete... the following analogy: Loud is to quiet... as day is to???",
    "instruct_hashtags": "Complete the following analogy: Loud is to quiet as day is to #analogy #wordpuzzle",
    "instruct_inline_ad": "Complete the following analogy (Try our new app!): Loud is to quiet as day is to",
    "instruct_inline_url": "Complete the following analogy (visit www.example.com): Loud is to quiet as day is to",
    "instruct_interrobang": "Complete the following analogy: Loud is to quiet as day is to?!",
    "instruct_key_smash": "Complete the following analogy: Loud is to quiet as day is to jfkal;sdjfkl;asdfj",
    "instruct_leet_speak": "C0mpl373 7h3 f0ll0w1n6 4n4l06y: L0ud 15 70 qu137 45 d4y 15 70",
    "instruct_misplaced_commas": "Complete the, following analogy: Loud is to quiet as day, is to",
    "instruct_missing_bracket": "Complete the following analogy: [Loud is to quiet as day is to",
    "instruct_missing_bracket_and_quote": "Complete the following analogy: [\"Loud is to quiet as day is to",
    "instruct_missing_quote": "Complete the following analogy: \"Loud is to quiet as day is to",
    "instruct_no_caps": "complete the following analogy: loud is to quiet as day is to",
    "instruct_no_punct": "Complete the following analogy Loud is to quiet as day is to",
    "instruct_one_typo_punctuation": "Complete the following analogy. Loud is to quiet as day is to",
    "instruct_oxford_comma": "Complete the following analogy, Loud is to quiet, as day is to",
    "instruct_parenthetical_aside": "Complete the following analogy (you know, the word puzzle): Loud is to quiet as day is to",
    "instruct_random_caps": "cOmplEtE tHe foLlOwInG anAlOgY: LoUd iS tO QuIeT aS DaY iS tO",
    "instruct_sms_abbrev": "Cmplt the folowing anlgy: Ld is to qiet as dae is to",
    "instruct_three_typos_punctuation": "Complete? the following analogy; Loud is to quiet as day is to.",
    "instruct_two_typos_punctuation": "Complete? the following analogy. Loud is to quiet as day is to",
    "instruct_typo_adjacent": "Complwte the following analogt: Loud is yo quite as day is to",
    "instruct_typo_extra_letter": "Compllete the following aanalogy: Loudd is to quiett as day is to",
    "instruct_typo_extra_space": "Complete the following analogy: Loud is to quiet as day is to ",
    "instruct_typo_homophone": "Complete the following analogy: Loud is to quite as day is two",
    "instruct_typo_missing_letter": "Complet the followig analogy: Loud is t quiet as day is to",
    "instruct_typo_missing_space": "Completethefollowinganalogy:Loudistoquietasdayisto",
    "instruct_typo_missing_vowels": "Cmplt th fllwng nlgy: Ld s t qet s dy s t",
    "instruct_typo_random": "Complete the fpllowing analogy: Loud is to quiet as dry is to",
    "instruct_typo_repeated_letters": "Compleete the following anallogy: Loooud is to quiet as daaay is to",
    "instruct_typo_swap": "Copmlete the following analgoy: Luod is to qui et as day is to",
    "instruct_typo_swap_and_punctuation": "Copmlete? the following analgoy: Luod is to qui et as day is to",
    "instruct_typo_swap_and_transpose_and_punctuation": "Compelet? the following anlogy; Lou dis to qiuet as day is to!",
    "instruct_typo_transpose": "Compelet the following anlogy: Lou dis to qiuet as day is to",
    "instruct_typo_wrong_letter": "Complete the fowlloing analogy: Loud is to quuet as day is to",
    "output": "Night.",
    "prompt_id": "d138a6dd-b2c6-4236-b95b-f279fe2ff5f7"
  },
  {
    "prompt_count": 409,
    "instruction_original": "Create an example of alliteration.",
    "input": "",
    "instruct_all_caps": "CREATE AN EXAMPLE OF ALLITERATION.",
    "instruct_em_dash_break": "Create an example—of alliteration.",
    "instruct_extra_punct": "Create an example of alliteration?!.",
    "instruct_hashtags": "Create an example of alliteration. #alliteration #writing",
    "instruct_inline_ad": "Create an example of alliteration. (Discover the best alliteration examples!)",
    "instruct_inline_url": "Create an example of alliteration. (Find out more at example.com/alliteration)",
    "instruct_interrobang": "Create an example of alliteration!?",
    "instruct_key_smash": "Create an example of alliteration. ghlkjh dsfa adsg.",
    "instruct_leet_speak": "Cr34t3 4n 3x4mpl3 0f 4ll1t3r4t10n.",
    "instruct_misplaced_commas": "Create, an example, of alliteration.",
    "instruct_missing_bracket": "[Create an example of alliteration.",
    "instruct_missing_bracket_and_quote": "'[Create an example of alliteration.",
    "instruct_missing_quote": "'Create an example of alliteration.",
    "instruct_no_caps": "create an example of alliteration.",
    "instruct_no_punct": "Create an example of alliteration",
    "instruct_one_typo_punctuation": "Create an example of alliteration,",
    "instruct_oxford_comma": "Create an example of alliteration.",
    "instruct_parenthetical_aside": "Create an example (like 'Peter Piper picked a peck of pickled peppers') of alliteration.",
    "instruct_random_caps": "cReAtE aN ExAmPlE Of aLLiTeRaTiOn.",
    "instruct_sms_abbrev": "Cre8 an eg of alitera8n.",
    "instruct_three_typos_punctuation": "Create an example of alliteration?!.",
    "instruct_two_typos_punctuation": "Create an example of alliteration:;",
    "instruct_typo_adjacent": "Cresye an exsmple of allitsstion.",
    "instruct_typo_extra_letter": "Creeate an exaample of allitteration.",
    "instruct_typo_extra_space": "Create an example of alliterati on.",
    "instruct_typo_homophone": "Kreat an example of alliteration.",
    "instruct_typo_missing_letter": "Crate an exame of alliteration.",
    "instruct_typo_missing_space": "Createanexampleofalliteration.",
    "instruct_typo_missing_vowels": "Crt n xmpl f lltrtn.",
    "instruct_typo_random": "Creatte an exaple of allitrationn.",
    "instruct_typo_repeated_letters": "Creeate an exaaample of allitteratiion.",
    "instruct_typo_swap": "Creaet an exmaple of allitretaion.",
    "instruct_typo_swap_and_punctuation": "Creaet an exmaple of allitretaion?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Carete an eaxmple of allitretaion,.",
    "instruct_typo_transpose": "Cereta an eaxmple of aliteration.",
    "instruct_typo_wrong_letter": "Cweate an examole of allitsration.",
    "output": "Sweet slippery snakes.",
    "prompt_id": "ede2bf5f-3d5a-4b59-991f-4885f2a9ab57"
  },
  {
    "prompt_count": 410,
    "instruction_original": "Classify the following words by their grammatical categories: walk, interesting, quickly",
    "input": "",
    "instruct_all_caps": "CLASSIFY THE FOLLOWING WORDS BY THEIR GRAMMATICAL CATEGORIES: WALK, INTERESTING, QUICKLY",
    "instruct_em_dash_break": "Classify the following words—by their grammatical categories—walk, interesting, quickly",
    "instruct_extra_punct": "Classify the following words by their grammatical categories!!!: walk, interesting... quickly???",
    "instruct_hashtags": "Classify the following words by their grammatical categories: walk, interesting, quickly #grammar #words #classification",
    "instruct_inline_ad": "Classify the following words (Buy Now! Limited Stock!) by their grammatical categories: walk, interesting, quickly",
    "instruct_inline_url": "Classify the following words (Find out more: http://example.com/grammar) by their grammatical categories: walk, interesting, quickly",
    "instruct_interrobang": "Classify the following words by their grammatical categories: walk, interesting, quickly!?",
    "instruct_key_smash": "Classify the following words by their grammatical categories: walk, interesting, quickly asdfg",
    "instruct_leet_speak": "CL4551FY 7H3 F0LL0W1N6 W0RD5 BY 7H31R 6R4MM471C4L C47360R135: W4LK, 1N73R3571N6, Qu1CKLY",
    "instruct_misplaced_commas": "Classify the, following words, by their grammatical, categories: walk, interesting, quickly",
    "instruct_missing_bracket": "Classify the following words by their grammatical categories: walk, interesting, quickly)",
    "instruct_missing_bracket_and_quote": "Classify the following words by their grammatical categories: walk\", interesting, quickly)",
    "instruct_missing_quote": "Classify the following words by their grammatical categories: \"walk, interesting, quickly",
    "instruct_no_caps": "classify the following words by their grammatical categories: walk, interesting, quickly",
    "instruct_no_punct": "Classify the following words by their grammatical categories walk interesting quickly",
    "instruct_one_typo_punctuation": "Classify the following words by their grammatical categories; walk, interesting, quickly.",
    "instruct_oxford_comma": "Classify the following words by their grammatical categories: walk, interesting, and quickly.",
    "instruct_parenthetical_aside": "Classify the following words (the ones I listed) by their grammatical categories: walk, interesting, quickly",
    "instruct_random_caps": "cLaSsIfY ThE FoLlOwInG WoRdS By tHeIr gRaMmAtIcAl cAtEgOrIeS: wAlK, iNtErEsTiNg, QuIcKlY",
    "instruct_sms_abbrev": "Clasify the fllwing wrds by thr gramatical catgories: wk, intresting, qckly",
    "instruct_three_typos_punctuation": "Classify the following words! by their grammatical categories? walk; interesting, quickly.",
    "instruct_two_typos_punctuation": "Classify the following words by their grammatical categories: walk, interesting? quickly!",
    "instruct_typo_adjacent": "Classufy the following words by their grammatical catergories: walk, interesting, quickly",
    "instruct_typo_extra_letter": "Classify the followingg words by theirr grammatical categories: walk, interesting, quickly",
    "instruct_typo_extra_space": "Classify the following words by their grammatical categories: walk, interesting, quickly ",
    "instruct_typo_homophone": "Classify the following words bye their grammatical categories: walk, interesting, quickly",
    "instruct_typo_missing_letter": "Classify the following wods by their grammatical categories: walk, interesing, quickly",
    "instruct_typo_missing_space": "Classify thefollowing words by their grammatical categories: walk, interesting, quickly",
    "instruct_typo_missing_vowels": "Clssfy th fllwng wrds by thr grmmtcl ctgrs: walk, intresting, qckly",
    "instruct_typo_random": "Classify the followong words by their gramatical categories: walk, interesting, quickly",
    "instruct_typo_repeated_letters": "Classsify the followingg words by their grammatical categories: walk, interesting, quickkly",
    "instruct_typo_swap": "Classiyf the folowing words by their grammatical categories: walk, interesting, quickly",
    "instruct_typo_swap_and_punctuation": "Classiyf the folowing words by their grammatical categories: walk, interesting, quickly?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Classiyf the folowing wrdos by their grammatical categories: walk, interesting, quickly!",
    "instruct_typo_transpose": "Classsify the following wrdos by their grammatical categories: walk, interesting, quickly",
    "instruct_typo_wrong_letter": "Classify the following wordz by their grammatical categorief: walk, interesting, quickly",
    "output": "Verb: walk; Adjective: interesting; Adverb: quickly.",
    "prompt_id": "a7b91d41-097e-46a5-9daf-f673f04d85cc"
  },
  {
    "prompt_count": 411,
    "instruction_original": "Find the greatest common factor of 12 and 18.",
    "input": "12 & 18",
    "instruct_all_caps": "FIND THE GREATEST COMMON FACTOR OF 12 AND 18.",
    "instruct_em_dash_break": "Find the greatest—common factor—of 12 and 18.",
    "instruct_extra_punct": "Find the greatest common factor of 12 and 18!!!...",
    "instruct_hashtags": "Find the greatest common factor of 12 and 18. #math #GCF",
    "instruct_inline_ad": "Find the greatest common factor of 12 and 18. Click here for discounts!",
    "instruct_inline_url": "Find the greatest common factor of 12 and 18. https://example.com/math",
    "instruct_interrobang": "Find the greatest common factor of 12 and 18‽",
    "instruct_key_smash": "Find the greatest common factor of 12 and 18. asdfghjkl;",
    "instruct_leet_speak": "F1nd th3 gr34t3st c0mm0n f4ct0r 0f 12 4nd 18.",
    "instruct_misplaced_commas": "Find, the greatest, common, factor, of 12, and 18.",
    "instruct_missing_bracket": "Find the greatest common factor of 12 and 18.",
    "instruct_missing_bracket_and_quote": "Find the greatest common factor of 12 and 18.",
    "instruct_missing_quote": "Find the greatest common factor of 12 and 18.",
    "instruct_no_caps": "find the greatest common factor of 12 and 18.",
    "instruct_no_punct": "Find the greatest common factor of 12 and 18",
    "instruct_one_typo_punctuation": "Find the greatest common factor of 12 and 18,",
    "instruct_oxford_comma": "Find the greatest common factor of 12, and 18.",
    "instruct_parenthetical_aside": "Find the greatest common factor (the GCF) of 12 and 18.",
    "instruct_random_caps": "fInD tHe GrEaTeSt cOmMoN fAcToR oF 12 AnD 18.",
    "instruct_sms_abbrev": "fnd th grtst cmn fctr of 12 & 18.",
    "instruct_three_typos_punctuation": "Find the greatest common factor of 12 and 18,?!",
    "instruct_two_typos_punctuation": "Find the greatest common factor of 12 and 18,!",
    "instruct_typo_adjacent": "Find the greayest common factor of 12 and 18.",
    "instruct_typo_extra_letter": "Find the greattest common factor of 12 and 18.",
    "instruct_typo_extra_space": "Find the greatest common factor of 12 and 18. ",
    "instruct_typo_homophone": "Find the grateast common factor of 12 and 18.",
    "instruct_typo_missing_letter": "Find the greatest ommon factor of 12 and 18.",
    "instruct_typo_missing_space": "Findthegreatestcommonfactorof12and18.",
    "instruct_typo_missing_vowels": "Fnd th grtst cmn fctr of 12 nd 18.",
    "instruct_typo_random": "Find the grestest common factor of 12 and 18.",
    "instruct_typo_repeated_letters": "Find the greatesst common factor of 12 and 18.",
    "instruct_typo_swap": "Fiend the greatest common factor of 12 and 18.",
    "instruct_typo_swap_and_punctuation": "Fiend the greatest common factor of 12 and 18!.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Fiend the greatesst common factor of 12 and 18?!",
    "instruct_typo_transpose": "Fidn the greatest common factor of 12 and 18.",
    "instruct_typo_wrong_letter": "Find the greatest common factor of 12 ant 18.",
    "output": "6.",
    "prompt_id": "1f967a42-a697-410c-8ff9-4b8d4af259cd"
  },
  {
    "prompt_count": 412,
    "instruction_original": "Come up with a riddle",
    "input": "",
    "instruct_all_caps": "COME UP WITH A RIDDLE",
    "instruct_em_dash_break": "Come up--with a riddle",
    "instruct_extra_punct": "Come! up? with, a. riddle?",
    "instruct_hashtags": "Come up with a riddle #riddle #puzzle",
    "instruct_inline_ad": "Come up with a riddle (Sponsored: Try our new riddle app!)",
    "instruct_inline_url": "Come up with a riddle (Visit example.com for more)",
    "instruct_interrobang": "Come up with a riddle?!",
    "instruct_key_smash": "Come up with a riddle asdfjkl;",
    "instruct_leet_speak": "C0m3 u9 w17h 4 r1ddl3",
    "instruct_misplaced_commas": "Come up, with, a, riddle",
    "instruct_missing_bracket": "Come up with a riddle]",
    "instruct_missing_bracket_and_quote": "Come up with a riddle",
    "instruct_missing_quote": "\"Come up with a riddle",
    "instruct_no_caps": "come up with a riddle",
    "instruct_no_punct": "Come up with a riddle",
    "instruct_one_typo_punctuation": "Come up with a riddle.",
    "instruct_oxford_comma": "Come up, with, and write a riddle",
    "instruct_parenthetical_aside": "Come up with a riddle (if you can)",
    "instruct_random_caps": "CoMe Up wITh a RiDDle",
    "instruct_sms_abbrev": "Come up w a riddle",
    "instruct_three_typos_punctuation": "Come up with a riddle?!.",
    "instruct_two_typos_punctuation": "Come up with a riddle?.",
    "instruct_typo_adjacent": "Ckms up sith a riddle",
    "instruct_typo_extra_letter": "Comee up wwith a riddle",
    "instruct_typo_extra_space": "Come  up  with  a  riddle",
    "instruct_typo_homophone": "Come up with a ridle",
    "instruct_typo_missing_letter": "Coe up wih a riddle",
    "instruct_typo_missing_space": "Comeup withariddle",
    "instruct_typo_missing_vowels": "Cm p wth a rddl",
    "instruct_typo_random": "Cmoe yp wth a ridl",
    "instruct_typo_repeated_letters": "Comee upp wiiith a riddle",
    "instruct_typo_swap": "Ocme pu wthi a rdidle",
    "instruct_typo_swap_and_punctuation": "Ocme pu wthi a rdidle.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Ocme pu htwi a ridlde!?",
    "instruct_typo_transpose": "Cmme op hwti a rddile",
    "instruct_typo_wrong_letter": "Cobe up with a ruddle",
    "output": "What's full of keys but can't open a single lock?\nAnswer: A piano.",
    "prompt_id": "c59e9c07-9bc2-4a1c-8254-e5e823345e06"
  },
  {
    "prompt_count": 413,
    "instruction_original": "Identify the conjugation of the verb: I will have helped",
    "input": "",
    "instruct_all_caps": "IDENTIFY THE CONJUGATION OF THE VERB: I WILL HAVE HELPED",
    "instruct_em_dash_break": "Identify the conjugation of the verb—the one provided—: I will have helped",
    "instruct_extra_punct": "Identify the conjugation of the verb...::: I will have helped???!!",
    "instruct_hashtags": "Identify the conjugation of the verb: I will have helped #grammar #verbtense #futureperfect",
    "instruct_inline_ad": "Identify the conjugation of the verb (Try Grammarly!): I will have helped",
    "instruct_inline_url": "Identify the conjugation of the verb (see example.com): I will have helped",
    "instruct_interrobang": "Identify the conjugation of the verb: I will have helped!?",
    "instruct_key_smash": "Identify the conjugation ajksdfhlkjasdhflkajsdhf of the verb: I will have helped",
    "instruct_leet_speak": "1d3nt1fy 7h3 c0nju6a710n 0f 7h3 v3rb: 1 w1ll h4v3 h3lp3d",
    "instruct_misplaced_commas": "Identify, the conjugation of, the verb: I will, have helped.",
    "instruct_missing_bracket": "Identify the conjugation of the verb: [I will have helped",
    "instruct_missing_bracket_and_quote": "Identify the conjugation of the verb: \"[I will have helped",
    "instruct_missing_quote": "Identify the conjugation of the verb: \"I will have helped",
    "instruct_no_caps": "identify the conjugation of the verb: i will have helped",
    "instruct_no_punct": "Identify the conjugation of the verb I will have helped",
    "instruct_one_typo_punctuation": "Identify the conjugation of the verb: I will have helped?",
    "instruct_oxford_comma": "Identify the tense, aspect, and voice, of the verb: I will have helped",
    "instruct_parenthetical_aside": "Identify the conjugation of the verb (the one specified): I will have helped",
    "instruct_random_caps": "iDeNtiFy tHe cOnjUgAtIoN oF tHe vErB: I WiLL hAvE hElPeD",
    "instruct_sms_abbrev": "Id da conj of da verb: I wil hav helpd",
    "instruct_three_typos_punctuation": "Identify the conjugation of the verb,,,: I will have helped..?!",
    "instruct_two_typos_punctuation": "Identify the conjugation of the verb: I will have helped!!?",
    "instruct_typo_adjacent": "Idwntify rhe conjygation of rhe verb: I wull have hwlped",
    "instruct_typo_extra_letter": "Identiffyy the conjuggaatiioon of the verrbb: I willl haavee helppedd",
    "instruct_typo_extra_space": "Identify the conju gation of the verb: I will have helped ",
    "instruct_typo_homophone": "Identify the conjugation of the verbe: I will halve helped",
    "instruct_typo_missing_letter": "Idntify the conjgation of the erb: I wil ave helpd",
    "instruct_typo_missing_space": "Identifytheconjugationoftheverb:Iwillhavehelped",
    "instruct_typo_missing_vowels": "Idntfy th cnjgtn f th vrb: I wll hv hlpd",
    "instruct_typo_random": "Idemtify the cnjugacion of the varb: I woll haev hel;ped",
    "instruct_typo_repeated_letters": "Identiify the conjuugation of the verbb: I willl have helpedd",
    "instruct_typo_swap": "Idnetify the cjonugation of the vreb: I wlil hvae hepled",
    "instruct_typo_swap_and_punctuation": "Idnetify the cjonugation of the vreb; I wlil hvae hepled!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Idenitfy the cjonugation of the vreb! I wlil ahve hepled?",
    "instruct_typo_transpose": "Idenitfy the cnojugation of the vebr: I wlil hovae helpde",
    "instruct_typo_wrong_letter": "Identify the nonjugation of the cerb: I will have xelped",
    "output": "Future perfect.",
    "prompt_id": "0ad84b39-e2c1-4ad7-88d0-fc7b3c768712"
  },
  {
    "prompt_count": 414,
    "instruction_original": "What is the first rule of storytelling?",
    "input": "",
    "instruct_all_caps": "WHAT IS THE FIRST RULE OF STORYTELLING?",
    "instruct_em_dash_break": "What is the first rule—of storytelling—?",
    "instruct_extra_punct": "What is the first rule??? of storytelling???",
    "instruct_hashtags": "What is the first rule of storytelling? #storytelling #rules",
    "instruct_inline_ad": "What is the first rule of storytelling? (Check out our latest course!)",
    "instruct_inline_url": "What is the first rule of storytelling? https://example.com/rules",
    "instruct_interrobang": "What is the first rule of storytelling?!",
    "instruct_key_smash": "What is the first rule of storytelling? lkjhgfds",
    "instruct_leet_speak": "Wh4t i5 th3 f1r5t ru13 0f 5t0ry7311ing?",
    "instruct_misplaced_commas": "What, is the first, rule of, storytelling?",
    "instruct_missing_bracket": "What is the first rule [of storytelling?",
    "instruct_missing_bracket_and_quote": "What is the first rule [of storytelling?",
    "instruct_missing_quote": "What is the first rule of storytelling?",
    "instruct_no_caps": "what is the first rule of storytelling?",
    "instruct_no_punct": "What is the first rule of storytelling",
    "instruct_one_typo_punctuation": "What is the first rule of storytelling.",
    "instruct_oxford_comma": "What is the first rule of storytelling?",
    "instruct_parenthetical_aside": "What is the first rule (the fundamental principle) of storytelling?",
    "instruct_random_caps": "WhAt iS tHe fIrSt rUlE oF sToRyTeLlInG?",
    "instruct_sms_abbrev": "Wut is da 1st rul of storytellin?",
    "instruct_three_typos_punctuation": "What; is the first rule of storytelling\"!",
    "instruct_two_typos_punctuation": "What is the first rule of storytelling,?",
    "instruct_typo_adjacent": "Whqt us the fiest rule of storytellinf?",
    "instruct_typo_extra_letter": "What is the firrst rule of storytelling?",
    "instruct_typo_extra_space": "What is the first rule of story telling?",
    "instruct_typo_homophone": "What are the first rule of storytelling?",
    "instruct_typo_missing_letter": "What is the fist rule of storytelling?",
    "instruct_typo_missing_space": "Whatisthefirstruleofstorytelling?",
    "instruct_typo_missing_vowels": "Wht is th frst rl of strytllng?",
    "instruct_typo_random": "Whzt us the fjrst rulp of storytealing?",
    "instruct_typo_repeated_letters": "Whhat is thhe firrst rule of storytellling?",
    "instruct_typo_swap": "Whta si the frsit ruel fo sotryteling?",
    "instruct_typo_swap_and_punctuation": "Whta si the frsit ruel fo sotryteling.\"?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Whta is teh frist ruel of storyteillng;?",
    "instruct_typo_transpose": "Waht is the frist rule of storyteillng?",
    "instruct_typo_wrong_letter": "What is the fiest rule of storytelling?",
    "output": "The first rule of storytelling is to hook the audience in the very first few sentences.",
    "prompt_id": "e5282352-6d59-4436-b0fa-177a958de986"
  },
  {
    "prompt_count": 415,
    "instruction_original": "Rewrite the sentence into more descriptive form:\nThe food was delicious.",
    "input": "",
    "instruct_all_caps": "THE EXPERTLY CRAFTED DISH, RICH WITH COMPLEX FLAVORS AND ENTICING AROMAS, OFFERED A TRULY REMARKABLE CULINARY EXPERIENCE.",
    "instruct_em_dash_break": "The expertly crafted dish—rich with complex flavors and enticing aromas—offered a truly remarkable culinary experience.",
    "instruct_extra_punct": "The expertly crafted dish,,,, rich with complex flavors and enticing aromas,,, offered a truly remarkable culinary experience!!!???",
    "instruct_hashtags": "The expertly crafted dish, rich with complex flavors and enticing aromas, offered a truly remarkable culinary experience. #Foodie #Gourmet #Delicious",
    "instruct_inline_ad": "The expertly crafted dish, rich with complex flavors and enticing aromas, offered a truly remarkable culinary experience. [Experience the Best Food Ever!]",
    "instruct_inline_url": "The expertly crafted dish, rich with complex flavors and enticing aromas, offered a truly remarkable culinary experience. Check out delicious-recipes.com!",
    "instruct_interrobang": "The expertly crafted dish, rich with complex flavors and enticing aromas, offered a truly remarkable culinary experience!?",
    "instruct_key_smash": "The expertly crafted dish, rich with complex flavors and enticing aromas, offered a truly remarkable culinary experience. dfghjklkjhgfdsa",
    "instruct_leet_speak": "Th3 3xp3rtly cr4ft3d d15h, r1ch w1th c0mpl3x fl4v0r5 4nd 3nt1c1ng 4r0m45, 0ff3r3d 4 truly r3m4rk4bl3 cul1n4ry 3xp3r13nc3.",
    "instruct_misplaced_commas": "The, expertly crafted dish, rich with complex flavors, and enticing aromas, offered, a truly remarkable culinary, experience.",
    "instruct_missing_bracket": "The expertly crafted dish (rich with complex flavors and enticing aromas offered a truly remarkable culinary experience.",
    "instruct_missing_bracket_and_quote": "The expertly crafted dish (rich with complex flavors and enticing aromas offered a truly 'remarkable culinary experience.",
    "instruct_missing_quote": "The expertly crafted dish, rich with complex flavors and enticing aromas, offered a truly 'remarkable culinary experience.",
    "instruct_no_caps": "the expertly crafted dish, rich with complex flavors and enticing aromas, offered a truly remarkable culinary experience.",
    "instruct_no_punct": "The expertly crafted dish rich with complex flavors and enticing aromas offered a truly remarkable culinary experience",
    "instruct_one_typo_punctuation": "The expertly crafted dish, rich with complex flavors and enticing aromas, offered a truly remarkable culinary experience:",
    "instruct_oxford_comma": "The expertly crafted dish, rich with complex flavors, enticing aromas, and a delightful texture, offered a truly remarkable culinary experience.",
    "instruct_parenthetical_aside": "The expertly crafted dish (rich with complex flavors and enticing aromas) offered a truly remarkable culinary experience.",
    "instruct_random_caps": "tHe eXpErTlY CrAfTeD DiSh, rIcH WiTh CoMpLeX FlAvOrS AnD EnTiCiNg ArOmAs, OfFeReD A TrUlY ReMaRkAbLe CuLiNaRy ExPeRiEnCe.",
    "instruct_sms_abbrev": "Th expertli craftd dish, rich wiv cmplx flvrs n enticing armaz, oferd a truli rmorkabl culnry exp.",
    "instruct_three_typos_punctuation": "The expertly crafted dish. rich with complex flavors and enticing aromas? offered a truly remarkable culinary experience!",
    "instruct_two_typos_punctuation": "The expertly crafted dish; rich with complex flavors and enticing aromas, offered a truly remarkable culinary experience.",
    "instruct_typo_adjacent": "Thr expertpy crafred dish, ruxh with codplex flavors and entici g aromas, offerec a truy remarkable culi ary wxperienxe.",
    "instruct_typo_extra_letter": "The expertlly craftted dishh, riich wiith compmlex flavoors and enticiing aromaas, offereed a truuly remaarkabble cullinary experiencee.",
    "instruct_typo_extra_space": "The expertly crafted dish, rich with co mplex flavo rs and enticing arom as, offered a truly rem arka ble culin ary experience.",
    "instruct_typo_homophone": "Their expertly crafted dish, rich with complex flavours and enticing aromas, offered a truly remarkable culinary experience.",
    "instruct_typo_missing_letter": "The expertly crfted dish, rich with cmplex flvors and entcing aromas, oferred a trly remakable culnary experiece.",
    "instruct_typo_missing_space": "Theexpertlycrafteddish,richwithcomplexflavorsandenticingaromas,offeredatrulyremarkableculinaryexperience.",
    "instruct_typo_missing_vowels": "Th exprtly crftd dsh, rch wth cmplx flvrs nd ntcing rms, ffrd trly rmrkbl clnry exprnc.",
    "instruct_typo_random": "THe expretly crafterd dish, rich woth complax flavers and enticin aromas, oeffred a trultt emarkable culiinary experienc.",
    "instruct_typo_repeated_letters": "The expertlly craftted dish, ricch with commplex flavoors and enticiing aromaas, offeered a trully reemarkable culinaary experrience.",
    "instruct_typo_swap": "Teh exprtley carfted dhis, rcih wtih cobmplex flaovrs nad etnicnig aormas, ofefrd a trlye reamrkable cuilnary expeirence.",
    "instruct_typo_swap_and_punctuation": "Teh exprtley carfted dhis; rcih wtih cobmplex flaovrs nad etnicnig aormas, ofefrd a trlye reamrkable cuilnary expeirence?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Teh exeprly craefd dsih? ric htiw coemple xflavros adn enticng aoarms, oferfed a tuly rmeakrabl cuinaery expierenc!",
    "instruct_typo_transpose": "Teh exeprltly craefd dsih, ric htiw coemple xflavros adn etniicng aoarms, oferfed a tuly rmeakrabl cuinary expeirnec.",
    "instruct_typo_wrong_letter": "The exportly crafged dish, rich with comolex flavurs and entjcing arombs, offerd a trgly remarkable culnary experence.",
    "output": "The food was succulent and tantalizing to the taste buds.",
    "prompt_id": "dcad129b-9dc8-4aee-97b4-b8ad25c32623"
  },
  {
    "prompt_count": 416,
    "instruction_original": "Name 5 emotional states",
    "input": "",
    "instruct_all_caps": "NAME 5 EMOTIONAL STATES",
    "instruct_em_dash_break": "Name 5--emotional states",
    "instruct_extra_punct": "Name 5 emotional states!!!",
    "instruct_hashtags": "Name 5 emotional states #emotions #feelings",
    "instruct_inline_ad": "Name 5 emotional states - Try our new emotional support app!",
    "instruct_inline_url": "Name 5 emotional states - see example at example.com/emotions",
    "instruct_interrobang": "Name 5 emotional states?!",
    "instruct_key_smash": "Name 5 emotional states asdfghjkl",
    "instruct_leet_speak": "N4m3 5 3m0t10n4l 5t4t35",
    "instruct_misplaced_commas": "Name, 5 emotional, states",
    "instruct_missing_bracket": "Name 5 emotional states (important info",
    "instruct_missing_bracket_and_quote": "'Name 5 emotional states' (my task",
    "instruct_missing_quote": "'Name 5 emotional states",
    "instruct_no_caps": "name 5 emotional states",
    "instruct_no_punct": "Name 5 emotional states",
    "instruct_one_typo_punctuation": "Name 5 emotional states?",
    "instruct_oxford_comma": "Name five emotional states including joy, sadness, anger, fear, and surprise.",
    "instruct_parenthetical_aside": "Name 5 emotional states (you know, feelings)",
    "instruct_random_caps": "NAme 5 emOtioNAl sTaTeS",
    "instruct_sms_abbrev": "Nm 5 emo states",
    "instruct_three_typos_punctuation": "Name, 5 emotional. states?",
    "instruct_two_typos_punctuation": "Name? 5 emotional states!",
    "instruct_typo_adjacent": "Nsme 5 emotional ststes",
    "instruct_typo_extra_letter": "Namee 5 emotional states",
    "instruct_typo_extra_space": "Name 5 e motional states",
    "instruct_typo_homophone": "Know 5 emotional states",
    "instruct_typo_missing_letter": "Nam 5 emotional states",
    "instruct_typo_missing_space": "Name5emotionalstates",
    "instruct_typo_missing_vowels": "Nm 5 mtionl stts",
    "instruct_typo_random": "Name 5 emotiopnal states",
    "instruct_typo_repeated_letters": "Nammee 5 emoottiionnal states",
    "instruct_typo_swap": "Nmae 5 emotianol sattse",
    "instruct_typo_swap_and_punctuation": "Nmae 5 emotianol states?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Nmae 5 emtoional sttase?",
    "instruct_typo_transpose": "Naem 5 emtoional sttase",
    "instruct_typo_wrong_letter": "Name 5 emotipnal states",
    "output": "Joy, sadness, fear, anger, and disgust.",
    "prompt_id": "91628790-aef6-437a-8f30-a0195db53e40"
  },
  {
    "prompt_count": 417,
    "instruction_original": "Create a funny one-liner.",
    "input": "",
    "instruct_all_caps": "CREATE A FUNNY ONE-LINER.",
    "instruct_em_dash_break": "Create a funny—one-liner.",
    "instruct_extra_punct": "Create a funny one-liner!!!!.",
    "instruct_hashtags": "Create a funny one-liner #funny #oneliner",
    "instruct_inline_ad": "Create a funny one-liner (Try hilarious jokes at jokes.com!).",
    "instruct_inline_url": "Create a funny one-liner (more info: example.com).",
    "instruct_interrobang": "Create a funny one-liner‽",
    "instruct_key_smash": "Create a funny one-liner sdfghjkl.",
    "instruct_leet_speak": "Cr34t3 a fvnn¥ 0n3-l1n3r.",
    "instruct_misplaced_commas": "Create, a, funny one-liner.",
    "instruct_missing_bracket": "(Create a funny one-liner.",
    "instruct_missing_bracket_and_quote": "['Create a funny one-liner.",
    "instruct_missing_quote": "'Create a funny one-liner.",
    "instruct_no_caps": "create a funny one-liner.",
    "instruct_no_punct": "Create a funny one liner",
    "instruct_one_typo_punctuation": "Create a funny one-liner,",
    "instruct_oxford_comma": "Create, a funny one-liner.",
    "instruct_parenthetical_aside": "Create a funny (or maybe not so funny) one-liner.",
    "instruct_random_caps": "cReAtE a fUnNy OnE-lInEr.",
    "instruct_sms_abbrev": "cre8 a fny 1-liner.",
    "instruct_three_typos_punctuation": "Create, a funny?? one-liner...",
    "instruct_two_typos_punctuation": "Create a funny? one-liner..",
    "instruct_typo_adjacent": "Create a funnu one-liner.",
    "instruct_typo_extra_letter": "Creatte a funny one-liner.",
    "instruct_typo_extra_space": "Create a funny one -liner.",
    "instruct_typo_homophone": "Create a funny won-liner.",
    "instruct_typo_missing_letter": "Creat a funny one-liner.",
    "instruct_typo_missing_space": "Createafunnyone-liner.",
    "instruct_typo_missing_vowels": "Crate a fnny ne-lnr.",
    "instruct_typo_random": "Creatw a funny one-liner.",
    "instruct_typo_repeated_letters": "Creaate a funnyy one-liner.",
    "instruct_typo_swap": "Cretae a funny one-liner.",
    "instruct_typo_swap_and_punctuation": "Cretae a funny one-liner,",
    "instruct_typo_swap_and_transpose_and_punctuation": "Ceratw a funny one-liner:",
    "instruct_typo_transpose": "Ceratw a funny one-liner.",
    "instruct_typo_wrong_letter": "Create a funny onc-liner.",
    "output": "I used to think the brain was the most important organ. Then I thought, look what's telling me that!",
    "prompt_id": "29cb4c6a-3d3d-4f6f-ba15-0f0c0a189c24"
  },
  {
    "prompt_count": 418,
    "instruction_original": "Generate a list of fashion trends for Spring 2021.",
    "input": "",
    "instruct_all_caps": "GENERATE A LIST OF FASHION TRENDS FOR SPRING 2021.",
    "instruct_em_dash_break": "Generate a list--of fashion trends--for Spring 2021.",
    "instruct_extra_punct": "Generate... a list??! of fashion trends!!!! for Spring 2021??",
    "instruct_hashtags": "Generate a list of fashion trends for Spring 2021. #fashiontrends #Spring2021 #trends",
    "instruct_inline_ad": "Generate a list of fashion trends for Spring 2021. (Shop the look at ExampleBrand.com!)",
    "instruct_inline_url": "Generate a list of fashion trends for Spring 2021. (Find more info at https://example.com/fashion)",
    "instruct_interrobang": "Generate a list of fashion trends for Spring 2021!?",
    "instruct_key_smash": "Generate a list of fashion trends for Spring 2021. asdfghjkl;",
    "instruct_leet_speak": "G3n3r473 4 l1$7 0f f4$h10n 7r3nd$ f0r $pr1ng 2021.",
    "instruct_misplaced_commas": "Generate a list, of fashion trends, for Spring 2021.",
    "instruct_missing_bracket": "Generate a list of fashion trends for Spring 2021.",
    "instruct_missing_bracket_and_quote": "Generate a list of fashion trends for Spring 2021.",
    "instruct_missing_quote": "Generate a list of fashion trends for Spring 2021.",
    "instruct_no_caps": "generate a list of fashion trends for spring 2021.",
    "instruct_no_punct": "Generate a list of fashion trends for Spring 2021",
    "instruct_one_typo_punctuation": "Generate a list of fashion trends for Spring 2021?",
    "instruct_oxford_comma": "Generate a list of fashion, trends, for Spring 2021.",
    "instruct_parenthetical_aside": "Generate a list of fashion trends (the ones that are popular right now) for Spring 2021.",
    "instruct_random_caps": "GenERaTe A lIsT Of FAsHiON TrEnDS FoR SpRinG 2021.",
    "instruct_sms_abbrev": "Gen a list of fash trends 4 sprg 2021.",
    "instruct_three_typos_punctuation": "Generate a list of fashion trends for Spring 2021...?!",
    "instruct_two_typos_punctuation": "Generate a list of fashion trends for Spring 2021!!",
    "instruct_typo_adjacent": "Henerate a kist of fasgion trenfs for Sprijg 2021.",
    "instruct_typo_extra_letter": "Generaate a list of fashionss trendss for Spring 2021.",
    "instruct_typo_extra_space": "Generate a list of fashion trends for Spring  2021.",
    "instruct_typo_homophone": "Generate a list of fashion trends fore Spring 2021.",
    "instruct_typo_missing_letter": "Generat a list of fashon trends for Spring 2021.",
    "instruct_typo_missing_space": "Generatea listof fashiontrends forSpring 2021.",
    "instruct_typo_missing_vowels": "Gnrt a lst of fshn trnds fr Sprng 2021.",
    "instruct_typo_random": "Gen3erate a list of fash1on tren$s for Spring 2O21.",
    "instruct_typo_repeated_letters": "Generate a list of fashionn trends for Sprinng 2021.",
    "instruct_typo_swap": "Geenrate a lsit of fashion trends for Spring 2021.",
    "instruct_typo_swap_and_punctuation": "Geenrate a lsit of fashion trends for Spring 2021!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Geenrate a lsit of fashion trends for Spriung 2021?!",
    "instruct_typo_transpose": "Generate a lsit of fashion trends for Spriung 2021.",
    "instruct_typo_wrong_letter": "Henerate a kist of fashion trends for Spring 2021.",
    "output": "Spring 2021 fashion trends include bright colors, tie-dye and other prints, polka dots, pastels, boho style, flared jeans and trousers, utilitarian looks, earthy tones, sustainable fabrics, and cropped tops.",
    "prompt_id": "3a8ed918-6d7c-4673-9c19-906a5ef314b1"
  },
  {
    "prompt_count": 419,
    "instruction_original": "What is the impact of deforestation on wildlife?",
    "input": "",
    "instruct_all_caps": "WHAT IS THE IMPACT OF DEFORESTATION ON WILDLIFE?",
    "instruct_em_dash_break": "What is the impact—of deforestation—on wildlife?",
    "instruct_extra_punct": "What is the impact of deforestation on wildlife?!?!?",
    "instruct_hashtags": "What is the impact of deforestation on wildlife? #deforestation #wildlife #environment",
    "instruct_inline_ad": "What is the impact of deforestation on wildlife? Protect wildlife - plant a tree today!",
    "instruct_inline_url": "What is the impact of deforestation on wildlife? Learn more here: https://example.com/wildlife-impacts",
    "instruct_interrobang": "What is the impact of deforestation on wildlife‽",
    "instruct_key_smash": "What is the impact of deforestation on wildlife? fdsaiojkl",
    "instruct_leet_speak": "Wh47 i5 7h3 im94c7 0f d3f0r35747i0n 0n w!ldl1f3?",
    "instruct_misplaced_commas": "What, is the impact, of deforestation, on wildlife?",
    "instruct_missing_bracket": "What is the impact [of deforestation on wildlife?",
    "instruct_missing_bracket_and_quote": "'What is the impact [of deforestation on wildlife?",
    "instruct_missing_quote": "'What is the impact of deforestation on wildlife?",
    "instruct_no_caps": "what is the impact of deforestation on wildlife?",
    "instruct_no_punct": "What is the impact of deforestation on wildlife",
    "instruct_one_typo_punctuation": "What is the impact of deforestation on wildlife.",
    "instruct_oxford_comma": "What is the impact, of deforestation on wildlife?",
    "instruct_parenthetical_aside": "What is the impact of deforestation (like cutting down trees) on wildlife?",
    "instruct_random_caps": "wHaT iS tHe iMPacT oF dEfOrEsTAtiON oN wIlDlIFe?",
    "instruct_sms_abbrev": "Wut is the impct of deforest8n on wldlf?",
    "instruct_three_typos_punctuation": "What is the impact of deforestation on wildlife???..?!",
    "instruct_two_typos_punctuation": "What is the impact of deforestation on wildlife!?",
    "instruct_typo_adjacent": "Whst is the impqct of deforestatipn on wildklife?",
    "instruct_typo_extra_letter": "Whhat is the impactt of deforestationn on wildlife?",
    "instruct_typo_extra_space": "What is the impact of deforestation on wildlife ?",
    "instruct_typo_homophone": "What is there impact of deforestation on wildlife?",
    "instruct_typo_missing_letter": "Wht is the impct of deforestaion on wildife?",
    "instruct_typo_missing_space": "Whatistheimpactofdeforestationonwildlife?",
    "instruct_typo_missing_vowels": "Wht s th mpct f dfrsttn n wldlf?",
    "instruct_typo_random": "Whaat is the imapct of deforestation on wildilfe?",
    "instruct_typo_repeated_letters": "Whhat is thee impactt of deefforesstation on wildliff?",
    "instruct_typo_swap": "Wtah is the ipmact of odeforestation on wildlife?",
    "instruct_typo_swap_and_punctuation": "Wtah is the ipmact of deforestation on wildlife!?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Whta is teh ipmact of deforstation on wildlif;.",
    "instruct_typo_transpose": "Whta is teh impact of deforstation on wildlife?",
    "instruct_typo_wrong_letter": "What is the impact of deflrestation on wildlifr?",
    "output": "Deforestation has a range of consequences for wildlife, including habitat loss, disruption of ecosystems and food webs, displacement of species, increased competition, and increased vulnerability to predation. Additionally, deforestation can increase the risk of climate change, resulting in altered temperatures and unpredictable weather patterns that further disrupt wildlife habitats.",
    "prompt_id": "16778410-5560-465c-9871-148a8f27d692"
  },
  {
    "prompt_count": 420,
    "instruction_original": "Explain economics with an example.",
    "input": "",
    "instruct_all_caps": "EXPLAIN ECONOMICS WITH AN EXAMPLE.",
    "instruct_em_dash_break": "Explain economics—with an example.",
    "instruct_extra_punct": "Explain... economics.... with an example....!!!!",
    "instruct_hashtags": "Explain economics with an example. #economics #example",
    "instruct_inline_ad": "Explain economics with an example. Visit ShopEZ!",
    "instruct_inline_url": "Explain economics with an example. More info at example.org",
    "instruct_interrobang": "Explain economics with an example!?",
    "instruct_key_smash": "Explain economics with an example. fgfdgfd dfg",
    "instruct_leet_speak": "3xp141n 3c0n0m1c5 w17h 4n 3x4mp13.",
    "instruct_misplaced_commas": "Explain, economics with, an example.",
    "instruct_missing_bracket": "Explain economics with an example [",
    "instruct_missing_bracket_and_quote": "'Explain economics with an example [",
    "instruct_missing_quote": "'Explain economics with an example.",
    "instruct_no_caps": "explain economics with an example.",
    "instruct_no_punct": "Explain economics with an example",
    "instruct_one_typo_punctuation": "Explain economics with an example?",
    "instruct_oxford_comma": "Explain, economics, with an example.",
    "instruct_parenthetical_aside": "Explain economics (the study of money and stuff) with an example.",
    "instruct_random_caps": "eXpLaIn EcOnOmIcS wItH aN ExAmPlE.",
    "instruct_sms_abbrev": "Xpln econ w an xmpl.",
    "instruct_three_typos_punctuation": "Explain; economics: with an example!?",
    "instruct_two_typos_punctuation": "Explain economics; with an example.",
    "instruct_typo_adjacent": "Exlpain economics with an example.",
    "instruct_typo_extra_letter": "Expllain economics with an example.",
    "instruct_typo_extra_space": "Explain economics with an example .",
    "instruct_typo_homophone": "Explain economics with an exmaple.",
    "instruct_typo_missing_letter": "Exlain economics with an example.",
    "instruct_typo_missing_space": "Explain economics with an example.",
    "instruct_typo_missing_vowels": "Expln cnmcs wth n xmpl.",
    "instruct_typo_random": "Explian economics with an exmple.",
    "instruct_typo_repeated_letters": "Expplain economics with an example.",
    "instruct_typo_swap": "Exlpain economics with an example.",
    "instruct_typo_swap_and_punctuation": "Exlpain economics with an example.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Exlpain ecnoomics with an example.",
    "instruct_typo_transpose": "Exaplin economics with an example.",
    "instruct_typo_wrong_letter": "Explaan economics with an example.",
    "output": "Economics is the study of how people and societies make decisions about production and consumption of goods and services. For example, a bakery may decide how much bread to produce and price it accordingly, depending on the prevailing market conditions, in order to maximize their profits.",
    "prompt_id": "e08ee910-e66c-4c04-bfa7-cc26d2d758c1"
  },
  {
    "prompt_count": 421,
    "instruction_original": "Provide me a list of diseases that can be caused by smoking.",
    "input": "",
    "instruct_all_caps": "PROVIDE ME A LIST OF DISEASES THAT CAN BE CAUSED BY SMOKING.",
    "instruct_em_dash_break": "Provide me a list—of diseases—that can be caused—by smoking.",
    "instruct_extra_punct": "Provide me a list of diseases that can be caused by smoking...!!!!",
    "instruct_hashtags": "Provide me a list of diseases that can be caused by smoking. #smokingkills #healthrisk #diseases",
    "instruct_inline_ad": "Provide me a list of diseases (Buy Our Product!) that can be caused by smoking.",
    "instruct_inline_url": "Provide me a list of diseases (https://example.com) that can be caused by smoking.",
    "instruct_interrobang": "Provide me a list of diseases that can be caused by smoking‽",
    "instruct_key_smash": "Provide me a list of diseases that can be caused by smoking asdflkjhpoiuytmnbvvcxzwqer.",
    "instruct_leet_speak": "Pr0v1d3 m3 @ l1$t 0f d1$3@$3$ th@t c@n b3 c@u$3d by $m0k1ng.",
    "instruct_misplaced_commas": "Provide me, a list, of diseases, that can be caused, by smoking.",
    "instruct_missing_bracket": "(Provide me a list of diseases that can be caused by smoking.",
    "instruct_missing_bracket_and_quote": "('Provide me a list of diseases that can be caused by smoking.",
    "instruct_missing_quote": "'Provide me a list of diseases that can be caused by smoking.",
    "instruct_no_caps": "provide me a list of diseases that can be caused by smoking.",
    "instruct_no_punct": "Provide me a list of diseases that can be caused by smoking",
    "instruct_one_typo_punctuation": "Provide me a list of diseases that can be caused by smoking,",
    "instruct_oxford_comma": "Provide me a list of diseases that can be caused by smoking,.",
    "instruct_parenthetical_aside": "Provide me a list of diseases (the bad kind) that can be caused by smoking.",
    "instruct_random_caps": "PrOvIdE mE a LiSt Of DiSeAsEs ThAt CaN bE cAuSeD bY sMoKiNg.",
    "instruct_sms_abbrev": "Prvd me a lst of dseases tht cn b czd by smkng.",
    "instruct_three_typos_punctuation": "Provide me a list of diseases! that can be caused by smoking?.",
    "instruct_two_typos_punctuation": "Provide me a list of diseases, that can be caused by smoking.",
    "instruct_typo_adjacent": "Provode me a lisy of diseaes that can be caused by smoking.",
    "instruct_typo_extra_letter": "Provvide me a list of diseasees that can be caused by smoking.",
    "instruct_typo_extra_space": "Provide me a list of diseases that can be caused by smoking.",
    "instruct_typo_homophone": "Provide me a list of diseases that can be cueed by smoking.",
    "instruct_typo_missing_letter": "Proide me a list of disease that can be caused by smoking.",
    "instruct_typo_missing_space": "Providea listofdiseasesthatcanbecausedbysmoking.",
    "instruct_typo_missing_vowels": "Prvd m a lst f dsiss tht cn b csd by smkng.",
    "instruct_typo_random": "Provode me a list of diseasess that can be caused by smookkng.",
    "instruct_typo_repeated_letters": "Provvide me a lisst of diseasess that can be caused by smokingg.",
    "instruct_typo_swap": "Provide me a list of disesase that can be caused by smoking.",
    "instruct_typo_swap_and_punctuation": "Provode me a list of disesase, that can be caused by smoking.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Provdie me a lsit of disesase! that can be caused by smoking?.",
    "instruct_typo_transpose": "Provdie me a lsit of diseases that can be caused by smoking.",
    "instruct_typo_wrong_letter": "Provide me a list of diseasez that can be caused by smoking.",
    "output": "Smoking can cause a range of diseases, including cancer, emphysema, chronic bronchitis, heart disease, stroke, and diabetes. Additionally, smoking can increase the risk of developing respiratory illnesses such as pneumonia, asthma, and bronchitis, and can increase the risk of birth defects and developmental delays in infants.",
    "prompt_id": "e710e586-2452-468e-80c7-1ce8605b72aa"
  },
  {
    "prompt_count": 422,
    "instruction_original": "What is the difference between machine learning and deep learning?",
    "input": "",
    "instruct_all_caps": "WHAT IS THE DIFFERENCE BETWEEN MACHINE LEARNING AND DEEP LEARNING?",
    "instruct_em_dash_break": "What is the difference—the real difference—between machine learning and deep learning?",
    "instruct_extra_punct": "What is the difference between machine learning and deep learning??!?!",
    "instruct_hashtags": "What is the difference between machine learning and deep learning? #ML #DL #AI",
    "instruct_inline_ad": "What is the difference between machine learning and deep learning? [Ad: Buy our AI course!]",
    "instruct_inline_url": "What is the difference between machine learning and deep learning? (Find out more at example.com/ai)",
    "instruct_interrobang": "What is the difference between machine learning and deep learning!?",
    "instruct_key_smash": "What is the difference between machine learning and deep learning? jfkdlsajflds",
    "instruct_leet_speak": "\\/\\/h47 15 7h3 d1ff3r3nc3 b37\\/\\/33n m4ch1n3 l34rn1n6 4nd d33p l34rn1n6?",
    "instruct_misplaced_commas": "What is the difference, between machine learning, and deep learning?",
    "instruct_missing_bracket": "What is the difference between [machine learning and deep learning?",
    "instruct_missing_bracket_and_quote": "What is the difference between machine learning and deep learning",
    "instruct_missing_quote": "\"What is the difference between machine learning and deep learning?",
    "instruct_no_caps": "what is the difference between machine learning and deep learning?",
    "instruct_no_punct": "What is the difference between machine learning and deep learning",
    "instruct_one_typo_punctuation": "What is the difference between machine learning and deep learning?",
    "instruct_oxford_comma": "What is the difference, between machine learning, and deep learning?",
    "instruct_parenthetical_aside": "What is the difference between machine learning (the broader field) and deep learning?",
    "instruct_random_caps": "WhAt iS tHe dIfFeReNcE bEtWeEn mAcHiNe lEaRnInG aNd dEeP lEaRnInG?",
    "instruct_sms_abbrev": "Wot is the diff btwn machine learning & deep learning?",
    "instruct_three_typos_punctuation": "What is the difference? between machine learning. and deep learning!",
    "instruct_two_typos_punctuation": "What is the difference. between machine learning? and deep learning?",
    "instruct_typo_adjacent": "What is the differebce between mqchine learning and deep learni g?",
    "instruct_typo_extra_letter": "What is the differencce between machine learning and deep learnning?",
    "instruct_typo_extra_space": "What is the difference between machine learning and deep learning ?",
    "instruct_typo_homophone": "Watt is the difference between machine learning and deep learning?",
    "instruct_typo_missing_letter": "What is the differene between machine learning and deep learning?",
    "instruct_typo_missing_space": "Whatisthedifferencebetweenmachinelearninganddeeplearning?",
    "instruct_typo_missing_vowels": "Wht is th dffrnc btwn mchn lrnn nd dp lrnn?",
    "instruct_typo_random": "Wht is th differece betwen machibe learnng and depe learniing?",
    "instruct_typo_repeated_letters": "What is the differencee between machine learnning and deep learnning?",
    "instruct_typo_swap": "What is the differnece between m achnie learning and deep laerning?",
    "instruct_typo_swap_and_punctuation": "What is the differnece, between m achnie learning? and deep laerning?",
    "instruct_typo_swap_and_transpose_and_punctuation": "What is the differnece, betewen m achnie learnign? and deep laerning!",
    "instruct_typo_transpose": "What is the differnece between mahcine learning and deep learinng?",
    "instruct_typo_wrong_letter": "What is the difference betjeen machine learninf and dexp learning?",
    "output": "Machine learning is a subset of artificial intelligence that uses algorithms to learn from data and improve performance on a task without explicit human programming. Deep learning is a type of machine learning that uses artificial neural networks to learn from large amounts of data and make predictions. Deep learning is more powerful and accurate than traditional machine learning, but also requires more computing power.",
    "prompt_id": "c38fb77c-bcb4-4302-9347-504953adfce2"
  },
  {
    "prompt_count": 423,
    "instruction_original": "Describe a typical workday for a barista.",
    "input": "",
    "instruct_all_caps": "DESCRIBE A TYPICAL WORKDAY FOR A BARISTA.",
    "instruct_em_dash_break": "Describe a typical—workday—for a barista.",
    "instruct_extra_punct": "Describe... a typical workday... for a barista!!!!",
    "instruct_hashtags": "Describe a typical workday for a barista. #baristalife #workday #coffee",
    "instruct_inline_ad": "Describe a typical workday for a barista. (Try our new coffee!)",
    "instruct_inline_url": "Describe a typical workday for a barista. (More info: https://example.com)",
    "instruct_interrobang": "Describe a typical workday for a barista?!",
    "instruct_key_smash": "Describe a typical workday for a barista. asdfghjkl;",
    "instruct_leet_speak": "D35cr1b3 a 7yp1c4l w0rkd4y f0r a b4r1574.",
    "instruct_misplaced_commas": "Describe a typical, workday for a barista.",
    "instruct_missing_bracket": "[Describe a typical workday for a barista.",
    "instruct_missing_bracket_and_quote": "'Describe a typical workday for a barista.",
    "instruct_missing_quote": "'Describe a typical workday for a barista.",
    "instruct_no_caps": "describe a typical workday for a barista.",
    "instruct_no_punct": "Describe a typical workday for a barista",
    "instruct_one_typo_punctuation": "Describe a typical workday for a barista?",
    "instruct_oxford_comma": "Describe a typical, usual workday for a barista.",
    "instruct_parenthetical_aside": "Describe a typical workday (the usual kind) for a barista.",
    "instruct_random_caps": "DeScRiBe a TyPiCal wOrKdAy FoR a BaRiStA.",
    "instruct_sms_abbrev": "Dscrb a tipical wkdy 4 a barista.",
    "instruct_three_typos_punctuation": "Describe a typical workday for a barista!?.",
    "instruct_two_typos_punctuation": "Describe a typical workday for a barista;?",
    "instruct_typo_adjacent": "Descriebe a typical woekday fot a barusta.",
    "instruct_typo_extra_letter": "Desscribe a typicall workdayy forr a baristaa.",
    "instruct_typo_extra_space": "Describe a typical workday for a barista .",
    "instruct_typo_homophone": "Describe a tipical workday four a baresta.",
    "instruct_typo_missing_letter": "Descrie a typicl wrkday fr a barsta.",
    "instruct_typo_missing_space": "Describeatypicalworkdayforabarista.",
    "instruct_typo_missing_vowels": "Dscrbe a tpcl wrkdy fr a brsta.",
    "instruct_typo_random": "Describee a ttpycall workdayd for a bariasta.",
    "instruct_typo_repeated_letters": "Desscribe a typpical workkday forr a baristta.",
    "instruct_typo_swap": "Desrcibe a typical wodkay for a bristaa.",
    "instruct_typo_swap_and_punctuation": "Desrcibe a typical wodkay for a bristaa?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Dsecribe a tpyical wrkoday for a baritsta!.",
    "instruct_typo_transpose": "Dsecribe a tpyical wrkoday for a baritsta.",
    "instruct_typo_wrong_letter": "Describe a tyqical wolrday for a bafista.",
    "output": "A typical workday for a barista typically involves greeting customers, taking orders, preparing coffee drinks, cleaning and restocking, operating cash registers and making sure the area is kept clean and neat. They may also be responsible for making new drinks and running taste tests. Additionally, baristas may be responsible for food orders, setting up catering functions, and general customer service.",
    "prompt_id": "88f1035e-99e0-4105-94c7-b37c3edd4bd1"
  },
  {
    "prompt_count": 424,
    "instruction_original": "How does the human brain remember information?",
    "input": "",
    "instruct_all_caps": "HOW DOES THE HUMAN BRAIN REMEMBER INFORMATION?",
    "instruct_em_dash_break": "How does the human brain—remember information?",
    "instruct_extra_punct": "How does the human brain remember information?!?",
    "instruct_hashtags": "How does the human brain remember information? #brain #memory",
    "instruct_inline_ad": "How does the human brain remember information? Buy our memory supplement!",
    "instruct_inline_url": "How does the human brain remember information? More info at example.com",
    "instruct_interrobang": "How does the human brain remember information?!",
    "instruct_key_smash": "How does the human brain remember information? asdfjkl;",
    "instruct_leet_speak": "H0w d035 7h3 huM4n br41n r3M3Mb3r 1nf0rM4710n?",
    "instruct_misplaced_commas": "How does the human brain, remember, information?",
    "instruct_missing_bracket": "[How does the human brain remember information?",
    "instruct_missing_bracket_and_quote": "[\"How does the human brain remember information?",
    "instruct_missing_quote": "\"How does the human brain remember information?",
    "instruct_no_caps": "how does the human brain remember information?",
    "instruct_no_punct": "How does the human brain remember information",
    "instruct_one_typo_punctuation": "How does the human brain remember information?",
    "instruct_oxford_comma": "How does the human brain remember information?",
    "instruct_parenthetical_aside": "How does the human brain (that squishy thing in your skull) remember information?",
    "instruct_random_caps": "hOw dOEs tHe HuMan bRaIn rEmEmBer iNfOrMaTiOn?",
    "instruct_sms_abbrev": "How does the human brain rembr info?",
    "instruct_three_typos_punctuation": "How does the human brain remember information?!?",
    "instruct_two_typos_punctuation": "How does the human brain remember information!?",
    "instruct_typo_adjacent": "Hlw does the human braon remember informstion?",
    "instruct_typo_extra_letter": "How does the human braiin remember information?",
    "instruct_typo_extra_space": "How does the human brain remember  information?",
    "instruct_typo_homophone": "How does the human brain remember its information?",
    "instruct_typo_missing_letter": "How dos the human brain remember information?",
    "instruct_typo_missing_space": "Howdoesthe human brain remember information?",
    "instruct_typo_missing_vowels": "Hw ds th hmn brn rmbr nfrmt?",
    "instruct_typo_random": "Hwo does teh humann brain remeber informtion?",
    "instruct_typo_repeated_letters": "How does the human braaain remember information?",
    "instruct_typo_swap": "Woh does the human barin remember information?",
    "instruct_typo_swap_and_punctuation": "Woh does the human barin remember information?!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Woh dose teh hmuan barin rember infrmoation?!?",
    "instruct_typo_transpose": "How does the hmuan brain remmeber information?",
    "instruct_typo_wrong_letter": "How does the human brain remmber inforpation?",
    "output": "The human brain stores information using networks of neurons that are connected via synapses. When an experience is remembered or recalled, these synapses increase the connections between neurons, which is how memories are encoded and stored. Additionally, the hippocampus serves as a gateway to the brain, helping to intervene in the formation and recall of memories.",
    "prompt_id": "89efe048-b77b-45fb-9932-a097c326ba53"
  },
  {
    "prompt_count": 425,
    "instruction_original": "How does the internet of things (IoT) work?",
    "input": "",
    "instruct_all_caps": "HOW DOES THE INTERNET OF THINGS (IOT) WORK?",
    "instruct_em_dash_break": "How does the internet—of things—(IoT)—work?",
    "instruct_extra_punct": "How??? does!!! the??? internet... of... things... (IoT)... work????",
    "instruct_hashtags": "How does the internet of things (IoT) work? #IoT #Tech #Explained",
    "instruct_inline_ad": "How does the internet of things (IoT) (Learn More!) work?",
    "instruct_inline_url": "How does the internet of things (IoT) (read more at example.com) work?",
    "instruct_interrobang": "How does the internet of things (IoT) work‽",
    "instruct_key_smash": "How does the internet of things (IoT) work? lkjhgfdsapoiuytrewq",
    "instruct_leet_speak": "H0w d035 th3 1nt3rn37 0f th1ng5 (I07) w0rk?",
    "instruct_misplaced_commas": "How, does, the internet, of things, (IoT), work?",
    "instruct_missing_bracket": "How does the internet of things (IoT work?",
    "instruct_missing_bracket_and_quote": "\"How does the internet of things (IoT work?",
    "instruct_missing_quote": "\"How does the internet of things (IoT) work?\"",
    "instruct_no_caps": "how does the internet of things (iot) work?",
    "instruct_no_punct": "How does the internet of things IoT work",
    "instruct_one_typo_punctuation": "How does the internet of things (IoT) work.",
    "instruct_oxford_comma": "How does the internet, of things (IoT) work?",
    "instruct_parenthetical_aside": "How does the internet of things (IoT) work (tell me)?",
    "instruct_random_caps": "HoW dOeS ThE InTeRnEt oF ThInGs (IoT) WoRk?",
    "instruct_sms_abbrev": "How does the intenet of thngs (IoT) wrk?",
    "instruct_three_typos_punctuation": "How does the internet of things (IoT) work?????",
    "instruct_two_typos_punctuation": "How does the internet of things (IoT) work??!",
    "instruct_typo_adjacent": "How foes the internet of things (IoT) work?",
    "instruct_typo_extra_letter": "How doess the internet of things (IoT) work?",
    "instruct_typo_extra_space": "How does the internet of things (IoT) work ?",
    "instruct_typo_homophone": "How does the internet ove things (IoT) work?",
    "instruct_typo_missing_letter": "How des the internet of things (IoT) work?",
    "instruct_typo_missing_space": "Howdoestheinternetofthings(IoT)work?",
    "instruct_typo_missing_vowels": "Hw ds th ntrnt f thngs (IoT) wrk?",
    "instruct_typo_random": "How does the internett of things (IoT) work?",
    "instruct_typo_repeated_letters": "How does the internett of thingss (IoT) work?",
    "instruct_typo_swap": "How dose the internet of things (IoT) work?",
    "instruct_typo_swap_and_punctuation": "How dose the internet of things (IoT) work.",
    "instruct_typo_swap_and_transpose_and_punctuation": "How dose the internte of thigns (IoT) work!",
    "instruct_typo_transpose": "How deos the internet of things (IoT) work?",
    "instruct_typo_wrong_letter": "How does the interset of things (IoT) work?",
    "output": "The internet of things (IoT) uses physical sensors and devices connected to the internet to collect data and automate processes. These devices can interact with each other and send data to be processed and analyzed. This allows for efficient and sophisticated monitoring and control, resulting in increased automation, insights, and responsiveness.",
    "prompt_id": "0dbacd21-4b5b-48fb-aea9-3a44d27e2035"
  },
  {
    "prompt_count": 426,
    "instruction_original": "Give me an example of a conflict resolution technique.",
    "input": "",
    "instruct_all_caps": "GIVE ME AN EXAMPLE OF A CONFLICT RESOLUTION TECHNIQUE.",
    "instruct_em_dash_break": "Give me an example—of a conflict resolution technique—",
    "instruct_extra_punct": "Give me an example of a conflict resolution technique!!!???",
    "instruct_hashtags": "Give me an example of a conflict resolution technique. #conflictresolution #technique",
    "instruct_inline_ad": "Give me an example of a conflict resolution technique. Try this amazing app!",
    "instruct_inline_url": "Give me an example of a conflict resolution technique. Find out more at example.com",
    "instruct_interrobang": "Give me an example of a conflict resolution technique‽",
    "instruct_key_smash": "Give me an example of a conflict resolution technique. lkhjasdfg",
    "instruct_leet_speak": "G1v3 m3 4n 3x4mpl3 0f 4 c0nfl1c7 r350lu710n 73chn1qu3.",
    "instruct_misplaced_commas": "Give, me an example, of a conflict resolution technique.",
    "instruct_missing_bracket": "Give me an example [of a conflict resolution technique.",
    "instruct_missing_bracket_and_quote": "Give me an example [of a conflict resolution technique\".",
    "instruct_missing_quote": "Give me an example of a conflict resolution technique\".",
    "instruct_no_caps": "give me an example of a conflict resolution technique.",
    "instruct_no_punct": "Give me an example of a conflict resolution technique",
    "instruct_one_typo_punctuation": "Give me an example of a conflict resolution technique?",
    "instruct_oxford_comma": "Give me an example, of a conflict resolution technique.",
    "instruct_parenthetical_aside": "Give me an example (a simple one) of a conflict resolution technique.",
    "instruct_random_caps": "gIVe Me aN eXAmplE oF a CoNfLicT ResoLUtIOn tEchNiquE.",
    "instruct_sms_abbrev": "Gv me an ex of conflict res tech.",
    "instruct_three_typos_punctuation": "Give me an example of a conflict resolution technique..?!",
    "instruct_two_typos_punctuation": "Give me an example of a conflict resolution technique!?",
    "instruct_typo_adjacent": "Give me an exsmple of a conflicr resolution techbique.",
    "instruct_typo_extra_letter": "Give me an exaampel of a confllict resolutuon technique.",
    "instruct_typo_extra_space": "Give me an example of a conflict resolution technique.",
    "instruct_typo_homophone": "Give me an example ov a conflict resolution technique.",
    "instruct_typo_missing_letter": "Give me an exame of a conflic resolution technque.",
    "instruct_typo_missing_space": "Givemeanexampleofaconflictresolutiontechnique.",
    "instruct_typo_missing_vowels": "Gv m n xmpl f cnflict rslution tchnqu.",
    "instruct_typo_random": "Give me an exampel of a conflcit reslution technque.",
    "instruct_typo_repeated_letters": "Give me an exampelle of a conflictt resolutionn technique.",
    "instruct_typo_swap": "Giev me an exmaple of a conflcit resoltuion technique.",
    "instruct_typo_swap_and_punctuation": "Giev me an exmaple of a conflcit resoltuion technique!?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Giev me na examepl of a conflcit resoltuion technique..?!",
    "instruct_typo_transpose": "Give me na example of a confilct resoltuion technique.",
    "instruct_typo_wrong_letter": "Give me an exsmple of a conflicto resolution technigue.",
    "output": "One conflict resolution technique is collaborative problem solving, which involves negotiating and finding a solution that both parties can agree on. This process involves understanding the issue, identifying the interests of both parties, exploring options and solutions, and finding a win-win outcome.",
    "prompt_id": "10ff8ae8-3972-44a5-b801-0f56f611f572"
  },
  {
    "prompt_count": 427,
    "instruction_original": "Pick out the correct noun from the following list.",
    "input": "river, mountain, book",
    "instruct_all_caps": "PICK OUT THE CORRECT NOUN FROM THE FOLLOWING LIST.",
    "instruct_em_dash_break": "Pick out the correct noun—from the following list.",
    "instruct_extra_punct": "Pick out the correct noun from the following list?!.",
    "instruct_hashtags": "Pick out the correct noun from the following list. #grammar #nouns",
    "instruct_inline_ad": "Pick out the correct noun from the following list. Buy our great new product!",
    "instruct_inline_url": "Pick out the correct noun from the following list. See more at https://example.com.",
    "instruct_interrobang": "Pick out the correct noun from the following list!?",
    "instruct_key_smash": "Pick out the correct noun from the following list. asdlfkjghoiuytrewq",
    "instruct_leet_speak": "P1ck 0u7 7h3 c0rr3c7 n0un fr0m 7h3 f0ll0w1ng l157.",
    "instruct_misplaced_commas": "Pick, out the, correct noun from, the following list.",
    "instruct_missing_bracket": "Pick out the correct noun from the following list.",
    "instruct_missing_bracket_and_quote": "Pick out the correct noun from the following list.",
    "instruct_missing_quote": "Pick out the correct noun from the following list.",
    "instruct_no_caps": "pick out the correct noun from the following list.",
    "instruct_no_punct": "Pick out the correct noun from the following list",
    "instruct_one_typo_punctuation": "Pick out the correct noun from the following list?",
    "instruct_oxford_comma": "Pick out the correct noun, from the following list.",
    "instruct_parenthetical_aside": "Pick out the correct noun (that is definitely a noun) from the following list.",
    "instruct_random_caps": "PiCk OuT tHe CoRrEcT nOuN fRoM tHe FoLlOwInG lIsT.",
    "instruct_sms_abbrev": "Pik out da correct noun frm da fllwing list.",
    "instruct_three_typos_punctuation": "Pick out the correct noun; from the following list!.",
    "instruct_two_typos_punctuation": "Pick out the correct noun, from the following list!",
    "instruct_typo_adjacent": "Pock out the correct niun from the following list.",
    "instruct_typo_extra_letter": "Pick outt the correcct noun from the followingg list.",
    "instruct_typo_extra_space": "Pick out the correct noun from the following list .",
    "instruct_typo_homophone": "Pick out the correct none from the following list.",
    "instruct_typo_missing_letter": "Pik ut the coect non from the followng list.",
    "instruct_typo_missing_space": "Pickoutthecorrectnounfromthefollowinglist.",
    "instruct_typo_missing_vowels": "Pck ot th crrct nn frm th fllwng lst.",
    "instruct_typo_random": "Pivk out the coerect noub ftom thew followiing loist.",
    "instruct_typo_repeated_letters": "Pick out the correcccct noun from the followwing list.",
    "instruct_typo_swap": "Pikc out teh correct noun from the followign list.",
    "instruct_typo_swap_and_punctuation": "Pikc out teh correct noun from the followign list?!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Kcip tuo teh cerroct nuon form the lofloiwng tsil?!",
    "instruct_typo_transpose": "Kcip tuo teh cerroct nuon form the lofloiwng tsil.",
    "instruct_typo_wrong_letter": "Fick out the gorrect nout from the following mist.",
    "output": "River",
    "prompt_id": "d7ba82f8-f4e9-40d4-8f8a-3c77ae6510d9"
  },
  {
    "prompt_count": 428,
    "instruction_original": "Identify a programming language suitable for game development.",
    "input": "",
    "instruct_all_caps": "IDENTIFY A PROGRAMMING LANGUAGE SUITABLE FOR GAME DEVELOPMENT.",
    "instruct_em_dash_break": "Identify a programming language—suitable for—game development.",
    "instruct_extra_punct": "Identify! a programming... language?? suitable, for game, development!!!!",
    "instruct_hashtags": "Identify a programming language suitable for game development #gamedev #programming #languages",
    "instruct_inline_ad": "Identify a programming language [Buy Our Latest Game!] suitable for game development.",
    "instruct_inline_url": "Identify a programming language (details at gamesite.com) suitable for game development.",
    "instruct_interrobang": "Identify a programming language suitable for game development?!",
    "instruct_key_smash": "Identify a programming language suitable for game development gfhjk;.",
    "instruct_leet_speak": "1d3n71fy a pr0gr4mm1ng l4ngu4g3 5u174bl3 f0r g4m3 d3v3l0pm3n7.",
    "instruct_misplaced_commas": "Identify, a programming language, suitable for, game development.",
    "instruct_missing_bracket": "Identify a programming language [like C++ suitable for game development.",
    "instruct_missing_bracket_and_quote": "Identify a [ \"suitable programming language for game development.",
    "instruct_missing_quote": "Identify a \"suitable programming language for game development.",
    "instruct_no_caps": "identify a programming language suitable for game development.",
    "instruct_no_punct": "Identify a programming language suitable for game development",
    "instruct_one_typo_punctuation": "Identify a programming language suitable for game development?",
    "instruct_oxford_comma": "Identify a programming language suitable for game, development.",
    "instruct_parenthetical_aside": "Identify a programming language (one often used by studios) suitable for game development.",
    "instruct_random_caps": "iDenTify a pRoGrAmmiNg LanGuAgE suItAbLe foR gAmE deVeloPmEnT.",
    "instruct_sms_abbrev": "Id a prgrmng lng s8bl 4 gm dvlpmnt.",
    "instruct_three_typos_punctuation": "Identify, a programming language suitable for game development.?!",
    "instruct_two_typos_punctuation": "Identify? a programming language suitable for game development!",
    "instruct_typo_adjacent": "Idwntify a progranming langyage suiyable for game developmwnt.",
    "instruct_typo_extra_letter": "Identifyy a programmung langjuage suitabbke for game devellopment.",
    "instruct_typo_extra_space": "Identify a programming language suitable for game dev elopment.",
    "instruct_typo_homophone": "Identify a programing language suiteable for game development.",
    "instruct_typo_missing_letter": "Idenify a prograning languge suitale for gae devlopment.",
    "instruct_typo_missing_space": "Identifyaprogramminglanguagesuitableforgamedevelopment.",
    "instruct_typo_missing_vowels": "Idntfy a prgrmmng lngg sstbl fr gm dvlpmnt.",
    "instruct_typo_random": "Idenfity a programmig language suitabl for geme develpment.",
    "instruct_typo_repeated_letters": "Identiify a proograammming langgguage suitabble for gamme develoopment.",
    "instruct_typo_swap": "Idenitfy a progrmaming lnaguage suitbale for game devleopment.",
    "instruct_typo_swap_and_punctuation": "Idenitfy a progrmaming language suitbale for game devleopment.?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Identfiy a porgramming lagnuage suitbale for game devleopemnt?!",
    "instruct_typo_transpose": "Identfiy a porgramming lagnuage suitbale for game devleopemnt.",
    "instruct_typo_wrong_letter": "Identify a prograbming language suitasle for game developmekt.",
    "output": "C++ is a suitable programming language for game development, as it is a high-performance language that can handle complex calculations. Furthermore, it has good support for object-oriented programming and memory management, making it well-suited for creating sophisticated game engine features such as AI and physics simulation.",
    "prompt_id": "9a6995ef-790d-4776-9d32-6bda50f34b0e"
  },
  {
    "prompt_count": 429,
    "instruction_original": "Make a list of different types of cryptocurrencies.",
    "input": "",
    "instruct_all_caps": "MAKE A LIST OF DIFFERENT TYPES OF CRYPTOCURRENCIES.",
    "instruct_em_dash_break": "Make a list of different types—you know, the digital ones—of cryptocurrencies.",
    "instruct_extra_punct": "Make a list of different types of cryptocurrencies..?!",
    "instruct_hashtags": "Make a list of different types of cryptocurrencies. #crypto #blockchain #money",
    "instruct_inline_ad": "Make a list of different types of cryptocurrencies. (Visit our sponsor for the best crypto deals!)",
    "instruct_inline_url": "Make a list of different types of cryptocurrencies. (More info at example.com/crypto)",
    "instruct_interrobang": "Make a list of different types of cryptocurrencies!?",
    "instruct_key_smash": "Make a list of different types of cryptocurrencies. asdfghjkl;",
    "instruct_leet_speak": "M4k3 4 l157 0f d1ff3r3n7 7yp35 0f cryp70curr3nc135.",
    "instruct_misplaced_commas": "Make, a list, of different, types, of cryptocurrencies.",
    "instruct_missing_bracket": "Make a list of different types of cryptocurrencies.(",
    "instruct_missing_bracket_and_quote": "Make a list of different types of cryptocurrencies.\"",
    "instruct_missing_quote": "\"Make a list of different types of cryptocurrencies.",
    "instruct_no_caps": "make a list of different types of cryptocurrencies.",
    "instruct_no_punct": "Make a list of different types of cryptocurrencies",
    "instruct_one_typo_punctuation": "Make a list of different types of cryptocurrencies?",
    "instruct_oxford_comma": "Make a list of different types of cryptocurrencies.",
    "instruct_parenthetical_aside": "Make a list of different types (like Bitcoin and Ethereum) of cryptocurrencies.",
    "instruct_random_caps": "MaKe a LiSt oF diFfErEnT tYpEs oF CrYpToCuRrEnCiEs.",
    "instruct_sms_abbrev": "Make a list of diff types of cryptocurrencies.",
    "instruct_three_typos_punctuation": "Make a list of different types of cryptocurrencies?!.",
    "instruct_two_typos_punctuation": "Make a list of different types of cryptocurrencies?!",
    "instruct_typo_adjacent": "Make a list of differenr types of cryptocurrencies.",
    "instruct_typo_extra_letter": "Make a list of different types of cryptocurrenciesa.",
    "instruct_typo_extra_space": "Make a list of different  types of cryptocurrencies.",
    "instruct_typo_homophone": "Make a list of different types of crypto currencies.",
    "instruct_typo_missing_letter": "Make a list of different types of cryptocurrenies.",
    "instruct_typo_missing_space": "Makealist of different types of cryptocurrencies.",
    "instruct_typo_missing_vowels": "Mk a lst of dffrnt typs of cryptcrrncs.",
    "instruct_typo_random": "Make a list of different types of crypto currencies..",
    "instruct_typo_repeated_letters": "Make a list of differrent types of cryptocurrencies.",
    "instruct_typo_swap": "Make a lsit of different types of cryptocurrencies.",
    "instruct_typo_swap_and_punctuation": "Make a lsit of different types of cryptocurrencies?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Make a lsit of diffenret types of cryptocurrencies?.",
    "instruct_typo_transpose": "Make a list of diffenret types of cryptocurrencies.",
    "instruct_typo_wrong_letter": "Make a list of different types of cryptocurtencies.",
    "output": "Different types of cryptocurrencies include Bitcoin, Ethereum, Litecoin, Dash, Zcash, Monero, Dogecoin, and Ripple.",
    "prompt_id": "df3310dc-fde1-4dad-89da-158bde2c0744"
  },
  {
    "prompt_count": 430,
    "instruction_original": "Create a tweet with the following hashtag.",
    "input": "#SharingIsCaring",
    "instruct_all_caps": "CREATE A TWEET WITH THE FOLLOWING HASHTAG.",
    "instruct_em_dash_break": "Create a tweet—with the following hashtag.",
    "instruct_extra_punct": "Create a tweet with the following hashtag?!.",
    "instruct_hashtags": "Create a tweet with the following hashtag. #tweet #hashtag",
    "instruct_inline_ad": "Create a tweet (Sponsored by Acme Corp!) with the following hashtag.",
    "instruct_inline_url": "Create a tweet (Learn more at example.com) with the following hashtag.",
    "instruct_interrobang": "Create a tweet with the following hashtag!?",
    "instruct_key_smash": "Create a tweet with the following hashtag. jkl;uiop",
    "instruct_leet_speak": "Cr3473 4 7w337 w17h 7h3 f0ll0w1ng h45h74g.",
    "instruct_misplaced_commas": "Create, a tweet, with the, following hashtag.",
    "instruct_missing_bracket": "[Create a tweet with the following hashtag",
    "instruct_missing_bracket_and_quote": "'[Create a tweet with the following hashtag",
    "instruct_missing_quote": "'Create a tweet with the following hashtag",
    "instruct_no_caps": "create a tweet with the following hashtag.",
    "instruct_no_punct": "Create a tweet with the following hashtag",
    "instruct_one_typo_punctuation": "Create a tweet with the following hashtag,",
    "instruct_oxford_comma": "Create a tweet with the following hashtag,.",
    "instruct_parenthetical_aside": "Create a tweet (make sure it's short) with the following hashtag.",
    "instruct_random_caps": "CrEaTe A tWeEt WiTh ThE fOlLoWiNg HaShTaG.",
    "instruct_sms_abbrev": "Cre8 a twt w the folowing hstg.",
    "instruct_three_typos_punctuation": "Create a tweet with the following hashtag!?.",
    "instruct_two_typos_punctuation": "Create a tweet with the following hashtag!?",
    "instruct_typo_adjacent": "Creste a tweet with the gollowing hashtag.",
    "instruct_typo_extra_letter": "Creaate a tweet with the following hashtaag.",
    "instruct_typo_extra_space": "Create a tweet with the following hashtag .",
    "instruct_typo_homophone": "Creayt a tweet with the following hash tag.",
    "instruct_typo_missing_letter": "Crate a twet with the follwing hashtag.",
    "instruct_typo_missing_space": "Createatweet with the followinghashtag.",
    "instruct_typo_missing_vowels": "Crt a twt wth th fllwng hshtg.",
    "instruct_typo_random": "Creatt a twet with the followiing haahhag.",
    "instruct_typo_repeated_letters": "Creaate a tweeet with the fllowing hashtag.",
    "instruct_typo_swap": "Ceate a tweer with the fllowing hashtag.",
    "instruct_typo_swap_and_punctuation": "Ceate a tweer with the fllowing hashtag!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Cereta a twet with the folowing hashtag?.",
    "instruct_typo_transpose": "Cereta a twet with the folowing hashtag.",
    "instruct_typo_wrong_letter": "Cresate a tweet with the follswing hashtag.",
    "output": "We can all make a difference in the world. #SharingIsCaring. Let's work together to create a better future for everyone.",
    "prompt_id": "d081ed83-9e03-4430-a9db-ef1a3d1f2dd3"
  },
  {
    "prompt_count": 431,
    "instruction_original": "Rewrite the following sentence using the root words.",
    "input": "I am not feeling well.",
    "instruct_all_caps": "REWRITE THE FOLLOWING SENTENCE USING THE ROOT WORDS.",
    "instruct_em_dash_break": "Rewrite the following—sentence—using the root—words.",
    "instruct_extra_punct": "Rewrite... the following!!! sentence;;; using??? the root words.....",
    "instruct_hashtags": "Rewrite the following sentence using the root words. #rewrite #rootwords #sentence",
    "instruct_inline_ad": "Rewrite the following sentence (Get 10% off! Visit example.com) using the root words.",
    "instruct_inline_url": "Rewrite the following sentence using the root words (https://example.com).",
    "instruct_interrobang": "Rewrite the following sentence using the root words?!",
    "instruct_key_smash": "Rewrite the following sentence using the root words. fdjsaklfjdskalfjds",
    "instruct_leet_speak": "R3wr1t3 th3 f0ll0w1ng 53nt3nc3 u51ng th3 r00t w0rd5.",
    "instruct_misplaced_commas": "Rewrite the following, sentence using the root, words.",
    "instruct_missing_bracket": "[Rewrite the following sentence using the root words.",
    "instruct_missing_bracket_and_quote": "[ 'Rewrite the following sentence using the root words.",
    "instruct_missing_quote": "'Rewrite the following sentence using the root words.",
    "instruct_no_caps": "rewrite the following sentence using the root words.",
    "instruct_no_punct": "Rewrite the following sentence using the root words",
    "instruct_one_typo_punctuation": "Rewrite the following sentence using the root words,",
    "instruct_oxford_comma": "Rewrite, the following sentence, using, the root words.",
    "instruct_parenthetical_aside": "Rewrite the following sentence (you know, that one) using the root words.",
    "instruct_random_caps": "rEwrIte tHe fOllOwInG sEntEnCe uSiNg tHe rOoT wOrDs.",
    "instruct_sms_abbrev": "Rwt the foloing sntnc usng the rt wrds.",
    "instruct_three_typos_punctuation": "Rewrite; the following sentence using the root words!?",
    "instruct_two_typos_punctuation": "Rewrite? the following sentence using the root words.",
    "instruct_typo_adjacent": "Rewrjte the following sentence using the root words.",
    "instruct_typo_extra_letter": "Rewritse the following sentence using the root words.",
    "instruct_typo_extra_space": "Rewrite the following sentence using the root words .",
    "instruct_typo_homophone": "Rite the following sentence using the root words.",
    "instruct_typo_missing_letter": "Rewrit the following sentence using the root words.",
    "instruct_typo_missing_space": "Rewritethe following sentence using the root words.",
    "instruct_typo_missing_vowels": "Rwrt th fllwng sntnc sng th rt wrds.",
    "instruct_typo_random": "Rewrte the following snetence using the root wrds.",
    "instruct_typo_repeated_letters": "Rewritete the followwing sentence ussing the root words.",
    "instruct_typo_swap": "Rewirte the following sentence using the root words.",
    "instruct_typo_swap_and_punctuation": "Rewirte the following sentence using the root words?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Reiwtre the following sentence using the root words!",
    "instruct_typo_transpose": "Reiwtre the following sentence using the root words.",
    "instruct_typo_wrong_letter": "Rewrity the following sentence using the root words.",
    "output": "I am not feeling good.",
    "prompt_id": "a39be0a0-1656-4012-ac10-99bb6844e85e"
  },
  {
    "prompt_count": 432,
    "instruction_original": "Combine the two sentences into a single sentence.",
    "input": "He didn't go to the party. He stayed at home.",
    "instruct_all_caps": "COMBINE THE TWO SENTENCES INTO A SINGLE SENTENCE.",
    "instruct_em_dash_break": "Combine the two sentences—into a single sentence.",
    "instruct_extra_punct": "Combine the two sentences into a single sentence!!!",
    "instruct_hashtags": "Combine the two sentences into a single sentence. #writingtip #combine #sentences",
    "instruct_inline_ad": "Combine the two sentences into a single sentence. (Limited Time Offer!)",
    "instruct_inline_url": "Combine the two sentences into a single sentence. (See more at: http://example.com)",
    "instruct_interrobang": "Combine the two sentences into a single sentence!?",
    "instruct_key_smash": "Combine the two sentences into a single sentence. asdfghjkl;",
    "instruct_leet_speak": "C0mb1n3 th3 tw0 53nt3nc35 1nt0 4 51ngl3 53nt3nc3.",
    "instruct_misplaced_commas": "Combine, the two sentences, into a, single sentence.",
    "instruct_missing_bracket": "Combine the two sentences [into a single sentence.",
    "instruct_missing_bracket_and_quote": "'Combine the two sentences [into a single sentence.",
    "instruct_missing_quote": "'Combine the two sentences into a single sentence.",
    "instruct_no_caps": "combine the two sentences into a single sentence.",
    "instruct_no_punct": "Combine the two sentences into a single sentence",
    "instruct_one_typo_punctuation": "Combine the two sentences into a single sentence?",
    "instruct_oxford_comma": "Combine the two sentences, into a single sentence.",
    "instruct_parenthetical_aside": "Combine the two sentences (if possible!) into a single sentence.",
    "instruct_random_caps": "CoMbInE tHe TwO sEnTeNcEs InTo A SiNgLe SeNtEnCe.",
    "instruct_sms_abbrev": "cmbine the 2 sntncs int a sngl sntnc.",
    "instruct_three_typos_punctuation": "Combine the two sentences into a single sentence?!.",
    "instruct_two_typos_punctuation": "Combine the two sentences into a single sentence?.",
    "instruct_typo_adjacent": "Combime tje tqo sebtences ibto a sibgle sebtebce.",
    "instruct_typo_extra_letter": "Combine the two sentences into a singgle sentence.",
    "instruct_typo_extra_space": "Combine the two sentences into a single  sentence.",
    "instruct_typo_homophone": "Combine the to sentences into a single sentence.",
    "instruct_typo_missing_letter": "Combine the two sentence into a single sentence.",
    "instruct_typo_missing_space": "Combine thetwo sentences into a single sentence.",
    "instruct_typo_missing_vowels": "Cmbn th tw sntncs nt a sngl sntnc.",
    "instruct_typo_random": "Combin thetwo sentnces int a sngle sentene.",
    "instruct_typo_repeated_letters": "Combiine the two sentennces into a single sentencce.",
    "instruct_typo_swap": "Cobmine the tew sentences into a sngile snetnece.",
    "instruct_typo_swap_and_punctuation": "Cobmine the tew sentences into a sngile snetnece!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Cobnine the tew snetneces into a sngiel sentence?!",
    "instruct_typo_transpose": "Conbine the two sentences into a sngiel sentence.",
    "instruct_typo_wrong_letter": "Combine the two sentences into a single sentenco.",
    "output": "He didn't go to the party, instead staying at home.",
    "prompt_id": "69393178-8bee-4db2-a893-7963e1310c5f"
  },
  {
    "prompt_count": 433,
    "instruction_original": "Split the following sentence into two separate sentences.",
    "input": "He said hello and waved goodbye.",
    "instruct_all_caps": "SPLIT THE FOLLOWING SENTENCE INTO TWO SEPARATE SENTENCES.",
    "instruct_em_dash_break": "Split the following sentence—into two separate sentences.",
    "instruct_extra_punct": "Split.... the.... following.... sentence.... into.... two.... separate.... sentences....!!!!!!",
    "instruct_hashtags": "Split the following sentence into two separate sentences. #sentences #writing #grammar",
    "instruct_inline_ad": "Split the following sentence into two separate sentences. Improve your grammar today! [AD]",
    "instruct_inline_url": "Split the following sentence into two separate sentences. Visit https://example.com/sentencesplit for tips.",
    "instruct_interrobang": "Split the following sentence into two separate sentences?!",
    "instruct_key_smash": "Split the following sentence dfsghjkjhlk into two separate sentences. lkhgfds",
    "instruct_leet_speak": "Spl17 7h3 f0ll0w1ng 53n73nc3 1n70 7w0 53p4r473 53n73nc35.",
    "instruct_misplaced_commas": "Split, the following, sentence, into, two, separate, sentences.",
    "instruct_missing_bracket": "Split the following sentence [into two separate sentences.",
    "instruct_missing_bracket_and_quote": "[\"Split the following sentence into two separate sentences.",
    "instruct_missing_quote": "\"Split the following sentence into two separate sentences.",
    "instruct_no_caps": "split the following sentence into two separate sentences.",
    "instruct_no_punct": "Split the following sentence into two separate sentences",
    "instruct_one_typo_punctuation": "Split the following sentence: into two separate sentences.",
    "instruct_oxford_comma": "Split the following sentence into two separate sentences.",
    "instruct_parenthetical_aside": "Split the following sentence (the one you're reading now) into two separate sentences.",
    "instruct_random_caps": "sPlIt ThE fOlLoWiNg SeNtEnCe InTo TwO sEpArAtE sEnTeNcEs.",
    "instruct_sms_abbrev": "Split da folowing sntnc into 2 sepr8 sntncs.",
    "instruct_three_typos_punctuation": "Split the following sentence into two separate sentences...?!!",
    "instruct_two_typos_punctuation": "Split the following sentence into two separate sentences.!!",
    "instruct_typo_adjacent": "Spplit the follpwing dentence into two separaye sentenxes.",
    "instruct_typo_extra_letter": "Splitt the following sentence into two sepaarate sentences.",
    "instruct_typo_extra_space": "Split the following sentence into two separate sentences .",
    "instruct_typo_homophone": "Split the following sentence into to separate sentences.",
    "instruct_typo_missing_letter": "Spli the folowing sentence into two separate sentence.",
    "instruct_typo_missing_space": "Splitthefollowing sentenceintotwo separate sentences.",
    "instruct_typo_missing_vowels": "Spl tte fllwng sntnc nt tw sprt sntncs.",
    "instruct_typo_random": "Spkit the foollwong senwence ignto tzo sepsraye sentrnces.",
    "instruct_typo_repeated_letters": "Spliit the follloowing senteence into two sepparate senntences.",
    "instruct_typo_swap": "Spilt the folliowng snetnece itno two saparate snetneces.",
    "instruct_typo_swap_and_punctuation": "Splti the following sentence into two separate sentences!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Splti the folowing snetnece into two separate sentences;?",
    "instruct_typo_transpose": "Split the following snetnece into two saeprtae sentences.",
    "instruct_typo_wrong_letter": "Split the fllowinf sentence into two sepurate sentences.",
    "output": "He said hello. He waved goodbye.",
    "prompt_id": "8630587c-7f3c-44e7-8d26-b576fcdf6de2"
  },
  {
    "prompt_count": 434,
    "instruction_original": "Classify the following sentence as positive, negative, or neutral.",
    "input": "I'm going to the store tomorrow.",
    "instruct_all_caps": "CLASSIFY THE FOLLOWING SENTENCE AS POSITIVE, NEGATIVE, OR NEUTRAL.",
    "instruct_em_dash_break": "Classify the following sentence\b\bas positive, negative, or neutral.",
    "instruct_extra_punct": "Classify the following sentence as positive, negative, or neutral...!!!",
    "instruct_hashtags": "Classify the following sentence as positive, negative, or neutral. #sentiment #textanalysis",
    "instruct_inline_ad": "Classify the following sentence as positive, negative, or neutral. Get yours today!",
    "instruct_inline_url": "Classify the following sentence as positive, negative, or neutral. Visit www.example.com",
    "instruct_interrobang": "Classify the following sentence as positive, negative, or neutral\b\b\b‽",
    "instruct_key_smash": "Classify the following sentence as positive, negative, or neutral. asdfkjhaskdjfh",
    "instruct_leet_speak": "Cl4ss1fy th3 f0ll0w1ng s3nt3nc3 4s p0s1t1v3, n3g4t1v3, 0r n3utr4l.",
    "instruct_misplaced_commas": "Classify, the, following sentence as positive, negative or, neutral.",
    "instruct_missing_bracket": "Classify the following sentence (as positive, negative, or neutral.",
    "instruct_missing_bracket_and_quote": "Classify the following sentence (as positive, negative, or neutral.",
    "instruct_missing_quote": "Classify the following sentence as positive, negative, or neutral.",
    "instruct_no_caps": "classify the following sentence as positive, negative, or neutral.",
    "instruct_no_punct": "Classify the following sentence as positive negative or neutral",
    "instruct_one_typo_punctuation": "Classify the following sentence as positive, negative, or neutral!",
    "instruct_oxford_comma": "Classify the following sentence as positive, negative, or neutral.",
    "instruct_parenthetical_aside": "Classify the following sentence (the one provided) as positive, negative, or neutral.",
    "instruct_random_caps": "cLaSSIfy ThE FoLLoWiNg sEnTeNcE aS PoSiTiVe, nEgAtIvE, Or nEuTrAl.",
    "instruct_sms_abbrev": "Clsfy fllwng sntnc as pos, neg, or ntrl.",
    "instruct_three_typos_punctuation": "Classify the following sentence as positive, negative, or neutral!?.",
    "instruct_two_typos_punctuation": "Classify the following sentence as positive, negative, or neutral..",
    "instruct_typo_adjacent": "Classify tge folloqing sentence as posutive, negstive, or neutdal.",
    "instruct_typo_extra_letter": "Classsify the followwing sentencee as posittive, neggative, or neutralll.",
    "instruct_typo_extra_space": "Classify the following sentence as positive, negative, or neutral .",
    "instruct_typo_homophone": "Classify the following sentence has positive, negative, ore neutral.",
    "instruct_typo_missing_letter": "Classify the foloing setence as postie, negae, or netral.",
    "instruct_typo_missing_space": "Classifythefollowingsentenceaspositive,negative,orneutral.",
    "instruct_typo_missing_vowels": "Clssfy th fllwng sntnc as pstv, ngtv, r ntrl.",
    "instruct_typo_random": "Clasaify the foowing senfence as posative, neggtive, or neitral.",
    "instruct_typo_repeated_letters": "Classsify the followwing senntence as posittive, neggative, or neutrrall.",
    "instruct_typo_swap": "Clsasify the fololwing snetnece as poisitve, neagtive, or netural.",
    "instruct_typo_swap_and_punctuation": "Clsasify the fololwing snetnece as poisitve, neagtive, or netural.?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Classfiy the fololwing senetnce as posiivte, negaitve, or neutarl?!.",
    "instruct_typo_transpose": "Classfiy the fololwing senetnce as posiivte, negaitve, or neutarl.",
    "instruct_typo_wrong_letter": "Blassify the following zentence as positive, negative, or neutarl.",
    "output": "Positive.",
    "prompt_id": "4b47f5ce-cf4c-4114-896b-66f581566646"
  },
  {
    "prompt_count": 435,
    "instruction_original": "Discover which word in the sentence carries the most weight.",
    "input": "She ordered Chinese food for dinner.",
    "instruct_all_caps": "DISCOVER WHICH WORD IN THE SENTENCE CARRIES THE MOST WEIGHT.",
    "instruct_em_dash_break": "Discover which word—in the sentence—carries the most weight.",
    "instruct_extra_punct": "Discover which word in the sentence carries the most weight!!!???",
    "instruct_hashtags": "Discover which word in the sentence carries the most weight. #wordweight #sentenceanalysis #language #grammar",
    "instruct_inline_ad": "Discover which word (Buy our amazing product!) in the sentence carries the most weight.",
    "instruct_inline_url": "Discover which word (Check this out: example.com) in the sentence carries the most weight.",
    "instruct_interrobang": "Discover which word in the sentence carries the most weight\n\n!",
    "instruct_key_smash": "Discover which word in the sentence carries the most weight asdfghjkl;qwertyuiopzxcvbnm.",
    "instruct_leet_speak": "D1sc0v3r wh1ch w0rd 1n th3 s3nt3nc3 c4rr13s th3 m0st w31ght.",
    "instruct_misplaced_commas": "Discover, which, word in the, sentence carries the, most weight.",
    "instruct_missing_bracket": "Discover which word in the sentence carries the most weight].",
    "instruct_missing_bracket_and_quote": "Discover which word in the sentence carries the most weight\"].",
    "instruct_missing_quote": "Discover which word in the sentence carries the most weight\".",
    "instruct_no_caps": "discover which word in the sentence carries the most weight.",
    "instruct_no_punct": "Discover which word in the sentence carries the most weight",
    "instruct_one_typo_punctuation": "Discover which word in the sentence carries the most weight;",
    "instruct_oxford_comma": "Discover which word, in the sentence, carries the most weight.",
    "instruct_parenthetical_aside": "Discover which word (the most significant one, obviously) in the sentence carries the most weight.",
    "instruct_random_caps": "dIsCoVeR whIcH wOrD iN thE sEnTeNcE CaRrIeS tHe MoSt wEiGhT.",
    "instruct_sms_abbrev": "Discovr wch wrd in da sntnc caris da mst wgt.",
    "instruct_three_typos_punctuation": "Discover which word in the sentence carries the most weight...",
    "instruct_two_typos_punctuation": "Discover which word in the sentence carries the most weight?!",
    "instruct_typo_adjacent": "Discover which word in the sentemce carrirs the nost weight.",
    "instruct_typo_extra_letter": "Disccover which word in the sentence carries the mostt weight.",
    "instruct_typo_extra_space": "Discover which word in the sentence carries the most  weight.",
    "instruct_typo_homophone": "Discover which word in the sentence carries the most wait.",
    "instruct_typo_missing_letter": "Discover wich word in the sentence carries the most weght.",
    "instruct_typo_missing_space": "Discover whichword in the sentence carries the most weight.",
    "instruct_typo_missing_vowels": "Dscvr wch wrd n th sntnc crrs th mst wght.",
    "instruct_typo_random": "Discover which wodd in the sentence carries the msot wegith.",
    "instruct_typo_repeated_letters": "Discover which word in the sentence carriies the most weight.",
    "instruct_typo_swap": "Discvoer which word in the sentence carries the most wieght.",
    "instruct_typo_swap_and_punctuation": "Discvoer which word in the sentence carries the most wieght!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Discvoer whcih word in the snetence carries the msot weight.?",
    "instruct_typo_transpose": "Discover whcih word in the snetence carries the msot weight.",
    "instruct_typo_wrong_letter": "Discoker which worl in the sentence carries the most wright.",
    "output": "Dinner.",
    "prompt_id": "361cfae3-4a26-4f8f-af39-3329a3ddead6"
  },
  {
    "prompt_count": 436,
    "instruction_original": "Rewrite the following sentence omitting the pronouns.",
    "input": "She told us she was busy.",
    "instruct_all_caps": "REWRITE THE FOLLOWING SENTENCE OMITTING THE PRONOUNS.",
    "instruct_em_dash_break": "Rewrite the following sentence—omitting the pronouns.",
    "instruct_extra_punct": "Rewrite the following sentence omitting the pronouns..?",
    "instruct_hashtags": "Rewrite the following sentence omitting the pronouns #grammar #writing",
    "instruct_inline_ad": "Rewrite the following sentence omitting the pronouns (Buy Now!).",
    "instruct_inline_url": "Rewrite the following sentence omitting the pronouns (details at example.com).",
    "instruct_interrobang": "Rewrite the following sentence omitting the pronouns‽",
    "instruct_key_smash": "Rewrite the following sentence omitting the pronouns asdfg.",
    "instruct_leet_speak": "R3wr1t3 th3 f0ll0w1ng 53nt3nc3 0m1tt1ng th3 pr0n0un5.",
    "instruct_misplaced_commas": "Rewrite, the following, sentence omitting the, pronouns.",
    "instruct_missing_bracket": "Rewrite the following sentence omitting the pronouns[",
    "instruct_missing_bracket_and_quote": "'Rewrite the following sentence omitting the pronouns[",
    "instruct_missing_quote": "'Rewrite the following sentence omitting the pronouns.",
    "instruct_no_caps": "rewrite the following sentence omitting the pronouns.",
    "instruct_no_punct": "Rewrite the following sentence omitting the pronouns",
    "instruct_one_typo_punctuation": "Rewrite the following sentence omitting the pronouns;",
    "instruct_oxford_comma": "Rewrite the following, sentence omitting the pronouns.",
    "instruct_parenthetical_aside": "Rewrite the following sentence (omitting the pronouns).",
    "instruct_random_caps": "ReWriTe ThE FoLlOwInG SeNtEnCe OmItTiNg ThE PrOnOuNs.",
    "instruct_sms_abbrev": "Rwt th fllwng sntnc mtg th prnns.",
    "instruct_three_typos_punctuation": "Rewrite the following sentence omitting the pronouns;,?",
    "instruct_two_typos_punctuation": "Rewrite the following sentence omitting the pronouns!?",
    "instruct_typo_adjacent": "Rewqrite the following sentence omitting the pronouns.",
    "instruct_typo_extra_letter": "Rewriite the followwing sentence omitteing the pronouns.",
    "instruct_typo_extra_space": "Rewrite the following  sentence omitting the  pronouns.",
    "instruct_typo_homophone": "Right the following sentence omitting the pronouns.",
    "instruct_typo_missing_letter": "Rewrit th following sntenc omiting the prnouns.",
    "instruct_typo_missing_space": "Rewritethefollowingsentenceomittingthepronouns.",
    "instruct_typo_missing_vowels": "Rwrit th fllwng sntnc mtting th prnns.",
    "instruct_typo_random": "Reewritw the folowwing sentece ommiting the pronoouns.",
    "instruct_typo_repeated_letters": "Rewwrite theee followwing senttence omittingg the pronounss.",
    "instruct_typo_swap": "Rwieret teh flolowing snetnece omtiting teh pornonus.",
    "instruct_typo_swap_and_punctuation": "Rwieret teh flolowing snetnece omtiting teh pornonus!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Rweriet teh fololwing snetnece omittnig teh poronuns.",
    "instruct_typo_transpose": "Rwerite teh fololwing snetnece omittnig teh poronuns.",
    "instruct_typo_wrong_letter": "Rewriye the following sentence omitring the pronounc.",
    "output": "Told busy.",
    "prompt_id": "fe7fc22d-47ad-499b-b01f-18cf72f5ede8"
  },
  {
    "prompt_count": 437,
    "instruction_original": "Write a review of the restaurant.",
    "input": "The restaurant is called La Taqueria.",
    "instruct_all_caps": "WRITE A REVIEW OF THE RESTAURANT.",
    "instruct_em_dash_break": "Write a review—of the restaurant.",
    "instruct_extra_punct": "Write a review of the restaurant!!!??.",
    "instruct_hashtags": "Write a review of the restaurant. #restaurantreview #food",
    "instruct_inline_ad": "Write a review of the restaurant. [Ad: Best deals here!]",
    "instruct_inline_url": "Write a review of the restaurant. See more at example.com",
    "instruct_interrobang": "Write a review of the restaurant!?",
    "instruct_key_smash": "Write a review of the restaurant. asdfghjkl;",
    "instruct_leet_speak": "Wr1t3 a r3v13w 0f th3 r35t4ur4nt.",
    "instruct_misplaced_commas": "Write, a review, of, the restaurant.",
    "instruct_missing_bracket": "Write a review of the restaurant)",
    "instruct_missing_bracket_and_quote": "(Write a review of the restaurant\".",
    "instruct_missing_quote": "'Write a review of the restaurant.",
    "instruct_no_caps": "write a review of the restaurant.",
    "instruct_no_punct": "Write a review of the restaurant",
    "instruct_one_typo_punctuation": "Write a review of the restaurant,",
    "instruct_oxford_comma": "Write a review, of the restaurant.",
    "instruct_parenthetical_aside": "Write a review (perhaps a long one) of the restaurant.",
    "instruct_random_caps": "wRiTe A rEvIeW oF tHe rEsTaUrAnT.",
    "instruct_sms_abbrev": "Wrt a revu of the rest.",
    "instruct_three_typos_punctuation": "Write a review of the restaurant!?.",
    "instruct_two_typos_punctuation": "Write a review of the restaurant!!",
    "instruct_typo_adjacent": "Wriet a review of the restauramt.",
    "instruct_typo_extra_letter": "Writee a review of the restaurant.",
    "instruct_typo_extra_space": "Write a review of the restaurant .",
    "instruct_typo_homophone": "Rite a review of the restaraunt.",
    "instruct_typo_missing_letter": "Writ a review of the restaurant.",
    "instruct_typo_missing_space": "Writeareview of the restaurant.",
    "instruct_typo_missing_vowels": "Wrt a rvw f th rstrnt.",
    "instruct_typo_random": "Writè a revview of the restaurañt.",
    "instruct_typo_repeated_letters": "Wriite a revieww off the restauraant.",
    "instruct_typo_swap": "Wirte a reveiw fo the restaurant.",
    "instruct_typo_swap_and_punctuation": "Wirte a reveiw fo the restaurant!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Wrtie a reivwe fo the restaurant?!",
    "instruct_typo_transpose": "Wrtie a reivwe fo the restaurant.",
    "instruct_typo_wrong_letter": "Wrkte a review of the restaurant.",
    "output": "I recently visited La Taqueria and I was really impressed.  The food was amazing and the service was excellent. The atmosphere was cozy and inviting and the staff were friendly and attentive to all the customers. Overall, I would highly recommend La Taqueria for an enjoyable, delicious, and satisfying dining experience.",
    "prompt_id": "8291319d-70da-4c00-a497-c00186cf096d"
  },
  {
    "prompt_count": 438,
    "instruction_original": "Outline an itinerary for a three day trip.",
    "input": "Location: London, England",
    "instruct_all_caps": "OUTLINE AN ITINERARY FOR A THREE DAY TRIP.",
    "instruct_em_dash_break": "Outline an itinerary—for a three day trip.",
    "instruct_extra_punct": "Outline an itinerary for a three day trip!!!",
    "instruct_hashtags": "Outline an itinerary for a three day trip #travel #itinerary",
    "instruct_inline_ad": "Outline an itinerary (Click here for travel deals!) for a three day trip.",
    "instruct_inline_url": "Outline an itinerary (check out example.com) for a three day trip.",
    "instruct_interrobang": "Outline an itinerary for a three day trip‽",
    "instruct_key_smash": "Outline an itinerary for a three day trip asdfghjkl;",
    "instruct_leet_speak": "0u7l1n3 an 171n3r4ry f0r a 7hr33 d4y 7r1p.",
    "instruct_misplaced_commas": "Outline, an itinerary for, a three day, trip.",
    "instruct_missing_bracket": "[Outline an itinerary for a three day trip.",
    "instruct_missing_bracket_and_quote": "'Outline an itinerary for a three day trip]",
    "instruct_missing_quote": "'Outline an itinerary for a three day trip.",
    "instruct_no_caps": "outline an itinerary for a three day trip.",
    "instruct_no_punct": "Outline an itinerary for a three day trip",
    "instruct_one_typo_punctuation": "Outline an itinerary for a three day trip,",
    "instruct_oxford_comma": "Outline an itinerary, for a three day trip.",
    "instruct_parenthetical_aside": "Outline an itinerary (a detailed plan) for a three day trip.",
    "instruct_random_caps": "OUTLine AN ItinErArY fOr A tHREe DAY trIP.",
    "instruct_sms_abbrev": "Otlne n itinry 4 a 3 day trip.",
    "instruct_three_typos_punctuation": "Outline an itinerary for a three day trip?!?.",
    "instruct_two_typos_punctuation": "Outline an itinerary for a three day trip!?",
    "instruct_typo_adjacent": "Outlinw an itinarary for a thrwe day trip.",
    "instruct_typo_extra_letter": "Outlinese an itineraryy for a three day trip.",
    "instruct_typo_extra_space": "Outline  an itinerary  for a three  day trip.",
    "instruct_typo_homophone": "Outline an itnerary for a thru day trip.",
    "instruct_typo_missing_letter": "Ouline an itinrary for a thre day trip.",
    "instruct_typo_missing_space": "Outlineanitineraryforathreedaytrip.",
    "instruct_typo_missing_vowels": "Otlne n itnrry fr a thr dy trp.",
    "instruct_typo_random": "Outlie an itinrary foo a threa day trep.",
    "instruct_typo_repeated_letters": "Outline an itinerarry for a threee day trip.",
    "instruct_typo_swap": "Outlien an itienrary for a three day tirp.",
    "instruct_typo_swap_and_punctuation": "Outlien an itienrary for a three day tirp!?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Oultien an itienarry for a trhee day tirp.!;",
    "instruct_typo_transpose": "Oultine an itinearry for a trhee day trip.",
    "instruct_typo_wrong_letter": "Cutline an itinbrary for a three day trip.",
    "output": "Day 1: Begin your day at St. Paul’s Cathedral, then take a leisurely stroll down to the bustling markets at Borough, followed by a cruise down the Thames. Afterward, walk through the lush greenery of Kensington Gardens and admire the beauty of Kensington Palace. End your day with dinner at one of London’s most iconic restaurants.\n\nDay 2: Start the day with a visit to the historic Tower of London, followed by a scenic boat ride along the Thames. Afterward, head to the Tate Britain art gallery and explore the best of British art. Then, practice your photography skills at the beautiful Oxford Street and Hyde Park. \n\nDay 3: Visit the famous British Museum, followed by a trip to the bustling and vibrant Covent Garden. Afterward, take a delightful walk to the iconic Big Ben, the most iconic clock tower in London. End the day with a quiet and cozy dinner surrounded by the views of the London Eye.",
    "prompt_id": "deb32643-c788-41b7-a6a1-d79826bd7773"
  },
  {
    "prompt_count": 439,
    "instruction_original": "Classify the item as either animal or vegetable.",
    "input": "Banana",
    "instruct_all_caps": "CLASSIFY THE ITEM AS EITHER ANIMAL OR VEGETABLE.",
    "instruct_em_dash_break": "Classify the item—as either animal or vegetable.",
    "instruct_extra_punct": "Classify the item!!! as either animal or vegetable????",
    "instruct_hashtags": "Classify the item as either animal or vegetable #classification #animal #vegetable",
    "instruct_inline_ad": "Classify the item as either animal or vegetable (Buy now!).",
    "instruct_inline_url": "Classify the item as either animal or vegetable (visit mysite.com).",
    "instruct_interrobang": "Classify the item as either animal or vegetable?!",
    "instruct_key_smash": "Classify the item as either animal or vegetable asdkjf;lsadf.",
    "instruct_leet_speak": "Cl4$$!fy th3 !t3m 4$ 3!th3r 4n!m4l 0r v3g3t4bl3.",
    "instruct_misplaced_commas": "Classify, the item, as either, animal or vegetable.",
    "instruct_missing_bracket": "Classify the item [as either animal or vegetable.",
    "instruct_missing_bracket_and_quote": "'Classify the item [as either animal or vegetable.",
    "instruct_missing_quote": "'Classify the item as either animal or vegetable.",
    "instruct_no_caps": "classify the item as either animal or vegetable.",
    "instruct_no_punct": "Classify the item as either animal or vegetable",
    "instruct_one_typo_punctuation": "Classify the item as either animal or vegetable?",
    "instruct_oxford_comma": "Classify the item as either animal or vegetable.",
    "instruct_parenthetical_aside": "Classify the item (e.g. a plant or a dog) as either animal or vegetable.",
    "instruct_random_caps": "ClAsSiFy tHe ItEm As EiThEr AnImAl Or VeGeTaBlE.",
    "instruct_sms_abbrev": "Clasify the itm az eithr anml or vgtbl.",
    "instruct_three_typos_punctuation": "Classify; the item, as either animal? or vegetable.",
    "instruct_two_typos_punctuation": "Classify, the item as either animal or vegetable.",
    "instruct_typo_adjacent": "Classiby the item as either animal or vegetable.",
    "instruct_typo_extra_letter": "Classifyy the item as either animal or vegetable.",
    "instruct_typo_extra_space": "Classify the item as either animal or vegetable.",
    "instruct_typo_homophone": "Classify the item as eyether animal or vegetable.",
    "instruct_typo_missing_letter": "Classiy the item as either animal or vegetable.",
    "instruct_typo_missing_space": "Classifythe item as either animal or vegetable.",
    "instruct_typo_missing_vowels": "Clssf th tm s eithr nml r vgtbl.",
    "instruct_typo_random": "Classifzy the item as either animal or vegetable.",
    "instruct_typo_repeated_letters": "Classsify the item as either animal or vegetable.",
    "instruct_typo_swap": "Clasisfy the item as either animal or vegetable.",
    "instruct_typo_swap_and_punctuation": "Clasisfy the item as either animal or vegetable!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Classfiy the item as either animal or vegetable?!",
    "instruct_typo_transpose": "Classfiy the item as either animal or vegetable.",
    "instruct_typo_wrong_letter": "Classify the item as eeither animal or vegetable.",
    "output": "Animal: No, it's a vegetable.",
    "prompt_id": "342d47ea-9df4-4695-9cd9-499848f16d95"
  },
  {
    "prompt_count": 440,
    "instruction_original": "Derive the mathematical equation for a straight line.",
    "input": "",
    "instruct_all_caps": "DERIVE THE MATHEMATICAL EQUATION FOR A STRAIGHT LINE.",
    "instruct_em_dash_break": "Derive the mathematical equation—for a straight line.",
    "instruct_extra_punct": "Derive!!! the mathematical... equation??? for a straight line!!!!",
    "instruct_hashtags": "Derive the mathematical equation for a straight line #math #algebra #equation",
    "instruct_inline_ad": "Derive the mathematical equation (Get Our Math App!) for a straight line.",
    "instruct_inline_url": "Derive the mathematical equation (https://math.example.com) for a straight line.",
    "instruct_interrobang": "Derive the mathematical equation for a straight line!?",
    "instruct_key_smash": "Derive the mathematical equation asdfghjkl; for a straight line.",
    "instruct_leet_speak": "D3r1v3 7h3 m47h3m471c4l 3qu4710n f0r 4 57r41gh7 l1n3.",
    "instruct_misplaced_commas": "Derive, the mathematical, equation for a, straight line.",
    "instruct_missing_bracket": "Derive the mathematical equation for a straight line]",
    "instruct_missing_bracket_and_quote": "\"Derive the mathematical equation]",
    "instruct_missing_quote": "'Derive the mathematical equation for a straight line.",
    "instruct_no_caps": "derive the mathematical equation for a straight line.",
    "instruct_no_punct": "Derive the mathematical equation for a straight line",
    "instruct_one_typo_punctuation": "Derive the mathematical equation for a straight line?",
    "instruct_oxford_comma": "Derive the mathematical equation for a straight line.",
    "instruct_parenthetical_aside": "Derive the mathematical equation (you know, y=mx+b) for a straight line.",
    "instruct_random_caps": "dErIvE ThE mAtHeMaTiCaL eQuAtIoN fOr A sTrAiGhT lInE.",
    "instruct_sms_abbrev": "Derive the math eqn 4 a str8 line.",
    "instruct_three_typos_punctuation": "Derive? the mathematical: equation, for a straight line.",
    "instruct_two_typos_punctuation": "Derive? the mathematical equation, for a straight line.",
    "instruct_typo_adjacent": "Derive the mathdmatical equagion for a straasght line.",
    "instruct_typo_extra_letter": "Derive the mathematicaal equuation for a straightt line.",
    "instruct_typo_extra_space": "Derive the mathe matical equation for a straight line.",
    "instruct_typo_homophone": "Derive the mathematical equation for a strait line.",
    "instruct_typo_missing_letter": "Derive the mathematcal equatin for a straigt line.",
    "instruct_typo_missing_space": "Derivethemathematicalequationforastraightline.",
    "instruct_typo_missing_vowels": "Drv th mthmtcl eqtn fr a strght ln.",
    "instruct_typo_random": "Derive the mathemtaical equaqion for a straight line.",
    "instruct_typo_repeated_letters": "Derive the mathheematical equaation for a straigght liine.",
    "instruct_typo_swap": "Derive the matemathcial eqautoin for a sraight line.",
    "instruct_typo_swap_and_punctuation": "Derive the matemathcial eqautoin for a sraight line?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Deriev the mtheamtical eqaution fro a sraight lnie!",
    "instruct_typo_transpose": "Deriev the mtheamtical eqaution fro a sraight lnie.",
    "instruct_typo_wrong_letter": "Detive the mathemaxical equation for a straighr line.",
    "output": "y = mx + b, where m is the slope and b is the y-intercept of the line.",
    "prompt_id": "9cbb86db-f93d-4720-af4c-73455fea4936"
  },
  {
    "prompt_count": 441,
    "instruction_original": "Describe the physical features of a tiger.",
    "input": "",
    "instruct_all_caps": "DESCRIBE THE PHYSICAL FEATURES OF A TIGER.",
    "instruct_em_dash_break": "Describe the physical features—of a tiger.",
    "instruct_extra_punct": "Describe the physical features of a tiger!!!",
    "instruct_hashtags": "Describe the physical features of a tiger. #tiger #bigcats",
    "instruct_inline_ad": "Describe the physical features of a tiger. Buy tiger toys!",
    "instruct_inline_url": "Describe the physical features of a tiger. Learn more at tigerfacts.info",
    "instruct_interrobang": "Describe the physical features of a tiger‽",
    "instruct_key_smash": "Describe the physical features of a tiger asdfg hjkl;",
    "instruct_leet_speak": "D35cr1b3 7h3 phy51c4l f34tur35 0f 4 71g3r.",
    "instruct_misplaced_commas": "Describe, the physical, features of a, tiger.",
    "instruct_missing_bracket": "Describe the physical features of a tiger).",
    "instruct_missing_bracket_and_quote": "Describe the \"physical features of a tiger.)",
    "instruct_missing_quote": "Describe the \"physical features of a tiger.",
    "instruct_no_caps": "describe the physical features of a tiger.",
    "instruct_no_punct": "Describe the physical features of a tiger",
    "instruct_one_typo_punctuation": "Describe the physical features of a tiger,",
    "instruct_oxford_comma": "Describe the physical features, of a tiger.",
    "instruct_parenthetical_aside": "Describe the physical features (stripes and fur, etc.) of a tiger.",
    "instruct_random_caps": "DeScRiBe tHe pHySiCaL fEaTuReS oF a TiGeR.",
    "instruct_sms_abbrev": "dscrbe the fysicl ftrs of a tgr lol",
    "instruct_three_typos_punctuation": "Describe the physical features of a tiger?!.",
    "instruct_two_typos_punctuation": "Describe the physical features of a tiger!?",
    "instruct_typo_adjacent": "Descrine the phyiscal features of a tuget.",
    "instruct_typo_extra_letter": "Describbe the physical features of a tigerr.",
    "instruct_typo_extra_space": "Describe the  physical features  of a  tiger.",
    "instruct_typo_homophone": "Descroibe the phisical featuers of a tyger.",
    "instruct_typo_missing_letter": "Describ the physical fetures of a tger.",
    "instruct_typo_missing_space": "Describethephysicalfeaturesofatiger.",
    "instruct_typo_missing_vowels": "Dscrb th phscl ftrs of a tgr.",
    "instruct_typo_random": "Describ the physical features of a tger.",
    "instruct_typo_repeated_letters": "Describee the phhyysical featuress of a tiiger.",
    "instruct_typo_swap": "Desrcbie teh phtsical feautres fo a tgeir.",
    "instruct_typo_swap_and_punctuation": "Desrcbie teh phtsical feautres fo a tgeir!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Dscribe teh phsycial fetuaers of a tgier?!",
    "instruct_typo_transpose": "Dscribe teh phsycial fetuaers of a tgier.",
    "instruct_typo_wrong_letter": "Descrive the physical features of a figher.",
    "output": "Tigers are large, powerful cats with extremely strong muscles. They have short, reddish orange fur covered with dark vertical stripes. Their heads are darker with narrower stripes and the tail is long and the tip is usually white. They have large, padded feet and can weigh up to 660 pounds. Tigers' eyes are yellow with vertical, black pupils. They have sharp teeth and large, retractable claws.",
    "prompt_id": "c2a661ba-8c40-49a3-b468-00e8f02321ab"
  },
  {
    "prompt_count": 442,
    "instruction_original": "Summarize the argument in the text.",
    "input": "In the book \"Crime and Punishment\" by Fyodor Dostoevsky, the main character, Raskolnikov, commits a murder in hope of revealing a higher purpose.",
    "instruct_all_caps": "SUMMARIZE THE ARGUMENT IN THE TEXT.",
    "instruct_em_dash_break": "Summarize the argument—the main points—in the text.",
    "instruct_extra_punct": "Summarize the argument in the text...!!!",
    "instruct_hashtags": "Summarize the argument in the text #summary #argument #text",
    "instruct_inline_ad": "Summarize the argument in the text (sponsored content).",
    "instruct_inline_url": "Summarize the argument in the text (details at https://example.com).",
    "instruct_interrobang": "Summarize the argument in the text!?",
    "instruct_key_smash": "Summarize the argument in the text asdfghjkl;",
    "instruct_leet_speak": "5umm4r1z3 7h3 4rguM3n7 1n 7h3 73x7.",
    "instruct_misplaced_commas": "Summarize, the argument, in, the text.",
    "instruct_missing_bracket": "Summarize the argument (the core point in the text.",
    "instruct_missing_bracket_and_quote": "Summarize the \"(main argument in the text.",
    "instruct_missing_quote": "Summarize the \"main argument in the text.",
    "instruct_no_caps": "summarize the argument in the text.",
    "instruct_no_punct": "Summarize the argument in the text",
    "instruct_one_typo_punctuation": "Summarize the argument in the text,",
    "instruct_oxford_comma": "Summarize the argument, conclusion, and evidence in the text.",
    "instruct_parenthetical_aside": "Summarize the argument (the main idea) in the text.",
    "instruct_random_caps": "SuMmArIzE tHe ArGuMeNt In ThE tExT.",
    "instruct_sms_abbrev": "Summarize the argmnt in the txt pls.",
    "instruct_three_typos_punctuation": "Summarize the argument in the text,,,",
    "instruct_two_typos_punctuation": "Summarize the argument in the text,,",
    "instruct_typo_adjacent": "Summsrize the arggment in the gext.",
    "instruct_typo_extra_letter": "Summarize the arguument in the text.",
    "instruct_typo_extra_space": "Summarize the argument in the text .",
    "instruct_typo_homophone": "Summarys the argument in the text.",
    "instruct_typo_missing_letter": "Sumarize the argument in the text.",
    "instruct_typo_missing_space": "Summarizethe argument in the text.",
    "instruct_typo_missing_vowels": "Smmrz th rgmt n th txt.",
    "instruct_typo_random": "Summarize the argulment in the text.",
    "instruct_typo_repeated_letters": "Summmarize the arggument in the textt.",
    "instruct_typo_swap": "Smummarize the ragment in the teat.",
    "instruct_typo_swap_and_punctuation": "Smummarize the ragment in the teat,",
    "instruct_typo_swap_and_transpose_and_punctuation": "Summriaez the argmuent in the txet,",
    "instruct_typo_transpose": "Summriaez the argmuent in the txet.",
    "instruct_typo_wrong_letter": "Summarize the arfument in the text.",
    "output": "In \"Crime and Punishment\" by Fyodor Dostoevsky, the protagonist Raskolnikov commits a murder believing it will prove his Nietzschean idea that extraordinary people can rise above morality. Ultimately, however, he is not rewarded by society and instead is consumed by guilt, regret and suffering.",
    "prompt_id": "7fabb9dc-4e03-4277-84ab-70060aebc1e9"
  },
  {
    "prompt_count": 443,
    "instruction_original": "Generate ideas for a fiction story.",
    "input": "",
    "instruct_all_caps": "GENERATE IDEAS FOR A FICTION STORY.",
    "instruct_em_dash_break": "Generate ideas—for a fiction story.",
    "instruct_extra_punct": "Generate ideas for a fiction story!!!???...",
    "instruct_hashtags": "Generate ideas for a fiction story #writing #storyideas #fiction",
    "instruct_inline_ad": "Generate ideas for a fiction story - Limited Time Offer!",
    "instruct_inline_url": "Generate ideas for a fiction story find more at fictionideas.com",
    "instruct_interrobang": "Generate ideas for a fiction story!?",
    "instruct_key_smash": "Generate ideas for a fiction story asdfjkl;",
    "instruct_leet_speak": "63n3r473 1d345 f0r 4 f1c710n 570ry.",
    "instruct_misplaced_commas": "Generate, ideas, for, a, fiction story.",
    "instruct_missing_bracket": "Generate ideas (for a fiction story.",
    "instruct_missing_bracket_and_quote": "Generate ideas \"for a fiction story.",
    "instruct_missing_quote": "\"Generate ideas for a fiction story.",
    "instruct_no_caps": "generate ideas for a fiction story.",
    "instruct_no_punct": "Generate ideas for a fiction story",
    "instruct_one_typo_punctuation": "Generate ideas, for a fiction story.",
    "instruct_oxford_comma": "Generate ideas for a fiction story, and more.",
    "instruct_parenthetical_aside": "Generate ideas (some really wild ones) for a fiction story.",
    "instruct_random_caps": "gEnErAtE IdEaS fOr A fIcTiOn StOrY.",
    "instruct_sms_abbrev": "Gen ideas 4 a fict story.",
    "instruct_three_typos_punctuation": "Generate ideas! for a. fiction story?",
    "instruct_two_typos_punctuation": "Generate ideas, for a; fiction story.",
    "instruct_typo_adjacent": "Gewerate ideas for a fiction story.",
    "instruct_typo_extra_letter": "Generatte ideas for a fiction story.",
    "instruct_typo_extra_space": "Generate ideas for a fiction  story.",
    "instruct_typo_homophone": "Generate ideas fore a fiction story.",
    "instruct_typo_missing_letter": "Generae ideas for a fiction story.",
    "instruct_typo_missing_space": "Generateideas for a fiction story.",
    "instruct_typo_missing_vowels": "Gnrt ids fr a fctn stry.",
    "instruct_typo_random": "Generate idea for a fiction stoory.",
    "instruct_typo_repeated_letters": "Generate ideass for a fiction stoory.",
    "instruct_typo_swap": "Genearte idaes for a fictin story.",
    "instruct_typo_swap_and_punctuation": "Genearte idaes, for a fictin story.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Gnereate idaes! for a fictin sroty.",
    "instruct_typo_transpose": "Gnereate ideas for a ficiton sroty.",
    "instruct_typo_wrong_letter": "Generate ideas for a fiction ctory.",
    "output": "Ideas for a fiction story could include a tale of forbidden love between two members of rival families, a story set in an alternate universe populated by supernatural creatures, a journey of self-discovery on a remote island, or a comedy about an unlikely couple who gets hired by a mysterious organization.",
    "prompt_id": "912a8071-8f76-4366-ae76-c778ac27667d"
  },
  {
    "prompt_count": 444,
    "instruction_original": "Describe the Renaissance period.",
    "input": "",
    "instruct_all_caps": "DESCRIBE THE RENAISSANCE PERIOD.",
    "instruct_em_dash_break": "Describe—the Renaissance—period.",
    "instruct_extra_punct": "Describe.. the.. Renaissance.. period!?!",
    "instruct_hashtags": "Describe the Renaissance period #history #art #culture.",
    "instruct_inline_ad": "Describe the Renaissance period. [inline ad].",
    "instruct_inline_url": "Describe the Renaissance period. [URL].",
    "instruct_interrobang": "Describe the Renaissance period?!",
    "instruct_key_smash": "Describe the Renaissance period asdfghjkl.",
    "instruct_leet_speak": "D35cr1b3 th3 R3n41554nc3 p3r10d.",
    "instruct_misplaced_commas": "Describe, the, Renaissance, period.",
    "instruct_missing_bracket": "Describe the Renaissance period [details.",
    "instruct_missing_bracket_and_quote": "'Describe the Renaissance period [details.",
    "instruct_missing_quote": "'Describe the Renaissance period.",
    "instruct_no_caps": "describe the renaissance period.",
    "instruct_no_punct": "Describe the Renaissance period",
    "instruct_one_typo_punctuation": "Describe the Renaissance period;",
    "instruct_oxford_comma": "Describe the Renaissance period.",
    "instruct_parenthetical_aside": "Describe the Renaissance period (you know, that time in history).",
    "instruct_random_caps": "DeScRiBe tHe rEnAisSaNcE pErIoD.",
    "instruct_sms_abbrev": "dscrub th rnsnc prd plz.",
    "instruct_three_typos_punctuation": "Describe the Renaissance period!?.",
    "instruct_two_typos_punctuation": "Describe the Renaissance period!.",
    "instruct_typo_adjacent": "Descrobe the Renaiswance perood.",
    "instruct_typo_extra_letter": "Desccribe thee Renaissauce perriod.",
    "instruct_typo_extra_space": "Describe the Renaissance period .",
    "instruct_typo_homophone": "Describe their Renaissance period.",
    "instruct_typo_missing_letter": "Dscribe th Rnaissance peiod.",
    "instruct_typo_missing_space": "DescribetheRenaissanceperiod.",
    "instruct_typo_missing_vowels": "Dscrb th Rnsnc prd.",
    "instruct_typo_random": "Dscrib teh Renissanc peiod.",
    "instruct_typo_repeated_letters": "Describee the Renaisssance perriod.",
    "instruct_typo_swap": "Dsecribe hte Reaniassnce pior de.",
    "instruct_typo_swap_and_punctuation": "Dsecribe hte Reaniassnce peroid?.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Dsercibe hte Reaniassnce preoid!.",
    "instruct_typo_transpose": "Dsercibe the Reaniassnce preiod.",
    "instruct_typo_wrong_letter": "Descripe tye Renaiszance petiod.",
    "output": "The Renaissance period was a period of great change and creativity in Europe, starting in the 14th century and lasting through the 17th century. It was a time when people celebrated the classical values from Greek and Roman societies, sparking a renewed interest in the arts, science, philosophy, and politics. This period saw a dramatic shift away from the previous medieval worldview and ushered in a more humanistic and innovative perspective.",
    "prompt_id": "3ecd66a7-75c7-4c9f-ab93-4a61e4ef2090"
  },
  {
    "prompt_count": 445,
    "instruction_original": "List 5 items of personal protective equipment.",
    "input": "",
    "instruct_all_caps": "LIST 5 ITEMS OF PERSONAL PROTECTIVE EQUIPMENT.",
    "instruct_em_dash_break": "List 5 items\n—of personal protective equipment.",
    "instruct_extra_punct": "List 5 items of personal protective equipment...!!!",
    "instruct_hashtags": "List 5 items of personal protective equipment. #PPE #SafetyFirst",
    "instruct_inline_ad": "List 5 items of personal protective equipment. Shop now!",
    "instruct_inline_url": "List 5 items of personal protective equipment. Visit https://safety.example.com",
    "instruct_interrobang": "List 5 items of personal protective equipment‽",
    "instruct_key_smash": "List 5 items of personal protective equipment. zxcvbnm,./",
    "instruct_leet_speak": "L1st 5 1t3m5 0f p3r50n4l pr0t3ct1v3 3qu1pm3nt.",
    "instruct_misplaced_commas": "List 5, items, of personal, protective, equipment.",
    "instruct_missing_bracket": "List 5 items (of personal protective equipment.",
    "instruct_missing_bracket_and_quote": "Can you 'List 5 items (of personal protective equipment.",
    "instruct_missing_quote": "Can you 'List 5 items of personal protective equipment.",
    "instruct_no_caps": "list 5 items of personal protective equipment.",
    "instruct_no_punct": "List 5 items of personal protective equipment",
    "instruct_one_typo_punctuation": "List 5 items of personal protective equipment?",
    "instruct_oxford_comma": "List 5 items of personal, protective, and equipment.",
    "instruct_parenthetical_aside": "List 5 items of personal protective equipment (e.g., gloves, masks).",
    "instruct_random_caps": "lISt 5 iTeMs Of pErSOnAl PrOtEcTiVe EqUiPmEnT.",
    "instruct_sms_abbrev": "Pls list 5 items of PPE.",
    "instruct_three_typos_punctuation": "List 5 items of personal protective equipment!??!",
    "instruct_two_typos_punctuation": "List 5 items of personal protective equipment!?",
    "instruct_typo_adjacent": "Lizt 5 itegs of qersonal protected equipment.",
    "instruct_typo_extra_letter": "Listt 5 itemss of personall protectivee equipmentt.",
    "instruct_typo_extra_space": "List 5 items of personal protective equipment .",
    "instruct_typo_homophone": "Listed 5 items of personnel protective equipment.",
    "instruct_typo_missing_letter": "Lst 5 itms of prsonal protctive equipent.",
    "instruct_typo_missing_space": "List5itemsofpersonalprotectiveequipment.",
    "instruct_typo_missing_vowels": "Lst 5 tms of prsnl prtctv eqpmnt.",
    "instruct_typo_random": "Liss 5 iten of persnal prtective equiipmnt.",
    "instruct_typo_repeated_letters": "Lisst 5 iteems of personnall protectiive equipmment.",
    "instruct_typo_swap": "Lsit 5 items of perosnal proetcitive equipemnt.",
    "instruct_typo_swap_and_punctuation": "Lsit 5 items of perosnal proetcitive equipemnt?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Lsit 5 itemss of perosnal proetcitive equipemnt!?",
    "instruct_typo_transpose": "Lsit 5 itemss of perosnal proetcitive equipemnt.",
    "instruct_typo_wrong_letter": "Mist 5 items of gersonal profective ezuipment.",
    "output": "1. Face shield\n2. Hard hat\n3. Safety glasses\n4. Respiratory mask\n5. Ear protection",
    "prompt_id": "2df5f195-91df-4b48-97e0-8d27b0c67d30"
  },
  {
    "prompt_count": 446,
    "instruction_original": "Replace the single quote (') to double quote (\") in the given sentence.",
    "input": "In the U.S., KIPP is a 'public-private partnership'.",
    "instruct_all_caps": "REPLACE THE SINGLE QUOTE (') TO DOUBLE QUOTE (\") IN THE GIVEN SENTENCE.",
    "instruct_em_dash_break": "Replace the single quote (')—to double quote (\")—in the given sentence.",
    "instruct_extra_punct": "Replace,, the single quote (')! to double quote (\"), in the given sentence??",
    "instruct_hashtags": "Replace the single quote (') to double quote (\") in the given sentence. #quotes #replace #typography",
    "instruct_inline_ad": "Replace the single quote (') to double quote (\") in the given sentence. Get great deals on quotes today!",
    "instruct_inline_url": "Replace the single quote (') to double quote (\") in the given sentence. Find out more at example.com/quotes",
    "instruct_interrobang": "Replace the single quote (') to double quote (\") in the given sentence‽",
    "instruct_key_smash": "Replace the single quote (') to double quote (\") in the given sentence. jkldf;aosdifi",
    "instruct_leet_speak": "R3pl4c3 th3 s1ngl3 qu0t3 (') t0 d0ubl3 qu0t3 (\") 1n th3 g1v3n s3nt3nc3.",
    "instruct_misplaced_commas": "Replace, the single quote, (') to, double quote (\"), in the, sentence.",
    "instruct_missing_bracket": "Replace the single quote ') to double quote (\") in the given sentence.",
    "instruct_missing_bracket_and_quote": "Replace the single quote ) to double quote \" in the given sentence.",
    "instruct_missing_quote": "Replace the single quote () to double quote (\") in the given sentence.",
    "instruct_no_caps": "replace the single quote (') to double quote (\") in the given sentence.",
    "instruct_no_punct": "Replace the single quote to double quote in the given sentence",
    "instruct_one_typo_punctuation": "Replace the single quote (') to double quote (\",) in the given sentence.",
    "instruct_oxford_comma": "Replace the single quote ('), to double quote (\") in the given sentence.",
    "instruct_parenthetical_aside": "Replace the single quote (') to double quote (\") in the given sentence (as per requirement).",
    "instruct_random_caps": "RePlAcE tHe SiNgLe QuOtE (') To DoUbLe QuOtE (\") In ThE gIvEn SeNtEnCe.",
    "instruct_sms_abbrev": "Rplce single qte (') 2 dbl qte (\") in th gvn sntnc.",
    "instruct_three_typos_punctuation": "Replace the single quote (') to double quote (\",') in the given sentence?!",
    "instruct_two_typos_punctuation": "Replace the single quote (') to double quote (\",') in the given sentence?",
    "instruct_typo_adjacent": "Replace the singpe quote (') t0 double qu0te (\") in the given s3ntence.",
    "instruct_typo_extra_letter": "Replace the singgle quote (') to douuble quote (\") in the givven sentence.",
    "instruct_typo_extra_space": "Replace the single  quote (') to double quote (\") in the given sentence.",
    "instruct_typo_homophone": "Replace the single quote (') two double quote (\") in the given sentence.",
    "instruct_typo_missing_letter": "Replce the singe quote (') to doube quote (\") in the gven sentence.",
    "instruct_typo_missing_space": "Replacethesinglequote(')todoublequote(\")inthegivensentence.",
    "instruct_typo_missing_vowels": "Rplc th sngl qt (') t dbl qt (\") n th gvn sntnc.",
    "instruct_typo_random": "Replce th singe qote (') to doube quote (\") n th givven sntence.",
    "instruct_typo_repeated_letters": "Repplace thee singgle quuote (') too doubblee quuote (\") in the ggiven senttence.",
    "instruct_typo_swap": "Rplace the sngile qoute (') ot dubole qoute (\") in the gvien snetence.",
    "instruct_typo_swap_and_punctuation": "Rplace the single qoute (') to double quote (\",) in the given sentence.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Rpleace the single qoute (') to double quote (\",) in the given senetnce.",
    "instruct_typo_transpose": "Relpace the singel quote (') to dolbue qutoe (\") ni the gvien senetnce.",
    "instruct_typo_wrong_letter": "Replace the singwe quote (') to douvle quote (\") in the giken sentence.",
    "output": "In the U.S., KIPP is a \"public-private partnership\".",
    "prompt_id": "5cc00dc8-b61b-4e22-9130-7d6f9ca2a1ea"
  },
  {
    "prompt_count": 447,
    "instruction_original": "Construct plumbing diagrams for a two-story house",
    "input": "",
    "instruct_all_caps": "CONSTRUCT PLUMBING DIAGRAMS FOR A TWO-STORY HOUSE",
    "instruct_em_dash_break": "Construct plumbing diagrams--for a two-story house",
    "instruct_extra_punct": "Construct... plumbing... diagrams... for a two-story house?!",
    "instruct_hashtags": "Construct plumbing diagrams for a two-story house #plumbing #diagrams #house",
    "instruct_inline_ad": "Construct plumbing diagrams for a two-story house (visit sponsor.com!)",
    "instruct_inline_url": "Construct plumbing diagrams for a two-story house (more info at example.com)",
    "instruct_interrobang": "Construct plumbing diagrams for a two-story house?!",
    "instruct_key_smash": "Construct plumbing diagrams for a two-story house asdfghjkl;",
    "instruct_leet_speak": "C0n5trUct plvm61n6 d14gr4m5 f0r 4 tw0-5t0ry h0v53",
    "instruct_misplaced_commas": "Construct, plumbing diagrams, for, a two-story house",
    "instruct_missing_bracket": "Construct plumbing diagrams [for a two-story house",
    "instruct_missing_bracket_and_quote": "\"Construct plumbing diagrams for a two-story house",
    "instruct_missing_quote": "Construct plumbing diagrams for a two-story house",
    "instruct_no_caps": "construct plumbing diagrams for a two-story house",
    "instruct_no_punct": "Construct plumbing diagrams for a two-story house",
    "instruct_one_typo_punctuation": "Construct plumbing diagrams for a two-story house.",
    "instruct_oxford_comma": "Construct plumbing diagrams for a two-story, house",
    "instruct_parenthetical_aside": "Construct plumbing diagrams (the detailed kind) for a two-story house",
    "instruct_random_caps": "cOnStRuct PlUmBiNg DiAgRaMs For A tWo-sToRy HoUsE",
    "instruct_sms_abbrev": "cnstrct plmbng diagrms 4 a 2-story hs",
    "instruct_three_typos_punctuation": "Construct plumbing diagrams for a two-story house..!!?",
    "instruct_two_typos_punctuation": "Construct plumbing diagrams for a two-story house?.",
    "instruct_typo_adjacent": "Conztruct olumbibg diagtams for a two-wtory jouse",
    "instruct_typo_extra_letter": "Constract plumbing diagdrams for a two-story housee",
    "instruct_typo_extra_space": "Construct plumbing diagrams  for a  two-story house",
    "instruct_typo_homophone": "Konstruct plumbing diagrams fore a too-story house",
    "instruct_typo_missing_letter": "Constuct plumbing diagra for a two-story hous",
    "instruct_typo_missing_space": "Constructplumbingdiagramsfora two-storyhouse",
    "instruct_typo_missing_vowels": "Cnstrct plmbng dgrsms fr a tw-stry hs",
    "instruct_typo_random": "Cnstrxuct plumbin diagrs for a two-strry hous",
    "instruct_typo_repeated_letters": "Construct pluumbing diagramss for a two-story hoouse",
    "instruct_typo_swap": "Constrcut pulmbing diaagrams fro a two-tsory huse",
    "instruct_typo_swap_and_punctuation": "Constrcut! pulmbing diaagrams fro a two-tsory huse",
    "instruct_typo_swap_and_transpose_and_punctuation": "Constrcut; pulmbing diaagrams fof a two-tsory huse?!",
    "instruct_typo_transpose": "Contsruct plubming diargams for a tw-ostory huose",
    "instruct_typo_wrong_letter": "Gonstruct plumbing diagrams for a two-story house",
    "output": "A typical two-story house requires a plumbing diagram which consists of two main components: a main valve system and branch lines running off the main valve system. On the main valve system, the water supply should stem from the municipally provided connection. The branch lines should lead to the fixtures (bathtub, sink, shower, etc.) installed in the two-story house. The branch lines may require T-splitters to regulate the flow and allow for multiple fixtures to be connected. Additionally, the drains should be connected to a single main drain line outlet leading to the septic tank or municipal sewage system.",
    "prompt_id": "98d60041-46c0-458e-bbc4-6e50c75c737a"
  },
  {
    "prompt_count": 448,
    "instruction_original": "Compare student debt crisis in the US and Canada.",
    "input": "",
    "instruct_all_caps": "COMPARE STUDENT DEBT CRISIS IN THE US AND CANADA.",
    "instruct_em_dash_break": "Compare student debt crisis—in the US and Canada—",
    "instruct_extra_punct": "Compare student debt crisis in the US and Canada...!!!",
    "instruct_hashtags": "Compare student debt crisis in the US and Canada. #studentdebt #crisis #US #Canada",
    "instruct_inline_ad": "Compare student debt crisis in the US and Canada. (Check out our great offers!)",
    "instruct_inline_url": "Compare student debt crisis in the US and Canada. Find details at example.com",
    "instruct_interrobang": "Compare student debt crisis in the US and Canada‽",
    "instruct_key_smash": "Compare student debt crisis in the US and Canada. ghjklasdf",
    "instruct_leet_speak": "C0mp4r3 57ud3n7 d3b7 cr1515 1n 7h3 U5 4nd C4n4d4.",
    "instruct_misplaced_commas": "Compare, student, debt crisis, in the US, and Canada.",
    "instruct_missing_bracket": "[Compare student debt crisis in the US and Canada.",
    "instruct_missing_bracket_and_quote": "'Compare student debt crisis in the US and Canada.",
    "instruct_missing_quote": "'Compare student debt crisis in the US and Canada.",
    "instruct_no_caps": "compare student debt crisis in the us and canada.",
    "instruct_no_punct": "Compare student debt crisis in the US and Canada",
    "instruct_one_typo_punctuation": "Compare student debt crisis in the US and Canada?",
    "instruct_oxford_comma": "Compare the student debt crisis trends, causes, and effects in the US and Canada.",
    "instruct_parenthetical_aside": "Compare student debt crisis in the US and Canada (it's a major issue).",
    "instruct_random_caps": "CoMpArE sTuDeNt DeBt CrIsIs iN ThE uS AnD cAnAdA.",
    "instruct_sms_abbrev": "cmpr stdnt dbt crsis in US & Cnda.",
    "instruct_three_typos_punctuation": "Compare; student debt crisis, in the US and Canada?!",
    "instruct_two_typos_punctuation": "Compare student debt crisis, in the US and Canada.",
    "instruct_typo_adjacent": "Compare stufent debt crisis in the US and Canada.",
    "instruct_typo_extra_letter": "Comparre student debt crisis in the US and Canada.",
    "instruct_typo_extra_space": "Compare student debt crisis in the US and Canada .",
    "instruct_typo_homophone": "Compare student debt crisis in the US and Caneada.",
    "instruct_typo_missing_letter": "Compar student debt crisis in the US and Canada.",
    "instruct_typo_missing_space": "Compare student debt crisis in the USand Canada.",
    "instruct_typo_missing_vowels": "Cmpr stdnt dbt crss n th US nd Cnd.",
    "instruct_typo_random": "Coapare sstuent debt crisis in the US a nd Canada.",
    "instruct_typo_repeated_letters": "Compare studentt debt crisiss in the US and Canada.",
    "instruct_typo_swap": "Cpmoare student dbet crsis in the US and Canada.",
    "instruct_typo_swap_and_punctuation": "Cpmoare student dbet crsis in the US and Canada!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Cpmoare stundet debr crsisi in the US and Canada;?",
    "instruct_typo_transpose": "Cmopare stundet debr crsisi in the US and Canada.",
    "instruct_typo_wrong_letter": "Compate student debt crisis in the US and Canada.",
    "output": "The student debt crisis is a major issue for both the US and Canada, although there are some differences between the two countries. In the US, student debt reached a record $1.5 trillion in 2019, with the average student owing around $32,600. In Canada, the debt situation is not as dire as in the US, but still a cause for concern. The average student debt in Canada is around $26,300, and total student debt reached over $35.4 billion in 2019. Canada does have some advantages compared to the US, such as more generous government loan programs which have allowed students to pay back the loans at lower rates. However, student debt in both countries has been steadily rising in recent years, and is likely to remain a major issue.",
    "prompt_id": "2fba7285-31aa-4433-b661-a76e43b5ddf2"
  },
  {
    "prompt_count": 449,
    "instruction_original": "List the benefits of Amazon Web Services.",
    "input": "",
    "instruct_all_caps": "LIST THE BENEFITS OF AMAZON WEB SERVICES.",
    "instruct_em_dash_break": "List the benefits—you know—of Amazon Web Services.",
    "instruct_extra_punct": "List the benefits of Amazon Web Services...!!!",
    "instruct_hashtags": "List the benefits of Amazon Web Services. #AWS #Cloud #Benefits",
    "instruct_inline_ad": "List the benefits of Amazon Web Services. Buy our amazing product today!",
    "instruct_inline_url": "List the benefits of Amazon Web Services. Check out https://example.com",
    "instruct_interrobang": "List the benefits of Amazon Web Services?!",
    "instruct_key_smash": "List the benefits of Amazon Web Services asdfghjkl;",
    "instruct_leet_speak": "L15t 7h3 b3n3f175 0f 4m4z0n W3b 53rv1c35.",
    "instruct_misplaced_commas": "List, the benefits, of, Amazon Web, Services.",
    "instruct_missing_bracket": "[List the benefits of Amazon Web Services.",
    "instruct_missing_bracket_and_quote": "\"List the benefits of Amazon Web Services.",
    "instruct_missing_quote": "\"List the benefits of Amazon Web Services.",
    "instruct_no_caps": "list the benefits of amazon web services.",
    "instruct_no_punct": "List the benefits of Amazon Web Services",
    "instruct_one_typo_punctuation": "List the benefits of Amazon Web Services?",
    "instruct_oxford_comma": "List the benefits, of, Amazon Web Services.",
    "instruct_parenthetical_aside": "List the benefits (all the good things) of Amazon Web Services.",
    "instruct_random_caps": "LiSt tHe bEnEfItS oF aMaZoN WeB SeRvIcEs.",
    "instruct_sms_abbrev": "Lst da bnfts of Amzn Web Srves.",
    "instruct_three_typos_punctuation": "List the benefits of Amazon Web Services.!?!",
    "instruct_two_typos_punctuation": "List the benefits of Amazon Web Services..!",
    "instruct_typo_adjacent": "Kisy yhr brnrfits of Amavon Wrb Srrvicrs.",
    "instruct_typo_extra_letter": "List the benefits of Amazoon Web Services.",
    "instruct_typo_extra_space": "List the benefits of Amazon Web Services. ",
    "instruct_typo_homophone": "Lyst the benefits of Amazon Web Services.",
    "instruct_typo_missing_letter": "List the benefts of Amazon Web Services.",
    "instruct_typo_missing_space": "ListthebenefitsofAmazonWebServices.",
    "instruct_typo_missing_vowels": "Lst th bnfts f Amzn Wb Srvcs.",
    "instruct_typo_random": "Lsit rhe beneifits of Amazon Wev Servcies.",
    "instruct_typo_repeated_letters": "List the beneffits of Amazon Web Serviccess.",
    "instruct_typo_swap": "Lsit the beneifts of Amazno Web Servcies.",
    "instruct_typo_swap_and_punctuation": "Lsit the beneifts of Amazno Web Servcies?!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Lsit teh beneifts of Amazno Web Servcies!?",
    "instruct_typo_transpose": "List teh benefits of Amzaon Web Servcies.",
    "instruct_typo_wrong_letter": "List the benifits of Amazon Web Services.",
    "output": "Amazon Web Services (AWS) is a cloud computing platform that provides a suite of services and infrastructure to organizations. Benefits of AWS include scalability, reliability, affordability, security, performance, and global availability. Additionally, AWS supports a range of operating systems and programming languages, offering users flexibility in how they build and deploy applications. Furthermore, AWS includes a range of features and services, including analytics, storage, compute, machine learning, AI, IoT, and serverless computing, so organizations can use only what they need, when they need it.",
    "prompt_id": "2569dc25-c990-4d43-b52e-7c54102ac006"
  },
  {
    "prompt_count": 450,
    "instruction_original": "Generate a limerick poem about a lemur.",
    "input": "",
    "instruct_all_caps": "GENERATE A LIMERICK POEM ABOUT A LEMUR.",
    "instruct_em_dash_break": "Generate a limerick—poem—about a lemur.",
    "instruct_extra_punct": "Generate! A limerick? Poem... about a lemur!!!!",
    "instruct_hashtags": "Generate a limerick poem about a lemur #limerick #lemur #poem",
    "instruct_inline_ad": "Generate a limerick poem about a lemur. Sponsored by Acme Corp!",
    "instruct_inline_url": "Generate a limerick poem about a lemur. Learn more: example.com",
    "instruct_interrobang": "Generate a limerick poem about a lemur!?",
    "instruct_key_smash": "Generate a limerick poem about a lemur aksjdflk",
    "instruct_leet_speak": "G3n3r473 4 l1m3r1ck p03m 4b0u7 4 l3mur.",
    "instruct_misplaced_commas": "Generate, a limerick, poem, about, a lemur.",
    "instruct_missing_bracket": "Generate a limerick poem about a lemur.",
    "instruct_missing_bracket_and_quote": "Generate a limerick poem about a lemur.",
    "instruct_missing_quote": "Generate a limerick poem about a lemur.",
    "instruct_no_caps": "generate a limerick poem about a lemur.",
    "instruct_no_punct": "Generate a limerick poem about a lemur",
    "instruct_one_typo_punctuation": "Generate a limerick poem about a lemur!",
    "instruct_oxford_comma": "Generate a limerick poem about a lemur.",
    "instruct_parenthetical_aside": "Generate a limerick poem (the funny kind) about a lemur.",
    "instruct_random_caps": "gEnErAtE a LiMeRiCk pOeM aBoUt A lEmUr.",
    "instruct_sms_abbrev": "Gen a limerick poem abt a lemur.",
    "instruct_three_typos_punctuation": "Generate a limerick poem about a lemur.!?;",
    "instruct_two_typos_punctuation": "Generate a limerick poem about a lemur!!",
    "instruct_typo_adjacent": "Generatr a lomerick poen about a lemar.",
    "instruct_typo_extra_letter": "Generatee a limerickk poem about a lemurr.",
    "instruct_typo_extra_space": "Generate a limerick poem about a lemur .",
    "instruct_typo_homophone": "Generate a limerick poem about a lemur.",
    "instruct_typo_missing_letter": "Generat a limrick poem about a lemur.",
    "instruct_typo_missing_space": "Generatealimerickpoemaboutalemur.",
    "instruct_typo_missing_vowels": "Gnrte a lmrck pm bt a lmr.",
    "instruct_typo_random": "Gemerate a limeirck poen about a lemuer.",
    "instruct_typo_repeated_letters": "Geneerate a limerickk poem about a lemurrr.",
    "instruct_typo_swap": "Gneratae a lmierick poen about a leumr.",
    "instruct_typo_swap_and_punctuation": "Gneratae a lmierick poen about a leumr!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Gnerate a lmeriick peom about a leumr.!",
    "instruct_typo_transpose": "Gneerate a lmericik peom about a leumr.",
    "instruct_typo_wrong_letter": "Generatw a limerick poen about a lemus.",
    "output": "There once was a lemur so spry,\nWho loved to jump up in the sky.\nHe'd swing across trees,\nWith graceful ease,\nAnd leave other creatures asking why.",
    "prompt_id": "0c23dad1-3f91-486a-9edd-cb208822fec8"
  },
  {
    "prompt_count": 451,
    "instruction_original": "Describe the functions of the Endoplasmic Reticulum.",
    "input": "",
    "instruct_all_caps": "DESCRIBE THE FUNCTIONS OF THE ENDOPLASMIC RETICULUM.",
    "instruct_em_dash_break": "Describe the functions—of the Endoplasmic Reticulum.",
    "instruct_extra_punct": "Describe... the functions,,, of the Endoplasmic Reticulum???",
    "instruct_hashtags": "Describe the functions of the Endoplasmic Reticulum. #biology #cellbiology #endoplasmicreticulum",
    "instruct_inline_ad": "Describe the functions of the Endoplasmic Reticulum. Shop now at BestBiologyDeals.com!",
    "instruct_inline_url": "Describe the functions of the Endoplasmic Reticulum. More info at example.com/er_functions.",
    "instruct_interrobang": "Describe the functions of the Endoplasmic Reticulum?!",
    "instruct_key_smash": "Describe the functions of the Endoplasmic Reticulum. lkjhgfdsapoiuytrewqzxcvbnm",
    "instruct_leet_speak": "D35cr1b3 th3 funct10n5 0f th3 3nd0pl45m1c R3t1culum.",
    "instruct_misplaced_commas": "Describe the functions, of the, Endoplasmic Reticulum.",
    "instruct_missing_bracket": "Describe the functions [of the Endoplasmic Reticulum.",
    "instruct_missing_bracket_and_quote": "Describe the functions \"[of the Endoplasmic Reticulum.",
    "instruct_missing_quote": "Describe the functions \"of the Endoplasmic Reticulum.",
    "instruct_no_caps": "describe the functions of the endoplasmic reticulum.",
    "instruct_no_punct": "Describe the functions of the Endoplasmic Reticulum",
    "instruct_one_typo_punctuation": "Describe the functions of the Endoplasmic Reticulum?",
    "instruct_oxford_comma": "Describe the functions, of the Endoplasmic Reticulum.",
    "instruct_parenthetical_aside": "Describe the functions (you know, what it does) of the Endoplasmic Reticulum.",
    "instruct_random_caps": "dEscRibE tHe FUncTiOnS oF tHe EnDoPlaSmIc rEtIcUluM.",
    "instruct_sms_abbrev": "Desc the fnctns of the ER.",
    "instruct_three_typos_punctuation": "Describe the functions of the Endoplasmic Reticulum!?.?",
    "instruct_two_typos_punctuation": "Describe the functions of the Endoplasmic Reticulum!?",
    "instruct_typo_adjacent": "Describe the functjons of the Endoplasmic Reticulum.",
    "instruct_typo_extra_letter": "Describe the functionss of the Endoplasmic Reticulum.",
    "instruct_typo_extra_space": "Describe the functions of the Endoplasmic  Reticulum.",
    "instruct_typo_homophone": "Describe the functions ov the Endoplasmic Reticulum.",
    "instruct_typo_missing_letter": "Describe the fucntions of the Endoplasmic Reticulum.",
    "instruct_typo_missing_space": "Describethe functions of the Endoplasmic Reticulum.",
    "instruct_typo_missing_vowels": "Dscrb th fnctns f th ndplsmc Rtclym.",
    "instruct_typo_random": "Describe the functions of the Endoplatic Reticulum.",
    "instruct_typo_repeated_letters": "Describe the funnctions of the Endoplasmic Reticulum.",
    "instruct_typo_swap": "Describe the funstions of the Endoplasmic Reticulum.",
    "instruct_typo_swap_and_punctuation": "Describe the funstions of the Endoplasmic Reticulum?!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Describe the functoins of the Endoplasmic Reticulmu?!.",
    "instruct_typo_transpose": "Describe the functoins of the Endoplasmic Reticulum.",
    "instruct_typo_wrong_letter": "Describe the functions of the Endoplasmic Reticulup.",
    "output": "The Endoplasmic Reticulum (ER) is a network of membranes with functions in both protein synthesis and lipid metabolism. It is involved in the folding and modification of proteins and plays a role in the assembly of membrane proteins. It is also responsible for lipid metabolism, including the formation of lipids and their transport throughout the cell. It also serves as a storage organelle for calcium ions.",
    "prompt_id": "3515e293-6555-4bd5-aa06-1acf05d7100b"
  },
  {
    "prompt_count": 452,
    "instruction_original": "Summarize the industrial revolution.",
    "input": "",
    "instruct_all_caps": "SUMMARIZE THE INDUSTRIAL REVOLUTION.",
    "instruct_em_dash_break": "Summarize—the industrial revolution.",
    "instruct_extra_punct": "Summarize the industrial revolution...!!!!??!?",
    "instruct_hashtags": "Summarize the industrial revolution #History #Summary #IndustrialRevolution",
    "instruct_inline_ad": "Summarize the industrial revolution (Get your summary today!).",
    "instruct_inline_url": "Summarize the industrial revolution (https://example.com/history).",
    "instruct_interrobang": "Summarize the industrial revolution\n\b\n\b!",
    "instruct_key_smash": "qwert Summarize the industrial revolution yuiop.",
    "instruct_leet_speak": "SummaЯize th3 1ndustriаl Яevоlutioи.",
    "instruct_misplaced_commas": "Summarize, the, industrial revolution.",
    "instruct_missing_bracket": "Summarize the industrial revolution [",
    "instruct_missing_bracket_and_quote": "Summarize the industrial revolution [ \"",
    "instruct_missing_quote": "Summarize the industrial revolution \"",
    "instruct_no_caps": "summarize the industrial revolution.",
    "instruct_no_punct": "Summarize the industrial revolution",
    "instruct_one_typo_punctuation": "Summarize the industrial revolution?",
    "instruct_oxford_comma": "Summarize the industrial revolution,",
    "instruct_parenthetical_aside": "Summarize the industrial revolution (like, the whole thing?).",
    "instruct_random_caps": "sUMMaRIZe tHe iNDuSTriAl rEvoLuTiOñ.",
    "instruct_sms_abbrev": "Sumarize the indstl rev.",
    "instruct_three_typos_punctuation": "Summarize the industrial revolution...",
    "instruct_two_typos_punctuation": "Summarize the industrial revolution.?",
    "instruct_typo_adjacent": "Summarsze the indiatrial revolutuon.",
    "instruct_typo_extra_letter": "Summariize the industrial revolution.",
    "instruct_typo_extra_space": "Summarize the industrial  revolution.",
    "instruct_typo_homophone": "Summeryze the industrial revolution.",
    "instruct_typo_missing_letter": "Sumarize the industrial revolution.",
    "instruct_typo_missing_space": "Summarizethe industrial revolution.",
    "instruct_typo_missing_vowels": "Smmerz th ndstrl rvltn.",
    "instruct_typo_random": "Sumarise the induustrial revolutin.",
    "instruct_typo_repeated_letters": "Summmaarize the industtrial revolutioon.",
    "instruct_typo_swap": "Smumraize teh idnsutrail revloituon.",
    "instruct_typo_swap_and_punctuation": "Smumraize teh idnsutrail revloituon.?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Smumarize the indsutrail revloitoun.?",
    "instruct_typo_transpose": "Smumarize the indsutrial revolution.",
    "instruct_typo_wrong_letter": "Summasize the industrial revolotion.",
    "output": "The industrial revolution was a period of major changes in manufacturing, agriculture, mining, transportation, and technology that began in the late 1700s in Britain and spread to Europe and North America. During this period, new manufacturing techniques, improved efficiency of steam power, and the invention of new machines, such as the power loom, made it possible to produce goods on a much larger scale than before. This transformation led to an increase in both population and economic growth, creating a new capitalist economy based on the production and sale of goods.",
    "prompt_id": "02e85e3a-09fb-4e42-ba72-ab246f9009ac"
  },
  {
    "prompt_count": 453,
    "instruction_original": "Rewrite the sentence, replacing the idioms with their literal meanings.",
    "input": "We need to break the ice with the new team members.",
    "instruct_all_caps": "REWRITE THE SENTENCE, REPLACING THE IDIOMS WITH THEIR LITERAL MEANINGS.",
    "instruct_em_dash_break": "Rewrite the sentence—replacing the idioms—with their literal meanings.",
    "instruct_extra_punct": "Rewrite the sentence,,, replacing the idioms, with their literal meanings?!.",
    "instruct_hashtags": "Rewrite the sentence, replacing the idioms with their literal meanings. #rewrite #idioms #literalmeaning #texttransformation",
    "instruct_inline_ad": "Rewrite the sentence, replacing the idioms with their literal meanings. [Ad: Buy our AI writing tool!]",
    "instruct_inline_url": "Rewrite the sentence, replacing the idioms with their literal meanings. More info: https://example.com/idioms",
    "instruct_interrobang": "Rewrite the sentence, replacing the idioms with their literal meanings!?",
    "instruct_key_smash": "Rewrite the sentence, replacing the idioms with their literal meanings. asdfjkl;",
    "instruct_leet_speak": "R3wr173 7h3 53n73nc3, r3pl4c1n6 7h3 1d10m5 w17h 7h31r l173r4l m34n1n65.",
    "instruct_misplaced_commas": "Rewrite the sentence replacing, the idioms, with their literal meanings.",
    "instruct_missing_bracket": "Rewrite the sentence, replacing the idioms [with their literal meanings.",
    "instruct_missing_bracket_and_quote": "Rewrite the sentence, replacing the idioms with their literal meanings.",
    "instruct_missing_quote": "Rewrite the sentence, replacing the idioms with their literal meanings.",
    "instruct_no_caps": "rewrite the sentence, replacing the idioms with their literal meanings.",
    "instruct_no_punct": "Rewrite the sentence replacing the idioms with their literal meanings",
    "instruct_one_typo_punctuation": "Rewrite the sentence, replacing the idioms with their literal meanings?",
    "instruct_oxford_comma": "Rewrite the sentence, replacing the idioms, with their literal meanings.",
    "instruct_parenthetical_aside": "Rewrite the sentence (change the phrasing!), replacing the idioms with their literal meanings.",
    "instruct_random_caps": "rEwRiTe ThE sEnTeNcE, rEpLaCiNg ThE iDiOmS wItH tHeIr LiTeRaL mEaNiNgS.",
    "instruct_sms_abbrev": "Rwt the sntnc, replacg the idms w tHr ltrl mnngs.",
    "instruct_three_typos_punctuation": "Rewrite the sentence! replacing the idioms with their literal meanings???",
    "instruct_two_typos_punctuation": "Rewrite the sentence: replacing the idioms with their literal meanings..",
    "instruct_typo_adjacent": "Rwwrite the sentence, replacing the idioms with thejr literal meanings.",
    "instruct_typo_extra_letter": "Rewriite the sentence, replacing the idioms with their literal meanings.",
    "instruct_typo_extra_space": "Rewrite the sentence , replacing the idioms with their literal meanings.",
    "instruct_typo_homophone": "Right the sentence, replacing the idioms with there literal meanings.",
    "instruct_typo_missing_letter": "Rewrit the sentence, replaing the idioms with their literal meanings.",
    "instruct_typo_missing_space": "Rewritethesentence, replacing the idioms with their literal meanings.",
    "instruct_typo_missing_vowels": "Rwrt th sntnc, rplcng th idms w thir ltrl mnngs.",
    "instruct_typo_random": "Rewrtte the sentence, replacing the idiomas with their literal meanings.",
    "instruct_typo_repeated_letters": "Rewrritte the sentence, replacing the idiooms with their literal meeanings.",
    "instruct_typo_swap": "Rwerite the snetence, replacing the idioms with their literal meanings.",
    "instruct_typo_swap_and_punctuation": "Rwerite the snetence; replacing the idioms with their literal meanings.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Rerwite the snetence! replacing the idioms with their literal meanings?",
    "instruct_typo_transpose": "Rerwite the sentence, replacing the idioms with their literal meanings.",
    "instruct_typo_wrong_letter": "Rewrite the sentence, replacing the idikms with their literal meanings.",
    "output": "We need to create a comfortable atmosphere with the new team members.",
    "prompt_id": "4bf0336f-3b62-4512-baef-75e6d15ae5b8"
  },
  {
    "prompt_count": 454,
    "instruction_original": "Select the correct term for the phrase ‘the art of making things’",
    "input": "",
    "instruct_all_caps": "SELECT THE CORRECT TERM FOR THE PHRASE ‘THE ART OF MAKING THINGS’",
    "instruct_em_dash_break": "Select the correct term—for the phrase—‘the art of making things’",
    "instruct_extra_punct": "Select the correct term for the phrase ‘the art of making things’!!!",
    "instruct_hashtags": "Select the correct term for the phrase ‘the art of making things’ #art #making #terms",
    "instruct_inline_ad": "Select the correct term (Sponsored: Try our new creative tools!) for the phrase ‘the art of making things’",
    "instruct_inline_url": "Select the correct term (find help here: https://example.com/terms) for the phrase ‘the art of making things’",
    "instruct_interrobang": "Select the correct term for the phrase ‘the art of making things’‽",
    "instruct_key_smash": "Select the correct term for the phrase ‘the art of making things’ asdfjkl;",
    "instruct_leet_speak": "53l3c7 7h3 c0rr3c7 73rm f0r 7h3 phr453 ‘7h3 4r7 0f m4k1n9 7h1n95’",
    "instruct_misplaced_commas": "Select, the correct term, for the phrase, ‘the art of making things’",
    "instruct_missing_bracket": "Select the correct term for the phrase ‘the art of making things",
    "instruct_missing_bracket_and_quote": "Select the correct term for the phrase \"the art of making things’",
    "instruct_missing_quote": "Select the correct term for the phrase the art of making things’",
    "instruct_no_caps": "select the correct term for the phrase ‘the art of making things’",
    "instruct_no_punct": "Select the correct term for the phrase the art of making things",
    "instruct_one_typo_punctuation": "Select the correct term for the phrase ‘the art of making things’,",
    "instruct_oxford_comma": "Select the correct term for the phrase ‘the art of making things’, considering invention, construction, and design.",
    "instruct_parenthetical_aside": "Select the correct term (you know the one) for the phrase ‘the art of making things’",
    "instruct_random_caps": "SeLeCt tHe CoRrEcT TeRm fOr tHe PhRaSe ‘tHe ArT Of mAkInG ThInGs’",
    "instruct_sms_abbrev": "slct the corrct trm 4 the phrs ‘the art of makin things’",
    "instruct_three_typos_punctuation": "Select the correct term! for the phrase ‘the art of making things’;’",
    "instruct_two_typos_punctuation": "Select the correct term; for the phrase ‘the art of making things’?",
    "instruct_typo_adjacent": "Sekect the corsect term for the phrwse ‘the art of making things’",
    "instruct_typo_extra_letter": "Selecct the correcct termm forr the phrasse ‘the artt of makiing thingss’",
    "instruct_typo_extra_space": "Sele ct the corre ct term for the phras e ‘the art of making things’",
    "instruct_typo_homophone": "Select the correct term four the phrase ‘the art of making things’",
    "instruct_typo_missing_letter": "Select the corect tem for the phrae ‘the art of makin thins’",
    "instruct_typo_missing_space": "Selectthecorrecttermforthephrase‘theartofmakingthings’",
    "instruct_typo_missing_vowels": "Slct the crrct trm fr the phrs ‘th rt f mkng thngs’",
    "instruct_typo_random": "Selecr teh correcc termn fir the phraswe ‘hte art of makking thin gs’",
    "instruct_typo_repeated_letters": "Seleect the correct term for the phrasee ‘the artt of makingg thingss’",
    "instruct_typo_swap": "Slceet the crocert trem fro the prhase ‘hte atr fo mainkg tinshg’",
    "instruct_typo_swap_and_punctuation": "Sleet the corrcet trem, for the prhas ‘hte atr fo mainkg tihngs’?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Sleetc the corrcet trem? fro the prhase ‘hte atr of maknig tihngs’.",
    "instruct_typo_transpose": "Sleetc the corrcet term for the prhase ‘hte atr of maknig tihngs’",
    "instruct_typo_wrong_letter": "Select the correct term for the phrasy ‘the art of making things’",
    "output": "The correct term for the phrase \"the art of making things\" is craftsmanship.",
    "prompt_id": "a2985d95-44ea-455d-ad3a-92e321076ac3"
  },
  {
    "prompt_count": 455,
    "instruction_original": "Identify any usage errors in the following sentence.",
    "input": "We all need to take a walk on the wile side.",
    "instruct_all_caps": "IDENTIFY ANY USAGE ERRORS IN THE FOLLOWING SENTENCE.",
    "instruct_em_dash_break": "Identify any usage errors—specifically the major ones—in the following sentence.",
    "instruct_extra_punct": "Identify any usage errors in the following sentence...??!",
    "instruct_hashtags": "Identify any usage errors in the following sentence. #grammar #editing #errors",
    "instruct_inline_ad": "Identify any usage errors in the following sentence. Shop now!",
    "instruct_inline_url": "Identify any usage errors in the following sentence. Visit http://example.com",
    "instruct_interrobang": "Identify any usage errors in the following sentence!?",
    "instruct_key_smash": "Identify any usage errors in the following sentence. dfghjkl;",
    "instruct_leet_speak": "1d3n71fy 4ny u54g3 3rr0r5 1n 7h3 f0ll0w1n6 53n73nc3.",
    "instruct_misplaced_commas": "Identify, any usage errors, in the following sentence.",
    "instruct_missing_bracket": "Identify [any usage errors in the following sentence.",
    "instruct_missing_bracket_and_quote": "Identify [any usage errors in the following sentence.",
    "instruct_missing_quote": "'Identify any usage errors in the following sentence.",
    "instruct_no_caps": "identify any usage errors in the following sentence.",
    "instruct_no_punct": "Identify any usage errors in the following sentence",
    "instruct_one_typo_punctuation": "Identify any usage errors in the following sentence;",
    "instruct_oxford_comma": "Identify any usage errors, in the following sentence.",
    "instruct_parenthetical_aside": "Identify any usage errors (if you find them) in the following sentence.",
    "instruct_random_caps": "IdeNTiFy aNY uSAge ErRoRs IN THe foLLoWinG sEnTenCe.",
    "instruct_sms_abbrev": "Id any usage errors in the folowing sntnc.",
    "instruct_three_typos_punctuation": "Identify any usage errors in the following sentence?!.",
    "instruct_two_typos_punctuation": "Identify any usage errors in the following sentence!.",
    "instruct_typo_adjacent": "Identify any uszge errors in the followimg sentence.",
    "instruct_typo_extra_letter": "Identify any usagee errors in the followwing sentence.",
    "instruct_typo_extra_space": "Identify any usage errors in the  following sentence.",
    "instruct_typo_homophone": "Identify any usage heirrors in the following sentence.",
    "instruct_typo_missing_letter": "Identify any usage erros in the followig sentence.",
    "instruct_typo_missing_space": "Identifyany usage errors in the following sentence.",
    "instruct_typo_missing_vowels": "Idntfy ny sg errs n th fllwng sntnc.",
    "instruct_typo_random": "Idenetify any usgae erorss in the follwoing senntence.",
    "instruct_typo_repeated_letters": "Identify any usage errorrs in the followwing sentence.",
    "instruct_typo_swap": "Idenitfy any usage erors in the following sentence.",
    "instruct_typo_swap_and_punctuation": "Idenitfy any usage erors in the following sentence!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Idenitfy any usage erorrs in the folowing sentence;.",
    "instruct_typo_transpose": "Identify any usage erorrs in the folowing sentence.",
    "instruct_typo_wrong_letter": "Identify any usage errors in the folluwing sentence.",
    "output": "The usage error in the sentence is that the phrase should be \"walk on the wild side,\" not \"wile side.\"",
    "prompt_id": "ea285074-57ab-4b00-9dde-b7c38d3ba77a"
  },
  {
    "prompt_count": 456,
    "instruction_original": "Explain the concept of net neutrality.",
    "input": "",
    "instruct_all_caps": "EXPLAIN THE CONCEPT OF NET NEUTRALITY.",
    "instruct_em_dash_break": "Explain—the concept—of net neutrality.",
    "instruct_extra_punct": "Explain the concept of net neutrality!!!??",
    "instruct_hashtags": "Explain the concept of net neutrality #netneutrality #internet",
    "instruct_inline_ad": "Explain the concept of net neutrality (this message brought to you by Big Telecom).",
    "instruct_inline_url": "Explain the concept of net neutrality (learn more at freeweb.org).",
    "instruct_interrobang": "Explain the concept of net neutrality!?",
    "instruct_key_smash": "Explain the concept of net neutrality fdsklajfoiuewr.",
    "instruct_leet_speak": "3xp141n 7h3 c0nc3p7 0f n37 n3u7r4l17y.",
    "instruct_misplaced_commas": "Explain, the, concept of net, neutrality.",
    "instruct_missing_bracket": "[Explain the concept of net neutrality.",
    "instruct_missing_bracket_and_quote": "\"Explain the concept of net neutrality.",
    "instruct_missing_quote": "\"Explain the concept of net neutrality.",
    "instruct_no_caps": "explain the concept of net neutrality.",
    "instruct_no_punct": "Explain the concept of net neutrality",
    "instruct_one_typo_punctuation": "Explain the concept of net neutrality,",
    "instruct_oxford_comma": "Explain the concept, of net, neutrality.",
    "instruct_parenthetical_aside": "Explain the concept of net neutrality (please be concise).",
    "instruct_random_caps": "eXpLAin tHe cOnCEpT oF NeT neUtRaLity.",
    "instruct_sms_abbrev": "Xpln the cncept of net neutralty asap.",
    "instruct_three_typos_punctuation": "Explain the concept of net neutrality?!.",
    "instruct_two_typos_punctuation": "Explain the concept of net neutrality!?",
    "instruct_typo_adjacent": "Explain the concept of net neitrality.",
    "instruct_typo_extra_letter": "Explain the conceppt of net neutrality.",
    "instruct_typo_extra_space": "Explain the concept of net neutrality  .",
    "instruct_typo_homophone": "Explain the concept of net newtrality.",
    "instruct_typo_missing_letter": "Exlain the concept of net neutrality.",
    "instruct_typo_missing_space": "Explaintheconceptofnetneutrality.",
    "instruct_typo_missing_vowels": "Expln th cncpt of nt ntrlty.",
    "instruct_typo_random": "Exlpaian th concsept of nwt neutrallity.",
    "instruct_typo_repeated_letters": "Explain the conceept of net neeeutrality.",
    "instruct_typo_swap": "Exlpain the concpet of net neutrality.",
    "instruct_typo_swap_and_punctuation": "Exlpain the concpet of net neutrality!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Exlpain the cocnept of net neutrality?",
    "instruct_typo_transpose": "Explain the cocnept of net neutrality.",
    "instruct_typo_wrong_letter": "Explain the concept of net neutrqlity.",
    "output": "Net neutrality is the idea that Internet Service Providers (ISPs) and governments should treat all data on the Internet equally. This means that ISPs cannot charge different prices for providing access to specific websites or services, and they cannot discriminate against or give preferential treatment to certain kinds of data. This ensures that everyone is able to access the same resources and content regardless of their income level or geographical location.",
    "prompt_id": "ed7db49b-402a-4119-81bb-d8a059398e89"
  },
  {
    "prompt_count": 457,
    "instruction_original": "Brainstorm creative ideas for designing a conference room.",
    "input": "",
    "instruct_all_caps": "BRAINSTORM CREATIVE IDEAS FOR DESIGNING A CONFERENCE ROOM.",
    "instruct_em_dash_break": "Brainstorm creative ideas—for designing a conference room.",
    "instruct_extra_punct": "Brainstorm creative ideas for designing a conference room!!!!",
    "instruct_hashtags": "Brainstorm creative ideas for designing a conference room. #conferenceroom #design #creativeideas",
    "instruct_inline_ad": "Brainstorm creative ideas for designing a conference room. Buy now!",
    "instruct_inline_url": "Brainstorm creative ideas for designing a conference room. Find inspiration at example.com",
    "instruct_interrobang": "Brainstorm creative ideas for designing a conference room!?",
    "instruct_key_smash": "Brainstorm creative ideas for designing a conference room. lkjhgfdsapoiuytrewq",
    "instruct_leet_speak": "Br41n570rm cr3471v3 1d345 f0r d351gn1ng 4 c0nf3r3nc3 r00m.",
    "instruct_misplaced_commas": "Brainstorm, creative, ideas, for, designing, a, conference, room.",
    "instruct_missing_bracket": "Brainstorm creative ideas [for designing a conference room.",
    "instruct_missing_bracket_and_quote": "\"[Brainstorm creative ideas for designing a conference room.",
    "instruct_missing_quote": "\"Brainstorm creative ideas for designing a conference room.",
    "instruct_no_caps": "brainstorm creative ideas for designing a conference room.",
    "instruct_no_punct": "Brainstorm creative ideas for designing a conference room",
    "instruct_one_typo_punctuation": "Brainstorm creative ideas for designing a conference room.",
    "instruct_oxford_comma": "Brainstorm creative ideas, layouts, and furniture for designing a conference room.",
    "instruct_parenthetical_aside": "Brainstorm creative ideas (think outside the box) for designing a conference room.",
    "instruct_random_caps": "BrAInStOrM cReAtIvE iDeAs fOr DeSiGnInG a CoNfErEnCe RoOm.",
    "instruct_sms_abbrev": "Brmst crtv ids fr dsgn a conf rm.",
    "instruct_three_typos_punctuation": "Brainstorm creative ideas for designing a conference room...",
    "instruct_two_typos_punctuation": "Brainstorm creative ideas for designing a conference room?!",
    "instruct_typo_adjacent": "Brainstory creative ideas for designing a conference roon.",
    "instruct_typo_extra_letter": "Brainstorm creativee ideas for designing a conference roomm.",
    "instruct_typo_extra_space": "Brainstorm creative ideas for designing a conference room.",
    "instruct_typo_homophone": "Brainstorm kreative ideas for designing a conference room.",
    "instruct_typo_missing_letter": "Brainstorm creatie ideas for designig a conference room.",
    "instruct_typo_missing_space": "Brainstormcreativeideasfordesigningaconferenceroom.",
    "instruct_typo_missing_vowels": "Brnstm crtv ids fr dsgnng a cnfrnc rm.",
    "instruct_typo_random": "Brainstrorm cerative idees fr desigining a conferenc room.",
    "instruct_typo_repeated_letters": "Brainstorm creative ideas for designing a conference roommm.",
    "instruct_typo_swap": "Barnstorm cerative ideas for designign a conference room.",
    "instruct_typo_swap_and_punctuation": "Barnstorm cerative ideas for designign a conference room,",
    "instruct_typo_swap_and_transpose_and_punctuation": "Barinstrom creaitve ideas for deisgning a conference room?!",
    "instruct_typo_transpose": "Barinstrom creaitve ideas for deisgning a conference room.",
    "instruct_typo_wrong_letter": "Brainstorm creatice ideas for designing a conference room.",
    "output": "Creative ideas for designing a conference room include incorporating flexible components, such as moveable walls and furniture, to make areas adjustable for different purposes. Using colors to create visual interest and subtly differentiate areas can also be helpful. Incorporating natural elements such as plants or art installations can create a more inviting and inspiring space, while providing adequate ventilation and natural light can help concentration and improve the conference room experience.",
    "prompt_id": "f667419f-9285-40ce-ba28-dbfaa6c56811"
  },
  {
    "prompt_count": 458,
    "instruction_original": "Calculate the area of a square with the sides of 10cm.",
    "input": "",
    "instruct_all_caps": "CALCULATE THE AREA OF A SQUARE WITH THE SIDES OF 10CM.",
    "instruct_em_dash_break": "Calculate the area of a square—with the sides of 10cm.",
    "instruct_extra_punct": "Calculate... the area-- of a square?? with the sides,, of 10cm!!!.",
    "instruct_hashtags": "Calculate the area of a square with the sides of 10cm. #math #geometry #square #area",
    "instruct_inline_ad": "Calculate the area of a square with the sides of 10cm - buy our product!",
    "instruct_inline_url": "Calculate the area of a square with the sides of 10cm. Visit example.com for help.",
    "instruct_interrobang": "Calculate the area of a square with the sides of 10cm?!",
    "instruct_key_smash": "Calculate the area of a square with the sides of 10cm asdfghjkl;",
    "instruct_leet_speak": "C4lcUl473 7h3 4r34 0f 4 5Qu4r3 w17h 7h3 51d35 0f 10cm.",
    "instruct_misplaced_commas": "Calculate, the area, of a square, with the sides, of 10cm.",
    "instruct_missing_bracket": "Calculate the area of a square with the sides of 10cm).",
    "instruct_missing_bracket_and_quote": "\"Calculate the area of a square with the sides of 10cm).",
    "instruct_missing_quote": "\"Calculate the area of a square with the sides of 10cm.",
    "instruct_no_caps": "calculate the area of a square with the sides of 10cm.",
    "instruct_no_punct": "Calculate the area of a square with the sides of 10cm",
    "instruct_one_typo_punctuation": "Calculate the area of a square with the sides of 10cm?",
    "instruct_oxford_comma": "For a square with sides of 10cm, calculate the area, the perimeter, and the diagonal length.",
    "instruct_parenthetical_aside": "Calculate the area of a square (you know, like the shape) with the sides of 10cm.",
    "instruct_random_caps": "CalCULate tHe aREa OF a SQUare wITh the sIDES oF 10CM.",
    "instruct_sms_abbrev": "Calc the area of a sq with 10cm sides.",
    "instruct_three_typos_punctuation": "Calculate the area of a square with the sides of 10cm?!?.",
    "instruct_two_typos_punctuation": "Calculate the area of a square with the sides of 10cm;?",
    "instruct_typo_adjacent": "Calgulate the arez of a sqyafe woth the sodes of 10cn.",
    "instruct_typo_extra_letter": "Calcculate the areaa of a squarre withh the sidess of 10cm.",
    "instruct_typo_extra_space": "Calculate the area of a squa re with the sid es of 10cm.",
    "instruct_typo_homophone": "Calculate the air of a square with the sides of 10cm.",
    "instruct_typo_missing_letter": "Calulate the area of a sqare wih the sies of 10cm.",
    "instruct_typo_missing_space": "Calculatethe area of a square with the sidesof 10cm.",
    "instruct_typo_missing_vowels": "Clclt th ar of a sqr wth th sds of 10cm.",
    "instruct_typo_random": "Calculate the aera of a ssure wiht the sdes of 10cm.",
    "instruct_typo_repeated_letters": "Calccuulate the areaa of a sqquarre with the sides of 10cm.",
    "instruct_typo_swap": "Caclulate the area of a sqaure wtih the sdies of 10cm.",
    "instruct_typo_swap_and_punctuation": "Caclulate the area of a sqaure wtih the sdies of 10cm.?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Caclualte the aera of a sqaure wtih the sdeis of 10cm!?",
    "instruct_typo_transpose": "Caluclate the aera of a sqaure woth the sdeis of 10cm.",
    "instruct_typo_wrong_letter": "Calrulate the arie of a spuare with the sides of 10cm.",
    "output": "The area of a square with sides of 10 cm is 100 square cm.",
    "prompt_id": "27673e6d-c42f-41d3-8f62-2c3bdeec1d54"
  },
  {
    "prompt_count": 459,
    "instruction_original": "List the countries that are in the Schengen area.",
    "input": "",
    "instruct_all_caps": "LIST THE COUNTRIES THAT ARE IN THE SCHENGEN AREA.",
    "instruct_em_dash_break": "List the countries—the ones you know—that are in the Schengen area.",
    "instruct_extra_punct": "List the countries!!!!!! that are in the Schengen area.",
    "instruct_hashtags": "List the countries that are in the Schengen area #Schengen #Countries #Travel",
    "instruct_inline_ad": "List the countries (Sponsored by TravelCo!) that are in the Schengen area.",
    "instruct_inline_url": "List the countries (find more at schengen-info.com) that are in the Schengen area.",
    "instruct_interrobang": "List the countries that are in the Schengen area?!",
    "instruct_key_smash": "List the countries asdfjkl; that are in the Schengen area qweruiop.",
    "instruct_leet_speak": "L157 7h3 C0un7r135 7h@ @r3 1n 7h3 5ch3ng3n @r3@.",
    "instruct_misplaced_commas": "List, the countries that are in the Schengen, area.",
    "instruct_missing_bracket": "List the countries (that are in the Schengen area.",
    "instruct_missing_bracket_and_quote": "List the countries (\"that are in the Schengen area.",
    "instruct_missing_quote": "List the countries that are in the Schengen area.",
    "instruct_no_caps": "list the countries that are in the schengen area.",
    "instruct_no_punct": "List the countries that are in the Schengen area",
    "instruct_one_typo_punctuation": "List the countries that are in the Schengen area?",
    "instruct_oxford_comma": "List the countries, that are in the Schengen area.",
    "instruct_parenthetical_aside": "List the countries (make sure it's the current list) that are in the Schengen area.",
    "instruct_random_caps": "liSt tHe CoUntRiEs tHAt aRe iN tHe ScHeNgEn aReA.",
    "instruct_sms_abbrev": "Lst d cntrs tht r in d Schngn area.",
    "instruct_three_typos_punctuation": "List the countries;;; that are in the Schengen area!?",
    "instruct_two_typos_punctuation": "List the countries,, that are in the Schengen area.",
    "instruct_typo_adjacent": "List the countrjes that are in the Schengen area.",
    "instruct_typo_extra_letter": "List the countriess that are in the Schengen area.",
    "instruct_typo_extra_space": "List the countries that are in the  Schengen area.",
    "instruct_typo_homophone": "List the countries that are inn the Schengen area.",
    "instruct_typo_missing_letter": "List the countres that are in the Schengen area.",
    "instruct_typo_missing_space": "List the countries thatare in the Schengen area.",
    "instruct_typo_missing_vowels": "Lst th cntrs tht r n th Schngn r.",
    "instruct_typo_random": "List the countrues that are in the Schengen area.",
    "instruct_typo_repeated_letters": "List the countries that are in the Schenggeenn area.",
    "instruct_typo_swap": "List the countrsei that are in the Schengen area.",
    "instruct_typo_swap_and_punctuation": "List the countrsei that are in the Schengen area!",
    "instruct_typo_swap_and_transpose_and_punctuation": "List teh cuntreis that are in the Schengen area.",
    "instruct_typo_transpose": "List the countreis that are in the Schengen area.",
    "instruct_typo_wrong_letter": "List the countrixs that are in the Schengen area.",
    "output": "The countries in the Schengen area are Austria, Belgium, Czech Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary, Iceland, Italy, Latvia, Liechtenstein, Lithuania, Luxembourg, Malta, Netherlands, Norway, Poland, Portugal, Slovakia, Slovenia, Spain, Sweden, and Switzerland.",
    "prompt_id": "4875a045-866e-4d20-adc1-724d766d42da"
  },
  {
    "prompt_count": 460,
    "instruction_original": "Describe the form and structure of a haiku poem.",
    "input": "",
    "instruct_all_caps": "DESCRIBE THE FORM AND STRUCTURE OF A HAIKU POEM.",
    "instruct_em_dash_break": "Describe the form—and structure—of a haiku poem.",
    "instruct_extra_punct": "Describe the form and structure of a haiku poem!!!",
    "instruct_hashtags": "Describe the form and structure of a haiku poem. #haiku #poetry #form #structure",
    "instruct_inline_ad": "Describe the form and structure of a haiku poem. Shop now!",
    "instruct_inline_url": "Describe the form and structure of a haiku poem. Visit example.com",
    "instruct_interrobang": "Describe the form and structure of a haiku poem!?",
    "instruct_key_smash": "Describe the form and structure of a haiku poem. asdfjkl;",
    "instruct_leet_speak": "D35cr1b3 th3 f0rm 4nd 57ruc7ur3 0f 4 h41ku p03m.",
    "instruct_misplaced_commas": "Describe, the form, and structure, of a, haiku poem.",
    "instruct_missing_bracket": "Describe the form and structure [of a haiku poem.",
    "instruct_missing_bracket_and_quote": "Describe the form and structure of a haiku poem.",
    "instruct_missing_quote": "Describe the form and structure \"of a haiku poem.",
    "instruct_no_caps": "describe the form and structure of a haiku poem.",
    "instruct_no_punct": "Describe the form and structure of a haiku poem",
    "instruct_one_typo_punctuation": "Describe the form and structure of a haiku poem,",
    "instruct_oxford_comma": "Describe the form and structure of a haiku poem.",
    "instruct_parenthetical_aside": "Describe the form and structure (you know, how it's built) of a haiku poem.",
    "instruct_random_caps": "DeScRiBe ThE fOrM aNd StRuCtUrE oF a HaIkU pOeM.",
    "instruct_sms_abbrev": "Pls describe form & structure of haiku poem.",
    "instruct_three_typos_punctuation": "Describe the form and structure of a haiku poem;??",
    "instruct_two_typos_punctuation": "Describe the form and structure of a haiku poem.?",
    "instruct_typo_adjacent": "Descdibe the gorm snd stducture of a haiku poek.",
    "instruct_typo_extra_letter": "Descrribe the form and structure of a haiku poeam.",
    "instruct_typo_extra_space": "Describe the form and structu re of a haiku poem.",
    "instruct_typo_homophone": "Describe the form and structure of a high-ku poem.",
    "instruct_typo_missing_letter": "Descrbe the form and sructure of a haiku poem.",
    "instruct_typo_missing_space": "Describe the form and structureof a haiku poem.",
    "instruct_typo_missing_vowels": "Dscrbe th frm nd strctr f hku pm.",
    "instruct_typo_random": "Descbire the form and strutrue of a hauku poek.",
    "instruct_typo_repeated_letters": "Describbbe the foorm annd strructture of a haiku poeem.",
    "instruct_typo_swap": "Dericsbe the from and strutuce of a hkiua poen.",
    "instruct_typo_swap_and_punctuation": "Dericsbe the form and strutuce of a haiku poen.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Desrcibe teh from and strutcure of a haiku poen.",
    "instruct_typo_transpose": "Desrcibe teh from and strutcure of a haiku poen.",
    "instruct_typo_wrong_letter": "Describe the form and structufe of a haiku poem.",
    "output": "A haiku poem is a traditional form of Japanese poetry that typically consists of three lines. The first and last lines contain five syllables each, while the middle line contains seven syllables. The lines often evoke a single image, which contains a juxtaposition of two contrasting elements. The structure and language of haiku is often very simple and is intended to be an expression of a moment of epiphany.",
    "prompt_id": "ebcad1de-3859-45be-88c2-360aa904c461"
  },
  {
    "prompt_count": 461,
    "instruction_original": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees.",
    "input": "",
    "instruct_all_caps": "EXPLAIN HOW A RANDOM FOREST ALGORITHM ACHIEVES HIGHER ACCURACY THAN INDIVIDUAL DECISION TREES.",
    "instruct_em_dash_break": "Explain how a random forest algorithm achieves higher accuracy—than individual decision trees.",
    "instruct_extra_punct": "Explain!!! how??? a random forest algorithm achieves higher... accuracy than individual decision trees?!!",
    "instruct_hashtags": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees. #MachineLearning #RandomForest #DecisionTrees",
    "instruct_inline_ad": "Explain how a random forest algorithm (get great results with ML) achieves higher accuracy than individual decision trees.",
    "instruct_inline_url": "Explain how a random forest algorithm (visit example.com) achieves higher accuracy than individual decision trees.",
    "instruct_interrobang": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees‽",
    "instruct_key_smash": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees asdfghjkl;",
    "instruct_leet_speak": "3xp141n h0w 4 r4nd0m f0r357 4lg0r17hm 4ch13v35 h1gh3r 4ccur4cy 7h4n 1nd1v1du4l d3c1510n 7r335.",
    "instruct_misplaced_commas": "Explain, how a random, forest algorithm, achieves, higher accuracy, than individual, decision trees.",
    "instruct_missing_bracket": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees [",
    "instruct_missing_bracket_and_quote": "[Explain how a random forest algorithm achieves higher accuracy than individual decision trees.",
    "instruct_missing_quote": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees\".",
    "instruct_no_caps": "explain how a random forest algorithm achieves higher accuracy than individual decision trees.",
    "instruct_no_punct": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees",
    "instruct_one_typo_punctuation": "Explain how a random forest algorithm achieves higher accuracy than individual decision trees,",
    "instruct_oxford_comma": "Explain how a random forest algorithm, achieves higher accuracy than individual decision trees.",
    "instruct_parenthetical_aside": "Explain how a random forest algorithm (a powerful machine learning technique) achieves higher accuracy than individual decision trees.",
    "instruct_random_caps": "eXpLaIn HoW a RaNdOm FoReSt AlGoRiThM aChIeVeS hIgHeR aCcUrAcY tHaN iNdIvIdUaL dEcIsIoN tReEs.",
    "instruct_sms_abbrev": "Xplain hw a rndm forest algo achieves higher acc than indiv decision trees.",
    "instruct_three_typos_punctuation": "Explain how a random forest algorithm achieves higher accuracy. than individual decision trees!",
    "instruct_two_typos_punctuation": "Explain how a random forest algorithm achieves higher accuracy? than individual decision trees.",
    "instruct_typo_adjacent": "Explsin hlw a rsndom foredt slgorithm scvieves highee sccursch thsn indivudual desision trees.",
    "instruct_typo_extra_letter": "Expplain howw a randdom foorest algoorithm achievess highher acccuracy than individuall deciision treees.",
    "instruct_typo_extra_space": "Explain how a random forest algo rithm achieves higher accuracy than individual dec ision trees.",
    "instruct_typo_homophone": "Explain how a random forrest algorithm achieves hire accuracy than indivdual decision trees.",
    "instruct_typo_missing_letter": "Exlain hw a radom foret algoritm achieves hgher accracy than individul decion trees.",
    "instruct_typo_missing_space": "Explainhowarandomforestalgorithmachieveshigheraccuracythanindividualdecisiontrees.",
    "instruct_typo_missing_vowels": "Expln hw a rndm frst algrthm achvs hghr accrcy thn indvdul dcsn trs.",
    "instruct_typo_random": "Exaplain how a radnom forestt algortihm achiaves highher accuyrac than individual decsion trees.",
    "instruct_typo_repeated_letters": "Expplain howw a randoom forestt alggorithm achieeves highher acccuracy than inndividual decision trrees.",
    "instruct_typo_swap": "Explain how a radnom froest algroithm achieves higher acucracy than idnividual deicsion teres.",
    "instruct_typo_swap_and_punctuation": "Explain how a radnom froest algroithm achieves higher acucracy than idnividual deicsion teres?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Exlpain hwo a radnom fforets alogirthm? achvieve hsiger accuarcy than idnvidual decison trsee!",
    "instruct_typo_transpose": "Exlpain hwo a radnom fforest alogirthm achvieve hsiger accuarcy than idnvidual decison trsee.",
    "instruct_typo_wrong_letter": "Explain how a random forest algofithm achueves hijher accuracy than individual decision tzees.",
    "output": "A random forest is an ensemble-based method of achieving higher accuracy than individual decision trees. It works by aggregating the predictions of multiple decision trees using an ensemble approach. Each of these decision trees makes an independent prediction, and the individual predictions are combined either by averaging the probabilities or by taking the majority vote.  This approach reduces the variance of the predictions made by the decision trees, making the resulting predictions more accurate. Additionally, it also reduces the amount of overfitting incurred by the decision trees since it combines independent decisions made by each tree together, thus smoothing out any random fluctuations.",
    "prompt_id": "23072982-1a13-4b33-90a3-d0b96cf93a34"
  },
  {
    "prompt_count": 462,
    "instruction_original": "Give an example of a place where an endangered species of animal might be found.",
    "input": "",
    "instruct_all_caps": "GIVE AN EXAMPLE OF A PLACE WHERE AN ENDANGERED SPECIES OF ANIMAL MIGHT BE FOUND.",
    "instruct_em_dash_break": "Give an example—of a place where an endangered species of animal might be found.",
    "instruct_extra_punct": "Give... an example!? of a place... where an endangered species of animal might be found...",
    "instruct_hashtags": "Give an example of a place where an endangered species of animal might be found #endangeredspecies #wildlife",
    "instruct_inline_ad": "Give an example (check out this ad!) of a place where an endangered species of animal might be found.",
    "instruct_inline_url": "Give an example (more info at https://example.com) of a place where an endangered species of animal might be found.",
    "instruct_interrobang": "Give an example of a place where an endangered species of animal might be found‽",
    "instruct_key_smash": "Give an example of a place where an endangered species of animal might be found zxcvbnm,./",
    "instruct_leet_speak": "G1v3 4n 3x4mpl3 0f 4 pl4c3 wh3r3 4n 3nd4ng3r3d sp3c135 0f 4n1m4l m1gh7 b3 f0und.",
    "instruct_misplaced_commas": "Give, an example, of a place, where an endangered, species of, animal might be, found.",
    "instruct_missing_bracket": "Give an example [of a place where an endangered species of animal might be found.",
    "instruct_missing_bracket_and_quote": "[Give an example 'of a place where an endangered species of animal might be found.",
    "instruct_missing_quote": "'Give an example of a place where an endangered species of animal might be found.",
    "instruct_no_caps": "give an example of a place where an endangered species of animal might be found.",
    "instruct_no_punct": "Give an example of a place where an endangered species of animal might be found",
    "instruct_one_typo_punctuation": "Give an example of a place where an endangered species of animal might be found?",
    "instruct_oxford_comma": "Give an example of a place, where an endangered species of animal might be found.",
    "instruct_parenthetical_aside": "Give an example (just one!) of a place where an endangered species of animal might be found.",
    "instruct_random_caps": "gIvE aN eXaMpLe Of A pLaCe WhErE aN eNdAnGeReD sPeCiEs Of AnImAl MiGhT bE fOuNd.",
    "instruct_sms_abbrev": "giv n xmpl of a plc wr an endangrd spcs of anml mt b fnd.",
    "instruct_three_typos_punctuation": "Give an example; of a place, where an endangered species of animal might be found'..",
    "instruct_two_typos_punctuation": "Give an example. of a place, where an endangered species of animal might be found.",
    "instruct_typo_adjacent": "Give an wxample of a place where an endangered species of animal might be found.",
    "instruct_typo_extra_letter": "Give an exzample of a place where an endangered species of animal might be found.",
    "instruct_typo_extra_space": "Give an example of a place where an endangered species of animal might be found .",
    "instruct_typo_homophone": "Give an example of a place wear an endangered species of animal might be found.",
    "instruct_typo_missing_letter": "Give an examle of a place where an endangered species of animal might be found.",
    "instruct_typo_missing_space": "Givean example of a place where an endangered species of animal might be found.",
    "instruct_typo_missing_vowels": "Gv n xmpl of a plc whr n ndngrd spcs of nml mght b fnd.",
    "instruct_typo_random": "Gvie an examlpe of a plcae whree an enadngered speces of animal mgiht be foudn.",
    "instruct_typo_repeated_letters": "Give an exxample of a place where an endannngered species of animal might be found.",
    "instruct_typo_swap": "Giev an exmaple of a palce where an endagnered speceis of aniaml might be fuond.",
    "instruct_typo_swap_and_punctuation": "Giev an exmaple of a palce where an endagnered speceis of aniaml might be fuond;",
    "instruct_typo_swap_and_transpose_and_punctuation": "Giev an eaxpmle of a palce where an endagnered speceis of aniaml might be fuond?",
    "instruct_typo_transpose": "Give an eaxpmle of a palce where an enadngered speceis of aniaml might be fuond.",
    "instruct_typo_wrong_letter": "Give an examplw of a place where an endangered species of animal might be found.",
    "output": "An endangered species of animal might be found in areas where their habitat has been conserved, such as national parks, wildlife preserves, or other designated areas. For example, the Florida panther can be found in the Florida Panther National Wildlife Refuge in Southwest Florida. Another example is the American bald eagle, which can be found in the Channel Islands National Park in California.",
    "prompt_id": "e3d7bb8f-fb8f-4d29-833c-8c5d3ed2580c"
  },
  {
    "prompt_count": 463,
    "instruction_original": "Create a pop quiz about clouds.",
    "input": "",
    "instruct_all_caps": "CREATE A POP QUIZ ABOUT CLOUDS.",
    "instruct_em_dash_break": "Create a pop quiz—about clouds.",
    "instruct_extra_punct": "Create!!!! a pop??? quiz.... about, clouds..!!",
    "instruct_hashtags": "Create a pop quiz about clouds. #quiz #clouds #weather",
    "instruct_inline_ad": "Create a pop quiz (Shop now!) about clouds.",
    "instruct_inline_url": "Create a pop quiz (see more at example.com) about clouds.",
    "instruct_interrobang": "Create a pop quiz about clouds?!",
    "instruct_key_smash": "Create a pop quiz about clouds. asdfghjklqwertyuio.",
    "instruct_leet_speak": "Cr3473 4 p0p qu1z 4b0u7 cl0ud5.",
    "instruct_misplaced_commas": "Create, a pop, quiz, about, clouds.",
    "instruct_missing_bracket": "[Create a pop quiz about clouds.",
    "instruct_missing_bracket_and_quote": "[\"Create a pop quiz about clouds.",
    "instruct_missing_quote": "\"Create a pop quiz about clouds.",
    "instruct_no_caps": "create a pop quiz about clouds.",
    "instruct_no_punct": "Create a pop quiz about clouds",
    "instruct_one_typo_punctuation": "Create a pop quiz about clouds,",
    "instruct_oxford_comma": "Create a pop quiz, about clouds.",
    "instruct_parenthetical_aside": "Create a pop quiz (a quick one) about clouds.",
    "instruct_random_caps": "cReAtE a PoP qUiZ aBoUt ClOuDs.",
    "instruct_sms_abbrev": "C8 a pp qz abt clds.",
    "instruct_three_typos_punctuation": "Create a pop! quiz? about clouds,.",
    "instruct_two_typos_punctuation": "Create a pop quiz. about clouds?",
    "instruct_typo_adjacent": "Creete a pop quiz about clouds.",
    "instruct_typo_extra_letter": "Creaate a pop quiz about clouds.",
    "instruct_typo_extra_space": "Create a pop quiz about clouds .",
    "instruct_typo_homophone": "Craight a pop quiz about clouds.",
    "instruct_typo_missing_letter": "Crate a pop quiz about clouds.",
    "instruct_typo_missing_space": "Createa pop quiz about clouds.",
    "instruct_typo_missing_vowels": "Crt a pp qz abt clds.",
    "instruct_typo_random": "Cretae a po quiz about clouds.",
    "instruct_typo_repeated_letters": "Creaate a popp quiz aboutt cloudds.",
    "instruct_typo_swap": "Cerate a pop quiz about clouds.",
    "instruct_typo_swap_and_punctuation": "Cerate a pop quiz about clouds?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Ceraetre a pop quiz, about clouds!",
    "instruct_typo_transpose": "Crreate a pop quiz about clouds.",
    "instruct_typo_wrong_letter": "Cfeate a pop quiz about clouds.",
    "output": "1. What type of cloud is named after a mountain range?\nA. Cirrus\nB. Stratus\nC. Cumulus\nD. Nimbostratus\n\n2. What type of cloud is associated with a rain shower?\nA. Cumulus\nB. Stratus\nC. Cirrus\nD. Altostratus\n\n3. Which type of cloud is often described as looking like a pile of cotton balls?\nA. Stratus\nB. Altostratus\nC. Cumulus\nD. Nimbostratus\n\n4. Which type of cloud has the tallest vertical growth?\nA. Stratus\nB. Cumulus\nC. Altostratus\nD. Nimbostratus\n\n5. What are the two main ingredients clouds are made of?\nA. Dust and water\nB. Wind and water\nC. Air and water\nD. Ice and water",
    "prompt_id": "fbc33900-a09e-4dc0-8975-5152550bba15"
  },
  {
    "prompt_count": 464,
    "instruction_original": "Explain why trade protectionism can hurt the economy of a country.",
    "input": "",
    "instruct_all_caps": "EXPLAIN WHY TRADE PROTECTIONISM CAN HURT THE ECONOMY OF A COUNTRY.",
    "instruct_em_dash_break": "Explain why trade protectionism—which aims to shield local industries—can hurt the economy of a country.",
    "instruct_extra_punct": "Explain why trade protectionism can hurt the economy of a country?!?!?!?!!!...",
    "instruct_hashtags": "Explain why trade protectionism can hurt the economy of a country. #Trade #Economics #Protectionism #GlobalTrade",
    "instruct_inline_ad": "Explain why trade protectionism can hurt the economy of a country. Get 10% off! Ad.",
    "instruct_inline_url": "Explain why trade protectionism can hurt the economy of a country. Read more at https://example.com/trade-policy",
    "instruct_interrobang": "Explain why trade protectionism can hurt the economy of a country‽",
    "instruct_key_smash": "Explain why trade protectionism can hurt the economy of a country. dfkjshfkjdhsfjkhsd",
    "instruct_leet_speak": "3xpl41n wh¥ 7r4d3 pr073c710n15m c4n hvr7 7h3 3c0n0m¥ 0f 4 c0vn7r¥.",
    "instruct_misplaced_commas": "Explain, why trade protectionism, can hurt, the economy, of a country.",
    "instruct_missing_bracket": "Explain why trade protectionism can hurt the economy of a country[",
    "instruct_missing_bracket_and_quote": "[Explain why trade protectionism can hurt the economy of a country.",
    "instruct_missing_quote": "\"Explain why trade protectionism can hurt the economy of a country.",
    "instruct_no_caps": "explain why trade protectionism can hurt the economy of a country.",
    "instruct_no_punct": "Explain why trade protectionism can hurt the economy of a country",
    "instruct_one_typo_punctuation": "Explain why trade protectionism can hurt the economy of a country?",
    "instruct_oxford_comma": "Explain why trade protectionism can hurt the economy, businesses, and consumers of a country.",
    "instruct_parenthetical_aside": "Explain why trade protectionism (even though it sounds like it would help) can hurt the economy of a country.",
    "instruct_random_caps": "eXpLaIn wHy TrAdE pRoTeCtIoNiSm CaN hUrT tHe EcOnOmY oF a CoUnTrY.",
    "instruct_sms_abbrev": "Xplain y trade protectionism can hrt the eco of a cntry. IMO, it's bad.",
    "instruct_three_typos_punctuation": "Explain why trade protectionism can hurt the economy of a country??!!",
    "instruct_two_typos_punctuation": "Explain why trade protectionism can hurt the economy of a country?!",
    "instruct_typo_adjacent": "Explain why tsade protectionism can hurt the econimy of a cpuntry.",
    "instruct_typo_extra_letter": "Explaine why trade protectionismsm can hurtt the economy of a countrys.",
    "instruct_typo_extra_space": "Explain why trade protectionism ca n hurt the economy of a country.",
    "instruct_typo_homophone": "Explain why trade protectionism can hurt their economy of a country.",
    "instruct_typo_missing_letter": "Exlain why trad protectionism can urt the ecoomy of a coutry.",
    "instruct_typo_missing_space": "Explain why tradeprotectionism canhurtthe economyofacountry.",
    "instruct_typo_missing_vowels": "Expln why trd prtctnsm cn hrt th cnm f a cntry.",
    "instruct_typo_random": "Eplain whyt rade protecionism can urt the econoimy of a country.",
    "instruct_typo_repeated_letters": "Explaiin why trade protectionismm can huurt the economy of a coountry.",
    "instruct_typo_swap": "Expalin why tarde protetcionism can hu rt the eocnomy fo a coutnry.",
    "instruct_typo_swap_and_punctuation": "Expalin why tarde protetcionism can hu rt the eocnomy fo a coutnry!.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Explain why tade protectionism can hurt the ecnomy of a country...?",
    "instruct_typo_transpose": "Explain why tade protectionism can hurt the ecnomy of a country.",
    "instruct_typo_wrong_letter": "Explaim why tsade protectionism can hurt the ecknomy of a country.",
    "output": "Trade protectionism is the practice of protecting domestic industries from foreign competition by imposing tariffs or other restrictions. This practice can be detrimental to the economy of the country that implements it because it raises the cost of imported goods, making them less affordable to consumers. This decreases demand for those goods, leading to fewer sales and less income for the domestic producers. Protectionism may also reduce the incentive for domestic companies to innovate or become more efficient, leading to inefficiency in the market. Finally, protectionism may also create economic tension between countries, leading to retaliatory tariffs that further restrict trade.",
    "prompt_id": "cc20128c-b0f2-44a5-bb0e-0c1ed7fa262a"
  },
  {
    "prompt_count": 465,
    "instruction_original": "Come up with a slogan to describe a new lipstick product.",
    "input": "",
    "instruct_all_caps": "COME UP WITH A SLOGAN TO DESCRIBE A NEW LIPSTICK PRODUCT.",
    "instruct_em_dash_break": "Come up with a slogan—to describe—a new lipstick product.",
    "instruct_extra_punct": "Come up with a slogan??? to describe a new lipstick product..!",
    "instruct_hashtags": "Come up with a slogan to describe a new lipstick product. #slogan #lipstick #beauty",
    "instruct_inline_ad": "Come up with a slogan (Buy our amazing new product!) to describe a new lipstick product.",
    "instruct_inline_url": "Come up with a slogan to describe a new lipstick product (visit example.com).",
    "instruct_interrobang": "Come up with a slogan to describe a new lipstick product!?",
    "instruct_key_smash": "Come up with a slogan to describe a new lipstick product. dfkl;asfjd;lksajdflk;asjdf;",
    "instruct_leet_speak": "C0m3 up w17h 4 5l0g4n 70 d35cr1b3 4 n3w l1p571ck pr0duc7.",
    "instruct_misplaced_commas": "Come up, with a slogan, to describe, a new, lipstick product.",
    "instruct_missing_bracket": "Come up with a slogan to describe a new lipstick product.",
    "instruct_missing_bracket_and_quote": "Come up with a slogan to describe a new lipstick product.",
    "instruct_missing_quote": "Come up with a slogan to describe a new lipstick product.",
    "instruct_no_caps": "come up with a slogan to describe a new lipstick product.",
    "instruct_no_punct": "Come up with a slogan to describe a new lipstick product",
    "instruct_one_typo_punctuation": "Come up with a slogan to describe a new lipstick product,",
    "instruct_oxford_comma": "Come up with a slogan to describe a new lipstick product.",
    "instruct_parenthetical_aside": "Come up with a slogan to describe a new lipstick product (maybe something catchy?).",
    "instruct_random_caps": "CoMe uP wItH a SlOgAn tO dEsCrIbE a NeW LiPsTiCk pRoDuCt.",
    "instruct_sms_abbrev": "Cme up w a slogan 2 describe a new lipstick prod.",
    "instruct_three_typos_punctuation": "Come up with a slogan to describe a new lipstick product...?!?",
    "instruct_two_typos_punctuation": "Come up with a slogan to describe a new lipstick product!?",
    "instruct_typo_adjacent": "Come u0 with a slogan yo descrube a jew lipstick prlduct.",
    "instruct_typo_extra_letter": "Comee up with a sllogan to desccribe a new lippstick product.",
    "instruct_typo_extra_space": "Come up with a slogan to describe a new lipstick  product.",
    "instruct_typo_homophone": "Come up with a slogan to desscribe a knew lipstik product.",
    "instruct_typo_missing_letter": "Com up with a sloan to desribe a new lpstick product.",
    "instruct_typo_missing_space": "Comeupwithaslogantodescribeanewlipstickproduct.",
    "instruct_typo_missing_vowels": "Cm p wth a slgn t dscrb a nw lpstck prdct.",
    "instruct_typo_random": "Coem up wiyh a slohan to describe a bew listick prodcu.",
    "instruct_typo_repeated_letters": "Commee up with a slogann too describe a neww lipsttick product.",
    "instruct_typo_swap": "Ocme up wtih a lsogan ot describe a new lispitck prdocut.",
    "instruct_typo_swap_and_punctuation": "Ocme up wtih a lsogan ot describe a new lispitck prdocut?!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Ocme up wtih a lsogan ot descirbe a enw lispitck prdocut?!?!",
    "instruct_typo_transpose": "Cmoe up wtih a slogan to desrcibe a new lipstick prducto.",
    "instruct_typo_wrong_letter": "Come up with a zlogan to describe a new lipstick pvoduct.",
    "output": "Find your Perfect Pout with our Perfectly Pioneering Lipsticks.",
    "prompt_id": "d4df6a43-1293-4699-9bcc-06f35c16c4f8"
  },
  {
    "prompt_count": 466,
    "instruction_original": "Describe how a Docker container works.",
    "input": "",
    "instruct_all_caps": "DESCRIBE HOW A DOCKER CONTAINER WORKS.",
    "instruct_em_dash_break": "Describe—how a Docker container works.",
    "instruct_extra_punct": "Describe how a Docker!!! container! works?!!!",
    "instruct_hashtags": "Describe how a Docker container works #Docker #Containers #Tech",
    "instruct_inline_ad": "Describe how a Docker container works - Get Yours Today!",
    "instruct_inline_url": "Describe how a Docker container works visit http://docker.example.com for details.",
    "instruct_interrobang": "Describe how a Docker container works?!?",
    "instruct_key_smash": "Describe how a Docker container works ghjkl;",
    "instruct_leet_speak": "D35cr1b3 h0w @ D0ck3r c0nt@1n3r w0rk5.",
    "instruct_misplaced_commas": "Describe how, a Docker, container, works.",
    "instruct_missing_bracket": "Describe how a Docker container works].",
    "instruct_missing_bracket_and_quote": "Describe how a Docker container works]'.",
    "instruct_missing_quote": "Describe how a Docker container works'.",
    "instruct_no_caps": "describe how a docker container works.",
    "instruct_no_punct": "Describe how a Docker container works",
    "instruct_one_typo_punctuation": "Describe how a Docker container works?",
    "instruct_oxford_comma": "Describe how a Docker container works,",
    "instruct_parenthetical_aside": "Describe how a Docker container works (like a little box).",
    "instruct_random_caps": "DeScRiBe HoW a DoCkEr CoNtAiNeR wOrKs.",
    "instruct_sms_abbrev": "Dscrbe how a Docker cntnr wrks plz.",
    "instruct_three_typos_punctuation": "Describe, how a Docker container works.?!!!",
    "instruct_two_typos_punctuation": "Describe how a Docker container works?!?",
    "instruct_typo_adjacent": "Desctibe how a Dockee congsinee wprls.",
    "instruct_typo_extra_letter": "Desciribe how a Docker conatainer works.",
    "instruct_typo_extra_space": "Describe how a Docker cont ainer works.",
    "instruct_typo_homophone": "Describe how a Docer container works.",
    "instruct_typo_missing_letter": "Dscribe how a Doker contaner woks.",
    "instruct_typo_missing_space": "DescribehowaDockercontainerworks.",
    "instruct_typo_missing_vowels": "Dscrbe hw a Dckr cntnr wrks.",
    "instruct_typo_random": "Descrbe howq a Dockeer conytainer wroks.",
    "instruct_typo_repeated_letters": "Desscribe howw a Dockker contaainer woorrks.",
    "instruct_typo_swap": "Decsribe hwo a Docekr containre wroks.",
    "instruct_typo_swap_and_punctuation": "Decsribe hwo a Docekr containre wroks!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Desrcbie hwo a Dockre conatinre wrkos.?",
    "instruct_typo_transpose": "Dscribe hwo a Docker conatiner wrkos.",
    "instruct_typo_wrong_letter": "Descrive how a Docker containeb works.",
    "output": "A Docker container is an isolated environment in which applications can be packaged and run. It consists of the application, system libraries, and other configuration files necessary for a specific task. The container runs within a docker host, which isolates the container from other host resources and is responsible for managing its life cycle. Docker containers are lightweight and highly portable; they can be quickly spun up and transported to different environments such as cloud, bare metal, and on-premises. Containers are isolated from the underlying host system so they can be securely run and managed. Docker also uses images which function like snapshots – making it easy to deploy and run applications reliably and consistently across different environments.",
    "prompt_id": "54c9d9d9-d324-488f-86a3-e10f894d1a49"
  },
  {
    "prompt_count": 467,
    "instruction_original": "Given an economic concept, define it in simple terms.",
    "input": "Inflation",
    "instruct_all_caps": "GIVEN AN ECONOMIC CONCEPT, DEFINE IT IN SIMPLE TERMS.",
    "instruct_em_dash_break": "Given an economic concept---define it in simple terms.",
    "instruct_extra_punct": "Given... an? economic!! concept, define it in simple terms?!.",
    "instruct_hashtags": "Given an economic concept, define it in simple terms. #economics #definition #simple",
    "instruct_inline_ad": "Given an economic concept, define it in simple terms. Shop now for great deals!",
    "instruct_inline_url": "Given an economic concept, define it in simple terms. Visit example.com for more info.",
    "instruct_interrobang": "Given an economic concept, define it in simple terms?!",
    "instruct_key_smash": "Given an economic concept, define it in simple terms. asdfghjkl",
    "instruct_leet_speak": "G1v3n 4n 3c0n0m1c c0nc3p7, d3f1n3 17 1n 51mpl3 73rm5.",
    "instruct_misplaced_commas": "Given an economic concept, define it, in simple terms.",
    "instruct_missing_bracket": "Given (an economic concept, define it in simple terms.",
    "instruct_missing_bracket_and_quote": "\"(Given an economic concept, define it in simple terms.",
    "instruct_missing_quote": "\"Given an economic concept, define it in simple terms.",
    "instruct_no_caps": "given an economic concept, define it in simple terms.",
    "instruct_no_punct": "Given an economic concept define it in simple terms",
    "instruct_one_typo_punctuation": "Given an economic concept; define it in simple terms.",
    "instruct_oxford_comma": "Given an economic concept, define it in simple terms.",
    "instruct_parenthetical_aside": "Given an economic concept (like GDP or inflation), define it in simple terms.",
    "instruct_random_caps": "GiVeN aN EcOnOmIc CoNcEpT, dEfInE iT iN SiMpLe TeRmS.",
    "instruct_sms_abbrev": "Gvn an eco concept, dfn it n smpl trms.",
    "instruct_three_typos_punctuation": "Given an economic concept; define it in simple terms!?",
    "instruct_two_typos_punctuation": "Given an economic concept; define it in simple terms!",
    "instruct_typo_adjacent": "Given sn economic concept, deifne it in simple rerms.",
    "instruct_typo_extra_letter": "Given an eccoonomic concept, defini it in simple terms.",
    "instruct_typo_extra_space": "Given an economic concept, define it in sim ple terms.",
    "instruct_typo_homophone": "Given Anne economic concept, define it in simple terms.",
    "instruct_typo_missing_letter": "Given an economi concept, define it in simpl terms.",
    "instruct_typo_missing_space": "Givenaneconomicconcept,defineitinsimpleterms.",
    "instruct_typo_missing_vowels": "Gvn n cnmc cncpt, dfn t n smpl trms.",
    "instruct_typo_random": "Given zan economib conscept, defijne it in simlpe terks.",
    "instruct_typo_repeated_letters": "Given an econoomic concep tt, definee it in simplee termss.",
    "instruct_typo_swap": "Gievn an eocnomic concept, defien it in smiple trmes.",
    "instruct_typo_swap_and_punctuation": "Gievn an eocnomic concept; defien it in smiple trmes.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Gievn an eocnomic cnocept; deifne it in smiple trmes!?",
    "instruct_typo_transpose": "Gvie an economic cnocept, deifne it in simlpe terms.",
    "instruct_typo_wrong_letter": "Given an economic cokcept, deqine it in simgle terms.",
    "output": "Inflation is an economic concept that refers to the sustained rise in prices of goods and services. It is measured by calculating the rate at which the general level of prices for goods and services is rising, and it is usually calculated using a price index. When inflation is high, the purchasing power of currency decreases and the value of money diminishes.",
    "prompt_id": "e2abe5f7-f069-44d0-a104-7e125629f61a"
  },
  {
    "prompt_count": 468,
    "instruction_original": "Propose a transportation solution for a city with rapid population growth.",
    "input": "",
    "instruct_all_caps": "PROPOSE A TRANSPORTATION SOLUTION FOR A CITY WITH RAPID POPULATION GROWTH.",
    "instruct_em_dash_break": "Propose a transportation solution—for a city—with rapid population growth.",
    "instruct_extra_punct": "Propose a transportation!!! solution??? for a city.. with rapid... population growth!!!!",
    "instruct_hashtags": "#Propose #transportation #solution for a #city with #rapid #population #growth.",
    "instruct_inline_ad": "Propose a transportation solution (Need car insurance? Click here!) for a city with rapid population growth.",
    "instruct_inline_url": "Propose a transportation solution (more info at example.com/transport) for a city with rapid population growth.",
    "instruct_interrobang": "Propose a transportation solution for a city with rapid population growth!?",
    "instruct_key_smash": "Propose a transportation solution asdkjfhsdf for a city with rapid population growth.",
    "instruct_leet_speak": "Pr0p053 4 tr4n5p0rt47i0n 501u7i0n f0r 4 c17y w17h r4p1d p0pu147i0n gr0w7h.",
    "instruct_misplaced_commas": "Propose, a transportation, solution, for a city, with rapid population, growth.",
    "instruct_missing_bracket": "[Propose a transportation solution for a city with rapid population growth.",
    "instruct_missing_bracket_and_quote": "[ 'Propose a transportation solution for a city with rapid population growth.",
    "instruct_missing_quote": "'Propose a transportation solution for a city with rapid population growth.",
    "instruct_no_caps": "propose a transportation solution for a city with rapid population growth.",
    "instruct_no_punct": "Propose a transportation solution for a city with rapid population growth",
    "instruct_one_typo_punctuation": "Propose a transportation solution for a city with rapid population growth?",
    "instruct_oxford_comma": "Propose a transportation solution, for a city with rapid population growth.",
    "instruct_parenthetical_aside": "Propose a transportation solution (something effective, hopefully) for a city with rapid population growth.",
    "instruct_random_caps": "pRoPoSe a TrAnSpOrTaTiOn SoLuTiOn FoR a CiTy WiTh RaPiD pOpUlAtIoN GrOwTh.",
    "instruct_sms_abbrev": "Prps a transpo soln 4 a cty w rapid pop grwth.",
    "instruct_three_typos_punctuation": "Propose a transportation solution for a city with rapid population growth?!.",
    "instruct_two_typos_punctuation": "Propose a transportation solution for a city with rapid population growth?!",
    "instruct_typo_adjacent": "Prppose a transprotstion solution dor a vity wity rapid ppoulation growyh.",
    "instruct_typo_extra_letter": "Proppose a trannsportation solution for a city with rapid population growwth.",
    "instruct_typo_extra_space": "Propose a transportation solution for a city with rapid population growth .",
    "instruct_typo_homophone": "Propose a transportation solution four a city witch rapid population growth.",
    "instruct_typo_missing_letter": "Propose a transprtation solution for a city with rapid population growth.",
    "instruct_typo_missing_space": "Proposeatransportationsolutionforacitywithrapidpopulationgrowth.",
    "instruct_typo_missing_vowels": "Prpse a trnsprttn sltn fr a cty wth rpd ppltn grwth.",
    "instruct_typo_random": "Propise a tranaporttion solotion fpr a city wh rapid popolation growht.",
    "instruct_typo_repeated_letters": "Prooppose a trannnsportation solutionn forr a ciiity with rappid popuulation growwth.",
    "instruct_typo_swap": "Poropse a tnarpsotration solutoin fro a ctiy wthi rpaid ppoulation grwoth.",
    "instruct_typo_swap_and_punctuation": "Poropse a tnarpsotration solutoin fro a ctiy wthi rpaid ppoulation grwoth!?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Poropse a tranpsortaiton soultion for a ctii wtih raipd popualtoin grohwth.!!",
    "instruct_typo_transpose": "Proopse a tranpsortaiton soultion for a ctiy wtih rpadi popualtoin grwoth.",
    "instruct_typo_wrong_letter": "Propose a tranaporation solution for a city with rapid population growtb.",
    "output": "A city with rapid population growth should consider investing in public transportation in order to alleviate traffic congestion. This could include buses, subway systems, light rail options, and even bike-sharing programs. These solutions are cost-effective and have the potential to reduce traffic and air pollution, as well as make it easier for people to get around. Additionally, in order to accommodate the increased demand for transportation, the city may also need to invest in infrastructure such as road expansion and parking lots.",
    "prompt_id": "50b4d6e0-5908-4309-ac7b-79e3e7d5db9c"
  },
  {
    "prompt_count": 469,
    "instruction_original": "Identify a potential security threat for a global online financial system.",
    "input": "",
    "instruct_all_caps": "IDENTIFY A POTENTIAL SECURITY THREAT FOR A GLOBAL ONLINE FINANCIAL SYSTEM.",
    "instruct_em_dash_break": "Identify a potential security threat\n—for a global online financial system.",
    "instruct_extra_punct": "Identify!!! a potential??? security threat.... for a global online financial system!!!!!",
    "instruct_hashtags": "Identify a potential security threat for a global online financial system #security #fintech #cybersecurity #threatanalysis",
    "instruct_inline_ad": "Identify a potential security threat for a global online financial system (Try our new security software!).",
    "instruct_inline_url": "Identify a potential security threat for a global online financial system (visit example.com for tips).",
    "instruct_interrobang": "Identify a potential security threat for a global online financial system?!",
    "instruct_key_smash": "Identify a potential security threat for a global online financial system asdfghjklqwertyuiop.",
    "instruct_leet_speak": "1d3n71fy 4 p073n714l 53cur17y 7hr347 f0r 4 9l0b4l 0nl1n3 f1n4nc14l 5y573m.",
    "instruct_misplaced_commas": "Identify a potential, security threat, for a global, online financial system.",
    "instruct_missing_bracket": "Identify a potential security threat for a global online financial system].",
    "instruct_missing_bracket_and_quote": "Identify a potential security threat for a global online financial system.",
    "instruct_missing_quote": "Identify a potential security threat for a global online financial system.",
    "instruct_no_caps": "identify a potential security threat for a global online financial system.",
    "instruct_no_punct": "Identify a potential security threat for a global online financial system",
    "instruct_one_typo_punctuation": "Identify a potential security threat for a global online financial system?",
    "instruct_oxford_comma": "Identify a potential security threat for a global online financial system.",
    "instruct_parenthetical_aside": "Identify a potential security threat (think major vulnerability) for a global online financial system.",
    "instruct_random_caps": "IdEntIfY a pOtEnTiAl sEcUrItY tHrEaT fOr a gLoBaL OnLiNe fInAnCiAl sYsTeM.",
    "instruct_sms_abbrev": "Idntfy a potntl security thret fr a glbl onln financl systm.",
    "instruct_three_typos_punctuation": "Identify a potential security threat for a global online financial system...?!",
    "instruct_two_typos_punctuation": "Identify a potential security threat? for a global online financial system..",
    "instruct_typo_adjacent": "Identiofy a potehtial security threat for a gloval online financial system.",
    "instruct_typo_extra_letter": "Identtiify a potentiaal security threat for a globall online financial system.",
    "instruct_typo_extra_space": "Identify a potential security threat for a global online financial system  .",
    "instruct_typo_homophone": "Identify a potential security threat for a global online financial system.",
    "instruct_typo_missing_letter": "Idenify a potenial securty threat for a globl online financial system.",
    "instruct_typo_missing_space": "Identifyapotential securitythreat foraglobal online financial system.",
    "instruct_typo_missing_vowels": "Idntfy a ptntial scrty thrt fr a glbl nln fnancl systm.",
    "instruct_typo_random": "Idetnify a potentiak secrity threaat for a gllbal onlibe financial system.",
    "instruct_typo_repeated_letters": "Identtify a pottential securitry threat forr a globbal online finaancial systemm.",
    "instruct_typo_swap": "Idnetify a potnetial security threat for a global online financial system.",
    "instruct_typo_swap_and_punctuation": "Idnetify a potnetial security threat for a global online financial system?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Idnetify a poteitnal security threat for a golbal online financial system.!?",
    "instruct_typo_transpose": "Idnetify a poteitnal security threat for a golbal online financial system.",
    "instruct_typo_wrong_letter": "Identofy a potential securiwy threat for a global onlibe financial system.",
    "output": "A potential security threat for a global online financial system is cybercrime. Cybercriminals often target online financial systems due to their complexity and the potential to gain access to sensitive data like financial information or credit card numbers. Cybercriminals may use methods like malware, phishing, and identity theft to gain access to a system and steal money or data. It is important for global financial systems to have robust security measures in place to protect against these threats.",
    "prompt_id": "6ad282c0-77ce-4985-9377-360305d1a385"
  },
  {
    "prompt_count": 470,
    "instruction_original": "Describe what it takes to be a successful manager.",
    "input": "",
    "instruct_all_caps": "DESCRIBE WHAT IT TAKES TO BE A SUCCESSFUL MANAGER.",
    "instruct_em_dash_break": "Describe what it takes—the essential qualities—to be a successful manager.",
    "instruct_extra_punct": "Describe... what it takes!!!! to be a successful manager???!",
    "instruct_hashtags": "Describe what it takes to be a successful manager. #leadership #success #managementtips",
    "instruct_inline_ad": "Describe what it takes to be a successful manager. Try our leading software today!",
    "instruct_inline_url": "Describe what it takes to be a successful manager. Find out more at https://example.com/",
    "instruct_interrobang": "Describe what it takes to be a successful manager‽",
    "instruct_key_smash": "Describe what it takes to be a successful manager. qwerqwerasdfasdfzxcvzxcv",
    "instruct_leet_speak": "D3scr1b3 wh@t 1t t@k3s t0 b3 @ succ3ssfvl m@n@g3r.",
    "instruct_misplaced_commas": "Describe, what it takes, to be a, successful manager.",
    "instruct_missing_bracket": "Describe what it takes to be a successful manager.\"]",
    "instruct_missing_bracket_and_quote": "Describe what it takes to be a successful manager.\"]",
    "instruct_missing_quote": "Describe what it takes to be a successful manager.\"",
    "instruct_no_caps": "describe what it takes to be a successful manager.",
    "instruct_no_punct": "Describe what it takes to be a successful manager",
    "instruct_one_typo_punctuation": "Describe what it takes to be a successful manager!",
    "instruct_oxford_comma": "Describe what it takes to be a successful manager.",
    "instruct_parenthetical_aside": "Describe what it takes (all the necessary skills and traits) to be a successful manager.",
    "instruct_random_caps": "dEScRibE whAT iT tAkEs tO bE a SUcCessFUl mAnAgEr.",
    "instruct_sms_abbrev": "Dscr wht it tks 2 b a succsfl mngr.",
    "instruct_three_typos_punctuation": "Describe what it takes to be a successful manager...?!",
    "instruct_two_typos_punctuation": "Describe what it takes to be a successful manager!?",
    "instruct_typo_adjacent": "Describe what it takes to be a successful msnsger.",
    "instruct_typo_extra_letter": "Describee what it takes to be a successful manager.",
    "instruct_typo_extra_space": "Describe what it takes to be a successful manager. ",
    "instruct_typo_homophone": "Describe what it takes to be a successful manager.",
    "instruct_typo_missing_letter": "Describ what it takes to be a successful manager.",
    "instruct_typo_missing_space": "Describewhatittakestobeasuccessfulmanager.",
    "instruct_typo_missing_vowels": "Dscrb wht t tks t b sccssfl mngr.",
    "instruct_typo_random": "Desrcibe whxt it takes tq be a successful managerr.",
    "instruct_typo_repeated_letters": "Descriiibe what it takes to be a successfulll manaaager.",
    "instruct_typo_swap": "Descirbe what it takes to be a successful manager.",
    "instruct_typo_swap_and_punctuation": "Descirbe what it takes to be a successful manager?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Dsecrbe what it taeks to be a succesful manager!",
    "instruct_typo_transpose": "Desrcibe what it takes to be a successful manager.",
    "instruct_typo_wrong_letter": "Describe what it takes to be a successful mahager.",
    "output": "A successful manager is one who has strong leadership and communication skills, the ability to think strategically, and the knowledge and experience to stay up-to-date on industry trends and best practices. They should be organized and resourceful, with the ability to manage people, motivate employees, and inspire others. They should be able to create a culture of trust and respect, provide feedback and guidance, and create an environment for success. They should also be comfortable making difficult decisions, accountable for their actions, and willing to learn from their mistakes.",
    "prompt_id": "32675c3b-927f-4ae0-a195-478d0fa52713"
  },
  {
    "prompt_count": 471,
    "instruction_original": "Arrange the given sentences into a well-structured paragraph.",
    "input": "Many of the world’s problems can be traced back to a lack of education. People must be provided with a good foundation in education. Education has the power to provide societies with long-term solutions.",
    "instruct_all_caps": "ARRANGE THE GIVEN SENTENCES INTO A WELL-STRUCTURED PARAGRAPH.",
    "instruct_em_dash_break": "Arrange the given sentences—into a well-structured paragraph.",
    "instruct_extra_punct": "Arrange... the given! sentences? into a well-structured paragraph!!!",
    "instruct_hashtags": "Arrange the given sentences into a well-structured paragraph. #arrangement #paragraph #writing #structure",
    "instruct_inline_ad": "Arrange the given sentences into a well-structured paragraph. Visit our sponsor!",
    "instruct_inline_url": "Arrange the given sentences into a well-structured paragraph. Learn more: example.com",
    "instruct_interrobang": "Arrange the given sentences into a well-structured paragraph?!",
    "instruct_key_smash": "Arrange the given sentences into a well-structured paragraph. qwertzuipåasdfghjkløæzxcvbnm,.",
    "instruct_leet_speak": "4rr4ng3 7h3 g1v3n 53n73nc35 1n70 4 w3ll-57ruc7ur3d p4r4gr4ph.",
    "instruct_misplaced_commas": "Arrange, the given sentences, into, a well-structured, paragraph.",
    "instruct_missing_bracket": "Arrange the given sentences into a well-structured paragraph.",
    "instruct_missing_bracket_and_quote": "Arrange the given sentences into a well-structured paragraph.",
    "instruct_missing_quote": "Arrange the given sentences into a well-structured paragraph.",
    "instruct_no_caps": "arrange the given sentences into a well-structured paragraph.",
    "instruct_no_punct": "Arrange the given sentences into a well structured paragraph",
    "instruct_one_typo_punctuation": "Arrange the given sentences into a well-structured paragraph!",
    "instruct_oxford_comma": "Arrange the given sentences into a well-structured paragraph.",
    "instruct_parenthetical_aside": "Arrange the given sentences (you know, the ones provided) into a well-structured paragraph.",
    "instruct_random_caps": "ArRanGe tHe gIveN seNtEnCeS iNtO a WeLl-sTrUcTuReD pArAgRaPh.",
    "instruct_sms_abbrev": "Arng the givn sntncs int a wel-structurd paragraf.",
    "instruct_three_typos_punctuation": "Arrange the given sentences; into a well-structured paragraph...",
    "instruct_two_typos_punctuation": "Arrange the given sentences, into a well-structured paragraph?",
    "instruct_typo_adjacent": "Arnange the gifen xentences into a wepl-structrred parzgraph.",
    "instruct_typo_extra_letter": "Arrrangge the given senntencess innto a wewell-strucctured paragrraph.",
    "instruct_typo_extra_space": "Arrange the  given  sentences into a well structured  paragraph.",
    "instruct_typo_homophone": "Arainje the given centenses into a whale-structured pairagraph.",
    "instruct_typo_missing_letter": "Arage the gien setences ito a wel-stucture paragrah.",
    "instruct_typo_missing_space": "Arrangethe given sentencesinto awell-structuredparagraph.",
    "instruct_typo_missing_vowels": "Arrng th gvn sntncs nt sb wll-strctrd prgrph.",
    "instruct_typo_random": "Arange the gveb senetncey into a wel-struitured paragrph.",
    "instruct_typo_repeated_letters": "Arraange the griven senntenncess into a welle-structtured paragrraphh.",
    "instruct_typo_swap": "Arnage the gvien setnecens into a wlel-srtuctured paragarph.",
    "instruct_typo_swap_and_punctuation": "Arnage the gvien setnecens; into a wlel-srtuctured paragarph?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Ararnge the geivn snetneces; into a well-structrued paragarp...",
    "instruct_typo_transpose": "Ararnge the geivn snetneces into a well-structrued paragarp.",
    "instruct_typo_wrong_letter": "Arabge the given senfences into a welg-structuqed paravraph.",
    "output": "Education has the power to provide societies with long-term solutions to many of the world’s problems. People must be provided with a good foundation in education in order to be able to make informed decisions and have the knowledge and skills necessary to tackle these challenges.",
    "prompt_id": "c731d8b0-b450-4a6b-ab14-69deb142c31d"
  },
  {
    "prompt_count": 472,
    "instruction_original": "Construct a timeline for the coronavirus outbreak.",
    "input": "",
    "instruct_all_caps": "CONSTRUCT A TIMELINE FOR THE CORONAVIRUS OUTBREAK.",
    "instruct_em_dash_break": "Construct a timeline—for the coronavirus outbreak.",
    "instruct_extra_punct": "Construct a timeline for the coronavirus outbreak!?!?!",
    "instruct_hashtags": "Construct a timeline for the coronavirus outbreak #coronavirus #timeline",
    "instruct_inline_ad": "Construct a timeline (Check out our timeline service!) for the coronavirus outbreak.",
    "instruct_inline_url": "Construct a timeline (Visit example.com for details) for the coronavirus outbreak.",
    "instruct_interrobang": "Construct a timeline for the coronavirus outbreak!?",
    "instruct_key_smash": "Construct a timeline for the coronavirus outbreak jkl;",
    "instruct_leet_speak": "C0n57ruc7 a 71m3l1n3 f0r 7h3 c0r0n4v1ru5 0u78r34k.",
    "instruct_misplaced_commas": "Construct a, timeline for the coronavirus, outbreak.",
    "instruct_missing_bracket": "Construct a timeline [for the coronavirus outbreak.",
    "instruct_missing_bracket_and_quote": "[ 'Construct a timeline for the coronavirus outbreak.",
    "instruct_missing_quote": "'Construct a timeline for the coronavirus outbreak.",
    "instruct_no_caps": "construct a timeline for the coronavirus outbreak.",
    "instruct_no_punct": "Construct a timeline for the coronavirus outbreak",
    "instruct_one_typo_punctuation": "Construct a timeline for the coronavirus outbreak?",
    "instruct_oxford_comma": "Construct a timeline, for the coronavirus outbreak.",
    "instruct_parenthetical_aside": "Construct a timeline (a list of events in chronological order) for the coronavirus outbreak.",
    "instruct_random_caps": "CoNsTrUcT a TiMeLiNe FoR tHe CoRoNaViRuS oUtBrEaK.",
    "instruct_sms_abbrev": "Cnstrct a tmln 4 the crnavrs otbrk.",
    "instruct_three_typos_punctuation": "Construct a timeline, for the coronavirus outbreak!?",
    "instruct_two_typos_punctuation": "Construct; a timeline, for the coronavirus outbreak.",
    "instruct_typo_adjacent": "Conatruct a rimeline gor the coronavrius outbreak.",
    "instruct_typo_extra_letter": "Constructt a timelinee for the coronavirus outbreak.",
    "instruct_typo_extra_space": "Construct a timeline for the coronavirus outbreak .",
    "instruct_typo_homophone": "Construct a timeline fore the coronavirus outbreak.",
    "instruct_typo_missing_letter": "Cnstruct a timelin for the coronaviru outbreak.",
    "instruct_typo_missing_space": "Constructatime linefor thecoronavirus outbreak.",
    "instruct_typo_missing_vowels": "Cnstrct a timln fr th crnvrs tbrk.",
    "instruct_typo_random": "Conssrtuuct a timetline fior th coiroonaviruus outbrreak.",
    "instruct_typo_repeated_letters": "Connnstruct a tiimeline for the coronaviirus outbbreak.",
    "instruct_typo_swap": "Corsntuct a timlenie fro the croonavirus outbereak.",
    "instruct_typo_swap_and_punctuation": "Corsntuct a timeline for the coronavirus outbreak.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Corsntcut a timeline for the coronavirus outbreak.",
    "instruct_typo_transpose": "Constrcut a tmieline for the coronaviurs outbreak.",
    "instruct_typo_wrong_letter": "Construct a timeline for the cironavirus outbreak.",
    "output": "December 2019: Initial Cases Reported in Wuhan, China\n\nJanuary 2020: Coronavirus has Spread to Multiple Countries\n\nFebruary 2020: World Health Organization (WHO) Declares a Public Health Emergency\n\nMarch 2020: COVID-19 Declared a Global Pandemic\n\nApril 2020: Many Countries Begin to Reopen \n\nMay 2020: Vaccine Research & Development Begins\n\nJune 2020: WHO announces start of vaccine distribution to low-income countries \n\nJuly 2020: Vaccinations Begin in Developed Countries\n\nAugust 2020: Vaccine Trials Begin in the US\n\nSeptember 2020: New Virus Strains Appear\n\nOctober 2020: Global Cases Pass 40 Million\n\nNovember 2020: Vaccine Rollout Begins in US\n\nDecember 2020: Virus Cases Reach an All-Time High",
    "prompt_id": "90cef16f-27a7-465c-b272-948ef73fd028"
  },
  {
    "prompt_count": 473,
    "instruction_original": "Compare and contrast two types of computer networks.",
    "input": "",
    "instruct_all_caps": "COMPARE AND CONTRAST TWO TYPES OF COMPUTER NETWORKS.",
    "instruct_em_dash_break": "Compare—and contrast—two types of computer networks.",
    "instruct_extra_punct": "Compare!!! and contrast... two types??? of computer networks!!!!",
    "instruct_hashtags": "Compare and contrast two types of computer networks #networks #computing #tech.",
    "instruct_inline_ad": "Compare and contrast two types of computer networks. Limited Time Deal!",
    "instruct_inline_url": "Compare and contrast two types of computer networks. Find out more at https://example.com",
    "instruct_interrobang": "Compare and contrast two types of computer networks‽",
    "instruct_key_smash": "Compare and contrast two types of computer networks qwertyuiop.",
    "instruct_leet_speak": "C0mp4r3 4nd c0ntr45t tw0 typ35 0f c0mput3r n3tw0rk5.",
    "instruct_misplaced_commas": "Compare, and, contrast two types, of computer networks.",
    "instruct_missing_bracket": "Compare and contrast [two types of computer networks.",
    "instruct_missing_bracket_and_quote": "\"Compare and contrast [two types of computer networks.",
    "instruct_missing_quote": "\"Compare and contrast two types of computer networks.",
    "instruct_no_caps": "compare and contrast two types of computer networks.",
    "instruct_no_punct": "Compare and contrast two types of computer networks",
    "instruct_one_typo_punctuation": "Compare and contrast two types of computer networks!",
    "instruct_oxford_comma": "Compare, and contrast two types of computer networks.",
    "instruct_parenthetical_aside": "Compare and contrast (this is important) two types of computer networks.",
    "instruct_random_caps": "cOmPaRe aNd CoNtRaSt TwO tYpEs oF cOmPuTeR NeTwOrKs.",
    "instruct_sms_abbrev": "Cmpare & cntrast 2 types of comp ntwks.",
    "instruct_three_typos_punctuation": "Compare; and contrast two types of computer networks?!",
    "instruct_two_typos_punctuation": "Compare, and contrast two types of computer networks!",
    "instruct_typo_adjacent": "Vompare and cobtrast two types of vomputer netqorks.",
    "instruct_typo_extra_letter": "Comparee andd contrastt twoo typess off computerr networkss.",
    "instruct_typo_extra_space": "Compare and contrast two types of computer networks .",
    "instruct_typo_homophone": "Kompare and contrast too types of computer networks.",
    "instruct_typo_missing_letter": "Compar and contrat tw types of compuer network.",
    "instruct_typo_missing_space": "Compareandcontrasttwotypesofcomputernetworks.",
    "instruct_typo_missing_vowels": "Cmpr nd cntrst tw typs f cmptr ntwrks.",
    "instruct_typo_random": "Comapre nad contrazt two typez of computee networks.",
    "instruct_typo_repeated_letters": "Comparre andd contrast twoo types of computerr networkss.",
    "instruct_typo_swap": "Copmare and contrast two types of computer networks.",
    "instruct_typo_swap_and_punctuation": "Copmare and contrast two types of computer networks!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Copamre and conrtast two types of computer networks;",
    "instruct_typo_transpose": "Comapre and contrast two types of computer networks.",
    "instruct_typo_wrong_letter": "Comqare and cobtrast tzo types of vomputer netqorks.",
    "output": "There are two main types of computer networks: Local Area Networks (LANs) and Wide Area Networks (WANs). \n\nLANs are typically used in small geographic areas such as businesses and homes, and involve connecting multiple computers in a single region using a common communications protocol. They are usually limited to a few miles in size and provide high-speed connections between users.\n\nIn contrast, WANs connect computers over large geographic areas and often span multiple countries. They use dedicated leased lines such as cables or satellite signals to connect multiple LANs together. As such, they are slower than LANs due to the distance involved.\n\nEach type of network has its own advantages and disadvantages, and which network is more suitable will depend on the context of the given situation.",
    "prompt_id": "8310a3ef-f41f-4f98-86f3-5a3a9b24b9a4"
  },
  {
    "prompt_count": 474,
    "instruction_original": "Describe how machine learning can be used to automate mundane tasks.",
    "input": "",
    "instruct_all_caps": "DESCRIBE HOW MACHINE LEARNING CAN BE USED TO AUTOMATE MUNDANE TASKS.",
    "instruct_em_dash_break": "Describe how machine learning—can be used—to automate mundane tasks.",
    "instruct_extra_punct": "Describe how machine learning can be used to automate mundane tasks...???",
    "instruct_hashtags": "Describe how machine learning can be used to automate mundane tasks #ML #AI #Automation #MundaneTasks",
    "instruct_inline_ad": "Describe how machine learning (Shop Now!) can be used to automate mundane tasks.",
    "instruct_inline_url": "Describe how machine learning (visit www.example.com) can be used to automate mundane tasks.",
    "instruct_interrobang": "Describe how machine learning can be used to automate mundane tasks!?",
    "instruct_key_smash": "Describe how machine learning can be used to automate mundane tasks asdfghjkl;",
    "instruct_leet_speak": "D35cr1b3 h0w m4ch1n3 l34rn1ng c4n b3 u53d t0 4u70m473 mund4n3 745k5.",
    "instruct_misplaced_commas": "Describe, how machine, learning can, be used to automate, mundane tasks,.",
    "instruct_missing_bracket": "Describe how machine learning [can be used to automate mundane tasks.",
    "instruct_missing_bracket_and_quote": "'Describe how machine learning [can be used to automate mundane tasks.",
    "instruct_missing_quote": "'Describe how machine learning can be used to automate mundane tasks.",
    "instruct_no_caps": "describe how machine learning can be used to automate mundane tasks.",
    "instruct_no_punct": "Describe how machine learning can be used to automate mundane tasks",
    "instruct_one_typo_punctuation": "Describe how machine learning can be used to automate mundane tasks?",
    "instruct_oxford_comma": "Describe how machine learning can be used to automate mundane tasks,.",
    "instruct_parenthetical_aside": "Describe how machine learning (you know, the AI stuff) can be used to automate mundane tasks.",
    "instruct_random_caps": "DeScrIbE hOw MaChInE lEaRnInG cAn Be UsEd To AuToMaTe MuNdAnE tAsKs.",
    "instruct_sms_abbrev": "Dscr8 how ml can b usd 2 autom8 mndn tsks.",
    "instruct_three_typos_punctuation": "Describe, how machine learning can be used to automate mundane tasks??",
    "instruct_two_typos_punctuation": "Describe how machine learning can be used to automate mundane tasks!?",
    "instruct_typo_adjacent": "Desrcibe hoi machijne ledrning can be used ti ayomate mndane tasks.",
    "instruct_typo_extra_letter": "Describee how machinee learningg can be usedd too automatee mundane tasks.",
    "instruct_typo_extra_space": "Describe how machine learning can be used to auto mate mundane tasks.",
    "instruct_typo_homophone": "Describe how machine learning can be used to automate mundane taxs.",
    "instruct_typo_missing_letter": "Describ how machin learning can be used to automat mundane tasks.",
    "instruct_typo_missing_space": "Describehowmachinelearningcanbeusedtoautomatemundanetasks.",
    "instruct_typo_missing_vowels": "Dscrb hw mchn lrnng cn b sd t atmte mndn tsks.",
    "instruct_typo_random": "Dscrble how machine lerning can be used to automate mundne tasks.",
    "instruct_typo_repeated_letters": "Desccribe how machhine learning can be ussed to auttomate munndane tasks.",
    "instruct_typo_swap": "Desrcibe hwo mchine laerning cna eb usde ot atuomate mnduae tsask.",
    "instruct_typo_swap_and_punctuation": "Desrcibe hwo mchine laerning cna eb usde ot atuomate mnduae tsask?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Describe how machiine laerning can be used to auotmate mundaen tasks!",
    "instruct_typo_transpose": "Describe how machiine laerning can be used to auotmate mundaen tasks.",
    "instruct_typo_wrong_letter": "Dsscribe how machine larning can be used to automate mundane taskd.",
    "output": "Machine learning can be used to automate mundane tasks such as document classification, sentiment analysis, predictive analytics, and natural language processing. These tasks can be tedious and time-consuming for humans to do, but machine learning algorithms can perform them quickly and accurately. Machine learning can also be used for more complex tasks such as object recognition and autonomous driving, which require advanced algorithms and large amounts of data. Machine learning makes it possible to automate many tasks that would otherwise have to be done manually, saving time and energy.",
    "prompt_id": "7c66b2ca-f4ab-4c62-9a70-af9c03489a46"
  },
  {
    "prompt_count": 475,
    "instruction_original": "Write a blog post on how to deploy machine learning models.",
    "input": "",
    "instruct_all_caps": "WRITE A BLOG POST ON HOW TO DEPLOY MACHINE LEARNING MODELS.",
    "instruct_em_dash_break": "Write a blog post—on how to deploy machine learning models—.",
    "instruct_extra_punct": "Write!!! a blog!!!! post!!! on how! to deploy!! machine learning! models!!!",
    "instruct_hashtags": "Write a blog post on how to deploy machine learning models #ML #Deployment #HowTo",
    "instruct_inline_ad": "Write a blog post (sponsored by Acme Corp!) on how to deploy machine learning models.",
    "instruct_inline_url": "Write a blog post (learn more at example.com) on how to deploy machine learning models.",
    "instruct_interrobang": "Write a blog post on how to deploy machine learning models!?",
    "instruct_key_smash": "Write a blog post dfghjkl;kjhgfd on how to deploy machine learning models mnnbvcxzertyuio.",
    "instruct_leet_speak": "Wr1t3 @ bl0g p05t 0n h0w t0 d3pl0y m@ch1n3 l3@rn1ng m0d3l5.",
    "instruct_misplaced_commas": "Write, a blog post, on how, to deploy machine learning, models.",
    "instruct_missing_bracket": "Write a blog post on how to deploy machine learning models (easy, right?",
    "instruct_missing_bracket_and_quote": "Write \"a blog post on how to deploy machine learning models (easy, right.",
    "instruct_missing_quote": "Write \"a blog post on how to deploy machine learning models.",
    "instruct_no_caps": "write a blog post on how to deploy machine learning models.",
    "instruct_no_punct": "Write a blog post on how to deploy machine learning models",
    "instruct_one_typo_punctuation": "Write a blog post on how to deploy machine learning models?",
    "instruct_oxford_comma": "Write a blog post on how to deploy, machine learning models.",
    "instruct_parenthetical_aside": "Write a blog post (aim for clarity!) on how to deploy machine learning models.",
    "instruct_random_caps": "wRiTe A bLoG pOsT oN hOw To DePlOy MaChInE lEaRnInG mOdElS.",
    "instruct_sms_abbrev": "W8 a blog post on hw 2 deploy ml models.",
    "instruct_three_typos_punctuation": "Write; a blog post, on how? to deploy machine learning models.",
    "instruct_two_typos_punctuation": "Write, a blog post. on how to deploy machine learning models.",
    "instruct_typo_adjacent": "Write a blig post on how to depoly machibe learing models.",
    "instruct_typo_extra_letter": "Writee a blog post on how to deplooy machine learning models.",
    "instruct_typo_extra_space": "Write a blog post  on how to deploy machine learning models.",
    "instruct_typo_homophone": "Right a bloag posed on how too deply machine learning models.",
    "instruct_typo_missing_letter": "Writ a blog pst on how to deplo machine learning models.",
    "instruct_typo_missing_space": "Writeablog poston howtodeploymachinelearningmodels.",
    "instruct_typo_missing_vowels": "Wrt a blg pst on hw t dply mchn lrng mdls.",
    "instruct_typo_random": "Wriet a blog poost on how to delpoy macine learnig modls.",
    "instruct_typo_repeated_letters": "Writte a blogg poost on how to deplooy macchine learniing modellss.",
    "instruct_typo_swap": "Wrtie a blog post on how to depoly machine learning models.",
    "instruct_typo_swap_and_punctuation": "Wrtie a blog post on how to depoly machine learning models;.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Wrtie a blgo psot on how to delpoy mchainee larennig mdoles?.",
    "instruct_typo_transpose": "Wrtie a blgo psot on how to delpoy mchainee larennig mdoles.",
    "instruct_typo_wrong_letter": "Wrote a blog post on how to deoloy machine learning models.",
    "output": "Deploying machine learning models can seem intimidating at first, but once you break down the process, it’s surprisingly simple. Whether you’re deploying a model on your own production environment or pushing it to an existing deployment system, the steps to do so are straightforward. To make the process easier, we’ve outlined the most important steps for deploying a machine learning model.\n\nFirst, you need to package your model. This means creating a container environment. You can use a platform such as Docker to quickly get a container setup. This will allow you to easily create a reproducible build environment that includes all of your model’s dependencies.\n\nNext, you need to create a deployment environment. Typically, this would be a cloud-based platform such as Amazon Web Services. This allows you to easily provision compute and storage resources without having to manage them manually.\n\nThird, you should set up a continuous integration system. This will allow you to easily test the model in production and get immediate feedback on the model’s performance. You can use Jenkins, Travis CI, or any other Continuous Integration (CI) platform.\n\nFourth, you should test and deploy the model. This is where you can use your CI system to test the model in a production environment. If the tests come back successful, you can deploy the model to production.\n\nFinally, you should monitor the model for performance. This is especially important for machine learning models, as their performance can vary greatly from time to time. You can use a monitoring tool such as Splunk or Datadog to track different metrics such as accuracy rate and inference time.\n\nBy following these steps, you can deploy your machine learning model quickly and efficiently. If you need help with any of these steps, you can always reach out to an experienced team of engineers who can make sure your model is deployed correctly.",
    "prompt_id": "beb69d77-fdbf-4735-9dbd-fa302a4cba54"
  },
  {
    "prompt_count": 476,
    "instruction_original": "Classify the following sentence into one of the following labels: [positive, negative, neutral]",
    "input": "My laptop seems to be slow today.",
    "instruct_all_caps": "CLASSIFY THE FOLLOWING SENTENCE INTO ONE OF THE FOLLOWING LABELS: [POSITIVE, NEGATIVE, NEUTRAL]",
    "instruct_em_dash_break": "Classify the following sentence into one of the following labels—[positive, negative, neutral]",
    "instruct_extra_punct": "Classify the following!!? sentence into one of the following labels: [positive, negative;, neutral].",
    "instruct_hashtags": "Classify the following sentence into one of the following labels: [positive, negative, neutral] #sentimentanalysis #classify",
    "instruct_inline_ad": "Classify the following sentence (Shop Now!) into one of the following labels: [positive, negative, neutral]",
    "instruct_inline_url": "Classify the following sentence (find more at example.com) into one of the following labels: [positive, negative, neutral]",
    "instruct_interrobang": "Classify the following sentence into one of the following labels: [positive, negative, neutral]‽",
    "instruct_key_smash": "Classify the following sentence into one of the following labels: [positive, negative, neutral] jjjkklll;",
    "instruct_leet_speak": "cL4$$IFY 7h3 f0LL0w1n9 $3n73nc3 1n70 0n3 0f 7h3 f0LL0w1n9 L4b3L$: [p0$171v3, n39471v3, n3u7r4L]",
    "instruct_misplaced_commas": "Classify the, following sentence, into, one of, the, following, labels: [,positive, negative, neutral,]",
    "instruct_missing_bracket": "Classify the following sentence into one of the following labels: [positive, negative, neutral",
    "instruct_missing_bracket_and_quote": "Classify the following sentence into one of the following labels: [\"positive\", \"negative\", \"neutral",
    "instruct_missing_quote": "Classify the following sentence into one of the following labels: [\"positive\", \"negative\", \"neutral]",
    "instruct_no_caps": "classify the following sentence into one of the following labels: [positive, negative, neutral]",
    "instruct_no_punct": "Classify the following sentence into one of the following labels [positive negative neutral]",
    "instruct_one_typo_punctuation": "Classify the following sentence into one of the following labels: [positive, negative, neutral].",
    "instruct_oxford_comma": "Classify the following sentence into one of the following labels: [positive, negative, and neutral]",
    "instruct_parenthetical_aside": "Classify the following sentence (as you should) into one of the following labels: [positive, negative, neutral]",
    "instruct_random_caps": "ClAsSiFy tHe fOlLoWiNg sEnTeNcE iNtO oNe Of tHe fOlLoWiNg lAbElS: [PoSiTiVe, NeGaTiVe, NeUtRaL]",
    "instruct_sms_abbrev": "Clsfy th folwng sntnc n2 1 of th folwng lbls: [pos, neg, neutr]",
    "instruct_three_typos_punctuation": "Classify the following sentence into one of the following labels: [positive, negative, neutral]?!;",
    "instruct_two_typos_punctuation": "Classify the following sentence into one of the following labels: [positive, negative, neutral]!?",
    "instruct_typo_adjacent": "Cladsify the following sentence into one of the following labels: [positive, negative, neutral]",
    "instruct_typo_extra_letter": "Classiffy the following sentence into one of the following labels: [positive, negative, neutral]",
    "instruct_typo_extra_space": "Classify the following sentence into one of the following labels: [positive, negative, neutral] ",
    "instruct_typo_homophone": "Classify the following sentence too one of the following labels: [positive, negative, neutral]",
    "instruct_typo_missing_letter": "Classify the folowing sentence into one of the following labels: [positive, negative, neutral]",
    "instruct_typo_missing_space": "Classifythe following sentence into one of the following labels: [positive, negative, neutral]",
    "instruct_typo_missing_vowels": "Clssfy th fllwng sntnc nt n f th fllwng lbls: [pstv, ngtv, ntrl]",
    "instruct_typo_random": "Clasify the foloiwng sentenxe into one of the folowig labxls: [psitive, neagtive, nuetral]",
    "instruct_typo_repeated_letters": "Classify the following sentence into one of the followingg labels: [positive, negative, neutral]",
    "instruct_typo_swap": "Clsasify the following sentence into one of the following labels: [positive, negative, neutral]",
    "instruct_typo_swap_and_punctuation": "Clsasify the following sentence into one of the following labels: [positive, negative, neutral]?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Clsasify hte following sentence into one of the following labels: [positive, negative, neutral]!",
    "instruct_typo_transpose": "Calssify the following sentence into one of the following labels: [positive, negative, neutral]",
    "instruct_typo_wrong_letter": "Classify the fpllowing sentence into one of the following labels: [positive, negative, neutral]",
    "output": "Neutral",
    "prompt_id": "0c41c5ab-fed8-450a-af11-76094da0045e"
  },
  {
    "prompt_count": 477,
    "instruction_original": "Generate a list of five elements for a grocery shopping list",
    "input": "",
    "instruct_all_caps": "GENERATE A LIST OF FIVE ELEMENTS FOR A GROCERY SHOPPING LIST",
    "instruct_em_dash_break": "Generate a list of five elements—for a grocery shopping list",
    "instruct_extra_punct": "Generate a list... of five elements?! for a grocery shopping list!!!",
    "instruct_hashtags": "Generate a list of five elements for a grocery shopping list #shoppinglist #fiveitems #grocerytime",
    "instruct_inline_ad": "Generate a list of five elements for a grocery shopping list. Shop smarter with our app!",
    "instruct_inline_url": "Generate a list of five elements for a grocery shopping list. Find tips at https://example.com.",
    "instruct_interrobang": "Generate a list of five elements for a grocery shopping list!?)",
    "instruct_key_smash": "Generate a list of five elements for a grocery shopping list dsakjfl;asdkjf",
    "instruct_leet_speak": "G3n3r473 4 l157 0f f1v3 3l3m3n75 f0r 4 gr0c3ry 5h0pp1n9 l157",
    "instruct_misplaced_commas": "Generate, a list, of five, elements for, a grocery shopping, list",
    "instruct_missing_bracket": "Generate a list [of five elements for a grocery shopping list",
    "instruct_missing_bracket_and_quote": "Generate a list of five elements for a grocery shopping list).",
    "instruct_missing_quote": "Generate a list of five elements for a grocery shopping list",
    "instruct_no_caps": "generate a list of five elements for a grocery shopping list",
    "instruct_no_punct": "Generate a list of five elements for a grocery shopping list",
    "instruct_one_typo_punctuation": "Generate a list of five elements for a grocery shopping list.",
    "instruct_oxford_comma": "Generate a list containing five items: milk, eggs, and bread for a grocery shopping list.",
    "instruct_parenthetical_aside": "Generate a list of five elements (you know, for shopping) for a grocery shopping list",
    "instruct_random_caps": "gEnErAtE a LiSt Of FiVe ElEmEnTs FoR a GrOcErY sHoPpInG lIsT",
    "instruct_sms_abbrev": "Gen a list of 5 ele 4 grcry list",
    "instruct_three_typos_punctuation": "Generate a list of five elements for a grocery shopping list?!?",
    "instruct_two_typos_punctuation": "Generate a list of five elements for a grocery shopping list?!",
    "instruct_typo_adjacent": "Generate a lust of fove elements for a grocery shopping list",
    "instruct_typo_extra_letter": "Generate a listt of five elements for a grocery shopping list",
    "instruct_typo_extra_space": "Generate a list of five elements for a grocery shopping list",
    "instruct_typo_homophone": "Generate a list of five elements fore a grocery shopping list",
    "instruct_typo_missing_letter": "Generate a list of fiv elements for a grocery shopping list",
    "instruct_typo_missing_space": "Generatealistoffiveelementsforagroceryshoppinglist",
    "instruct_typo_missing_vowels": "Gnrt a lst of fv elmnts fr a grcry shppng lst",
    "instruct_typo_random": "Generate a lsit of five elements for a grocery shopping list",
    "instruct_typo_repeated_letters": "Generaate a lisst of fivve elements for a grocery shoppping list",
    "instruct_typo_swap": "Gernetae a list of fvie elements for a grocery shopping list",
    "instruct_typo_swap_and_punctuation": "Gernetae a list of fvie elements for a grocery shopping list.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Gerneate a lsit of fvie elemets for a grocery shopping list?!",
    "instruct_typo_transpose": "Gerneate a lsit of five elemets for a grocery shopping list",
    "instruct_typo_wrong_letter": "Generate a list of five elements for a grovery shopping list",
    "output": "1. Eggs\n2. Milk\n3. Bread\n4. Cheese\n5. Bananas",
    "prompt_id": "62433d19-61af-480a-9cf5-285b97e99120"
  },
  {
    "prompt_count": 478,
    "instruction_original": "Create a dialogue between a customer and a flight attendant for a plane ride",
    "input": "",
    "instruct_all_caps": "CREATE A DIALOGUE BETWEEN A CUSTOMER AND A FLIGHT ATTENDANT FOR A PLANE RIDE",
    "instruct_em_dash_break": "Create a dialogue—between a customer and a flight attendant—for a plane ride.",
    "instruct_extra_punct": "Create a dialogue, between a customer... and a flight attendant? for a plane ride!",
    "instruct_hashtags": "Create a dialogue between a customer and a flight attendant for a plane ride #Dialogue #Plane #Travel",
    "instruct_inline_ad": "Create a dialogue between a customer and a flight attendant for a plane ride. Check out our amazing in-flight service!",
    "instruct_inline_url": "Create a dialogue between a customer and a flight attendant for a plane ride. More info at example.com.",
    "instruct_interrobang": "Create a dialogue between a customer and a flight attendant for a plane ride?!",
    "instruct_key_smash": "Create a dialogue between a customer and a flight attendant for a plane ride asdfjkl;",
    "instruct_leet_speak": "Cr3a73 a d1al0gu3 b37w33n a cu570m3r 4nd a fl1gh7 a773nd4n7 f0r a pl4n3 r1d3",
    "instruct_misplaced_commas": "Create, a dialogue, between a, customer and, a flight, attendant for a, plane ride.",
    "instruct_missing_bracket": "Create a dialogue [between a customer and a flight attendant for a plane ride.",
    "instruct_missing_bracket_and_quote": "'Create a dialogue [between a customer and a flight attendant for a plane ride.",
    "instruct_missing_quote": "'Create a dialogue between a customer and a flight attendant for a plane ride.",
    "instruct_no_caps": "create a dialogue between a customer and a flight attendant for a plane ride",
    "instruct_no_punct": "Create a dialogue between a customer and a flight attendant for a plane ride",
    "instruct_one_typo_punctuation": "Create a dialogue between a customer and a flight attendant for a plane ride?",
    "instruct_oxford_comma": "Create a dialogue between a customer, and a flight attendant for a plane ride.",
    "instruct_parenthetical_aside": "Create a dialogue (maybe a short one) between a customer and a flight attendant for a plane ride.",
    "instruct_random_caps": "cReAtE a DiAlOgUe BeTwEeN a CuStOmEr AnD a FlIgHt AtTeNdAnT fOr A pLaNe RiDe.",
    "instruct_sms_abbrev": "Crea8 a dialog btwn a cstmr & a flt atndt 4 a pln ride.",
    "instruct_three_typos_punctuation": "Create a dialogue between a customer and a flight attendant for a plane ride.!?",
    "instruct_two_typos_punctuation": "Create a dialogue between a customer and a flight attendant for a plane ride?!",
    "instruct_typo_adjacent": "Vreate a dialkgue between a custoner and a flighg attenlant for a plang rige.",
    "instruct_typo_extra_letter": "Creatte a diialogue betweeen a customer and a flighht attendaant for a plane riide.",
    "instruct_typo_extra_space": "Cre ate a dialogue between a custo mer and a flight atten dant for a plane ride.",
    "instruct_typo_homophone": "Creat a dialog between a customer and a flight attendant for a plane ride.",
    "instruct_typo_missing_letter": "Creat a diale betwen a customr and a fligh attenda for a plan ride.",
    "instruct_typo_missing_space": "Createadialoguebetweenacustomerandaflightattendantforaplaneride.",
    "instruct_typo_missing_vowels": "Crt a dlg btwn a cstmr nd a flght ttndt fr a pln rd.",
    "instruct_typo_random": "Creae ate diadlogue beween acustmoer and af ligtt atten dant for a panle rdies.",
    "instruct_typo_repeated_letters": "Creataee a dialoogue betweeen a customerr and a flighht attendaant forr a planee riidee.",
    "instruct_typo_swap": "Cerate a dailogue bewteen a custmoer and a flgiht atendnat for a palne ride.",
    "instruct_typo_swap_and_punctuation": "Cerate a dailogue bewteen a custmoer and a flgiht atendnat for a palne ride?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Cerate a dialouge bewteen a custmoer and a flgiht atendnat for a palne ride.!",
    "instruct_typo_transpose": "Cerate a dialouge betwen a customre and a flgiht atetndant for a plan rdie.",
    "instruct_typo_wrong_letter": "Creqte a dialague betwern a custoner and a flighg attenlant for a plang rige.",
    "output": "Customer: Hi, I would like to inquire about the snacks available on the flight. \n\nFlight Attendant: Of course! We have a selection of snacks available including chips, crackers, and candy bars. Would you like to purchase any snacks?\n\nCustomer: Yes, I would like to purchase a snack. Do you have any healthy options?\n\nFlight Attendant: Yes, we offer a variety of healthy options such as yogurt, trail mix, and fruit. Would you like to choose any of those? \n\nCustomer: Yes, I'd like to purchase a yogurt. How much does it cost?\n\nFlight Attendant: The yogurt costs $3. Would you like to purchase that? \n\nCustomer: Yes, I'd like to purchase the yogurt. Thank you!\n\nFlight Attendant: You're welcome, here's your yogurt and have a great flight!",
    "prompt_id": "eed306ea-ecda-412f-8f6f-adc048b4b4e9"
  },
  {
    "prompt_count": 479,
    "instruction_original": "Generate a design specification for the following product",
    "input": "Product: Coffee maker",
    "instruct_all_caps": "GENERATE A DESIGN SPECIFICATION FOR THE FOLLOWING PRODUCT",
    "instruct_em_dash_break": "Generate a design specification—for the following product",
    "instruct_extra_punct": "Generate a design specification for the following product...!!!",
    "instruct_hashtags": "Generate a design specification for the following product #design #product",
    "instruct_inline_ad": "Generate a design specification for the following product. Sponsored by Acme Corp!",
    "instruct_inline_url": "Generate a design specification for the following product. Learn more at example.com",
    "instruct_interrobang": "Generate a design specification for the following product!?",
    "instruct_key_smash": "Generate a design specification for the following product fdhgjksd",
    "instruct_leet_speak": "G3n3r473 4 d351gn 5p3c1f1c4710n f0r 7h3 f0ll0w1ng pr0duc7",
    "instruct_misplaced_commas": "Generate, a design specification, for the following, product.",
    "instruct_missing_bracket": "[Generate a design specification for the following product",
    "instruct_missing_bracket_and_quote": "\"[Generate a design specification for the following product",
    "instruct_missing_quote": "\"Generate a design specification for the following product",
    "instruct_no_caps": "generate a design specification for the following product",
    "instruct_no_punct": "Generate a design specification for the following product",
    "instruct_one_typo_punctuation": "Generate a design specification for the following product.",
    "instruct_oxford_comma": "Generate a design specification for the following product, documentation, and manual.",
    "instruct_parenthetical_aside": "Generate a design specification (a full technical write-up) for the following product",
    "instruct_random_caps": "gENeRatE a DEsIgN spEcifICAtIoN FoR thE fOLlowINg prODUCt",
    "instruct_sms_abbrev": "Gen a dsgn spec 4 da followin prdct",
    "instruct_three_typos_punctuation": "Generate a design specification for the following product...?!?",
    "instruct_two_typos_punctuation": "Generate a design specification for the following product?!",
    "instruct_typo_adjacent": "Generate a desigN specifiaction for the following product",
    "instruct_typo_extra_letter": "Generatte a design specification for the following product",
    "instruct_typo_extra_space": "Generate a design specification for the following  product",
    "instruct_typo_homophone": "Generate a design specification four the following product",
    "instruct_typo_missing_letter": "Generate a dsign specification for the following product",
    "instruct_typo_missing_space": "Generateadesign specification for the following product",
    "instruct_typo_missing_vowels": "Gnr8 a dsgn spcfctn fr th fllwng prdct",
    "instruct_typo_random": "Generate a design specificatiob for the following product",
    "instruct_typo_repeated_letters": "Generate a design specification forr the following product",
    "instruct_typo_swap": "Gnerate a design specification for the following product",
    "instruct_typo_swap_and_punctuation": "Generate a design specifciation! for the following product",
    "instruct_typo_swap_and_transpose_and_punctuation": "Generate a design specifiaction!? for the following product",
    "instruct_typo_transpose": "Generate a desgin specifiaction for the following product",
    "instruct_typo_wrong_letter": "Generate a design specifization for the following product",
    "output": "This coffee maker should be able to brew coffee from ground beans or pre-packaged coffee pods. It should have adjustable settings for cup sizes, brew strength, and temperatures. It should feature auto-shutoff, a digital timer, and an adjustable carafe. It should be constructed of stainless steel for easy cleaning and durability.",
    "prompt_id": "2f58e65a-cd3d-43af-8fff-a211d5b7f254"
  },
  {
    "prompt_count": 480,
    "instruction_original": "Evaluate the following statement",
    "input": "AI is the new electricity.",
    "instruct_all_caps": "EVALUATE THE FOLLOWING STATEMENT",
    "instruct_em_dash_break": "Evaluate—the following statement—",
    "instruct_extra_punct": "Evaluate the following statement...!!!!???",
    "instruct_hashtags": "Evaluate the following statement #evaluate #statement",
    "instruct_inline_ad": "Evaluate the following statement click here!",
    "instruct_inline_url": "Evaluate the following statement visit example.com",
    "instruct_interrobang": "Evaluate the following statement‽",
    "instruct_key_smash": "Evaluate the following statement asdfghjkl",
    "instruct_leet_speak": "3v4lu473 7h3 f0ll0w1ng 57473m3n7",
    "instruct_misplaced_commas": "Evaluate, the, following, statement,",
    "instruct_missing_bracket": "Evaluate the following statement]",
    "instruct_missing_bracket_and_quote": "\"Evaluate the following statement]",
    "instruct_missing_quote": "\"Evaluate the following statement",
    "instruct_no_caps": "evaluate the following statement",
    "instruct_no_punct": "Evaluate the following statement",
    "instruct_one_typo_punctuation": "Evaluate the following statement,",
    "instruct_oxford_comma": "Evaluate the following statement,",
    "instruct_parenthetical_aside": "(Evaluate the following statement)",
    "instruct_random_caps": "EvAlUatE tHe fOllOwInG sTaTemEnt",
    "instruct_sms_abbrev": "Evl8 the fllwng stmt",
    "instruct_three_typos_punctuation": "Evaluate the following statement...?!",
    "instruct_two_typos_punctuation": "Evaluate the following statement!!",
    "instruct_typo_adjacent": "Evakuate the fplkowing statemebt",
    "instruct_typo_extra_letter": "Evaluatte the followingg statemennt",
    "instruct_typo_extra_space": "Evaluate the  following  statement",
    "instruct_typo_homophone": "Eval uate the following state meant",
    "instruct_typo_missing_letter": "Evaluat the followin statment",
    "instruct_typo_missing_space": "Evaluatethefollowingstatement",
    "instruct_typo_missing_vowels": "Evalte the fllwng stmt",
    "instruct_typo_random": "Evaluaee the foowing staement",
    "instruct_typo_repeated_letters": "Evaluaate thee follloowwingg statemennt",
    "instruct_typo_swap": "Evalatue the follwoing statemnet",
    "instruct_typo_swap_and_punctuation": "Evalatue the follwoing statemnet?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Evaualte the folowing statemetn,!",
    "instruct_typo_transpose": "Evaualte the folowing statemetn",
    "instruct_typo_wrong_letter": "Evaluane the following statemint",
    "output": "This statement is largely accurate. Just as electricity revolutionized industry in the 19th and 20th centuries, AI has the potential to revolutionize the way businesses operate in the 21st century. AI can automate processes and enable businesses to optimize operations, allowing them to reach higher levels of efficiency and productivity.",
    "prompt_id": "e61a718a-fefe-4d53-963f-b2be824e96e2"
  },
  {
    "prompt_count": 481,
    "instruction_original": "Compose a simple melody for the following lyrics.",
    "input": "\"I can't find the words to say, but I'm feeling OK\"",
    "instruct_all_caps": "COMPOSE A SIMPLE MELODY FOR THE FOLLOWING LYRICS.",
    "instruct_em_dash_break": "Compose a simple melody—for the following lyrics.",
    "instruct_extra_punct": "Compose a simple melody for the following lyrics...??!",
    "instruct_hashtags": "Compose a simple melody for the following lyrics. #music #melody #lyrics #compose",
    "instruct_inline_ad": "Compose a simple melody for the following lyrics. Download our app!",
    "instruct_inline_url": "Compose a simple melody for the following lyrics. Check out example.com",
    "instruct_interrobang": "Compose a simple melody for the following lyrics‽",
    "instruct_key_smash": "Compose a simple melody for the following lyrics. lkjhgfdsa;",
    "instruct_leet_speak": "C0mp053 @ 51mpl3 m3l0dy f0r th3 f0ll0w1ng lyryc5.",
    "instruct_misplaced_commas": "Compose, a simple, melody, for the following, lyrics.",
    "instruct_missing_bracket": "Compose a simple melody for the following lyrics [",
    "instruct_missing_bracket_and_quote": "[Compose a simple melody for the following lyrics",
    "instruct_missing_quote": "\"Compose a simple melody for the following lyrics",
    "instruct_no_caps": "compose a simple melody for the following lyrics.",
    "instruct_no_punct": "Compose a simple melody for the following lyrics",
    "instruct_one_typo_punctuation": "Compose a simple melody for the following lyrics,",
    "instruct_oxford_comma": "Compose a simple melody, for the following lyrics.",
    "instruct_parenthetical_aside": "Compose a simple melody (a nice one, preferably) for the following lyrics.",
    "instruct_random_caps": "cOMPoSe a SImpLE mELoDY foR tHe fOlLoWinG LyRicS.",
    "instruct_sms_abbrev": "Compose a simple melody 4 the folowin lyrix.",
    "instruct_three_typos_punctuation": "Compose a simple melody for the following lyrics.?!",
    "instruct_two_typos_punctuation": "Compose a simple melody for the following lyrics;?",
    "instruct_typo_adjacent": "Cipmpse a simole melidy fir the fplliwing lyri cs.",
    "instruct_typo_extra_letter": "Composse a siimple meloddy for the followiing lyriics.",
    "instruct_typo_extra_space": "Compose a  simple  melody  for  the  following  lyrics.",
    "instruct_typo_homophone": "Compose a simple mellowdy for the following lyrics.",
    "instruct_typo_missing_letter": "Compse a smple meldy for the folowing lrics.",
    "instruct_typo_missing_space": "Composeasimplemelodyforthefollowinglyrics.",
    "instruct_typo_missing_vowels": "Cmps a smpl mldy fr th fllwng lrcs.",
    "instruct_typo_random": "Cimpose a silple mlody fir the fllowing lytics.",
    "instruct_typo_repeated_letters": "CCompoose a simpple mellooody for the follloowing lyriiiics.",
    "instruct_typo_swap": "Cmoopse a smiple mlody fro the fllowing lyrcis.",
    "instruct_typo_swap_and_punctuation": "Cmoopse a smiple mlody fro the fllowing lyrcis!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Cmoopse a smiple meoldy fro the fllowing lryics?",
    "instruct_typo_transpose": "Copmose a smiple meoldy for the fllowing lryics.",
    "instruct_typo_wrong_letter": "Compose a simple melony for the fpllowing lyrixs.",
    "output": "D-C-B-A-D G-A-G-F-E-D D-C-B-A-D E-G-A-G.",
    "prompt_id": "a9b3c53a-3dc2-420d-8246-180d794df4bf"
  },
  {
    "prompt_count": 482,
    "instruction_original": "Suggest an alternative to the following sentence.",
    "input": "The cat was walking around the house",
    "instruct_all_caps": "SUGGEST AN ALTERNATIVE TO THE FOLLOWING SENTENCE.",
    "instruct_em_dash_break": "Suggest an alternative—to the following sentence.",
    "instruct_extra_punct": "Suggest!!! an alternative?? to the following sentence...",
    "instruct_hashtags": "Suggest an alternative to the following sentence. #rewrite #sentence #alternative",
    "instruct_inline_ad": "Suggest an alternative (Click here for a better sentence!) to the following sentence.",
    "instruct_inline_url": "Suggest an alternative (visit example.com) to the following sentence.",
    "instruct_interrobang": "Suggest an alternative to the following sentence‽",
    "instruct_key_smash": "Suggest an alternative to the following sentence. asdfjkl;qweruiopzxcvbnm,./",
    "instruct_leet_speak": "5ugg357 an a173rn471v3 70 7h3 f0110w1n9 53n73nc3.",
    "instruct_misplaced_commas": "Suggest, an alternative, to the, following, sentence.",
    "instruct_missing_bracket": "[Suggest an alternative to the following sentence.",
    "instruct_missing_bracket_and_quote": "[\"Suggest an alternative to the following sentence.",
    "instruct_missing_quote": "\"Suggest an alternative to the following sentence.",
    "instruct_no_caps": "suggest an alternative to the following sentence.",
    "instruct_no_punct": "Suggest an alternative to the following sentence",
    "instruct_one_typo_punctuation": "Suggest an alternative to the following sentence?",
    "instruct_oxford_comma": "Suggest an alternative to the following sentence.",
    "instruct_parenthetical_aside": "Suggest an alternative (perhaps a rephrasing) to the following sentence.",
    "instruct_random_caps": "sUgGeSt aN aLtErNaTiVe tO tHe FoLlOwInG sEnTeNcE.",
    "instruct_sms_abbrev": "Sggst an alt 2 d folowng sntnc.",
    "instruct_three_typos_punctuation": "Suggest an alternative to the following sentence,,,",
    "instruct_two_typos_punctuation": "Suggest an alternative to the following sentence..",
    "instruct_typo_adjacent": "Syggest an akternative to the fpllowing sewtebce.",
    "instruct_typo_extra_letter": "Suggestt an alternatve to the followingg sentence.",
    "instruct_typo_extra_space": "Suggest an alternative to the following sentence .",
    "instruct_typo_homophone": "Suggest an alterntive to the following sentense.",
    "instruct_typo_missing_letter": "Sugest an alternatve to the following setence.",
    "instruct_typo_missing_space": "Suggestanalternativetothefollowingsentence.",
    "instruct_typo_missing_vowels": "Sggst n ltrntv t th fllwng sntnc.",
    "instruct_typo_random": "Suggesst an altrnative too th fllowing sntence.",
    "instruct_typo_repeated_letters": "Suggggest an alternatttttive to the followwwing sentece.",
    "instruct_typo_swap": "Sguegst an altrenative to the folliowng snetecne.",
    "instruct_typo_swap_and_punctuation": "Sguegst an altrenative to the folliowng snetecne.!?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Suggset an atlerantiev to the folowing setnence?!? ",
    "instruct_typo_transpose": "Suggset an atlerantiev to the folowing setnence.",
    "instruct_typo_wrong_letter": "Suggesy an alternarive to the following sentece.",
    "output": "The feline was roaming around the abode.",
    "prompt_id": "95acaa28-b632-413e-8971-e4f9bd807d4d"
  },
  {
    "prompt_count": 483,
    "instruction_original": "Explain what a decision tree is.",
    "input": "",
    "instruct_all_caps": "EXPLAIN WHAT A DECISION TREE IS.",
    "instruct_em_dash_break": "Explain what—a decision tree—is.",
    "instruct_extra_punct": "Explain! what?? a decision tree is?!?!",
    "instruct_hashtags": "Explain what a decision tree is. #DecisionTree #AI #ML",
    "instruct_inline_ad": "Explain what a decision tree is. Try our new app!",
    "instruct_inline_url": "Explain what a decision tree is. Visit example.com/decisions",
    "instruct_interrobang": "Explain what a decision tree is!?",
    "instruct_key_smash": "Explain what a decision tree is. lkhjgfdsapoiuytrewqzxcvbnm",
    "instruct_leet_speak": "3xpl41n wh47 4 d3c1510n 7r33 15.",
    "instruct_misplaced_commas": "Explain what a, decision, tree is.",
    "instruct_missing_bracket": "Explain what a decision tree is.",
    "instruct_missing_bracket_and_quote": "Explain what a decision tree is.",
    "instruct_missing_quote": "Explain what a decision tree is.",
    "instruct_no_caps": "explain what a decision tree is.",
    "instruct_no_punct": "Explain what a decision tree is",
    "instruct_one_typo_punctuation": "Explain what a decision tree is?",
    "instruct_oxford_comma": "Explain what a decision tree is.",
    "instruct_parenthetical_aside": "Explain what a decision tree is (in simple terms).",
    "instruct_random_caps": "eXpLaIn WhAt A dEcIsIoN tReE iS.",
    "instruct_sms_abbrev": "Xpln wht a dcsn tre iz.",
    "instruct_three_typos_punctuation": "Explain? what, a decision tree is;.",
    "instruct_two_typos_punctuation": "Explain; what a decision tree is?.",
    "instruct_typo_adjacent": "Exolain what a ddcision trww is.",
    "instruct_typo_extra_letter": "Explain whatta a decision tree is.",
    "instruct_typo_extra_space": "Explain what a deci sion tree is.",
    "instruct_typo_homophone": "Explain watt a decision tree is.",
    "instruct_typo_missing_letter": "Explin what a decision tree is.",
    "instruct_typo_missing_space": "Explainwhata decision tree is.",
    "instruct_typo_missing_vowels": "Xpln wht a dcsn tr s.",
    "instruct_typo_random": "Exlpain whar a dicision trwee is.",
    "instruct_typo_repeated_letters": "Expplain whaat a decisioon treee is.",
    "instruct_typo_swap": "Exlpain what a decisoin tree is.",
    "instruct_typo_swap_and_punctuation": "Exlpain what a decisoin tree is?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Exlpian whar a decisoin tree is?.",
    "instruct_typo_transpose": "Epxlain what a deicsion tree is.",
    "instruct_typo_wrong_letter": "Exqlain what a decisioj tree is.",
    "output": "A decision tree is a graphical representation of possible solutions to a problem, based on certain conditions. It is a tool used to help people choose between multiple options by creating an organized visual map of the decision-making process. The tree branches out from a single root node to one or more end nodes, each containing a potential decision or outcome. Each node in the tree is an intersection in the branches, and these nodes represent a decision point. The branches from the nodes represent the possible outcomes that can happen based on a given decision, and the leaves signify the end of the tree. The decision tree is used to evaluate and predict outcomes in order to make informed decisions.",
    "prompt_id": "71401f0f-6af7-4bbd-9428-815857cbb698"
  },
  {
    "prompt_count": 484,
    "instruction_original": "Design a function to count the number of unique characters in a string.",
    "input": "string = “Butterflies”",
    "instruct_all_caps": "DESIGN A FUNCTION TO COUNT THE NUMBER OF UNIQUE CHARACTERS IN A STRING.",
    "instruct_em_dash_break": "Design a function to count the number of unique characters—in a string.",
    "instruct_extra_punct": "Design a function to count the number of unique characters in a string...!!!???",
    "instruct_hashtags": "#Design #function #count #unique #characters #string #programming",
    "instruct_inline_ad": "Design a function to count the number of unique characters in a string. Get the best deals on programming tools at AdService.com!",
    "instruct_inline_url": "Design a function to count the number of unique characters in a string. More info at example.com/unique_chars",
    "instruct_interrobang": "Design a function to count the number of unique characters in a string‽",
    "instruct_key_smash": "Design a function to count the number of unique characters in a string asdfghjkl.",
    "instruct_leet_speak": "D3$1gn a phunc710n 70 c0un7 7h3 numb3r 0f un1qu3 ch4r4c73r$ 1n a $7r1ng.",
    "instruct_misplaced_commas": "Design, a function, to count, the number, of unique, characters, in, a string.",
    "instruct_missing_bracket": "Design a function [to count the number of unique characters in a string.",
    "instruct_missing_bracket_and_quote": "Design a function ['to count the number of unique characters in a string.",
    "instruct_missing_quote": "Design a function 'to count the number of unique characters in a string.",
    "instruct_no_caps": "design a function to count the number of unique characters in a string.",
    "instruct_no_punct": "Design a function to count the number of unique characters in a string",
    "instruct_one_typo_punctuation": "Design a function to count the number of unique characters in a string;",
    "instruct_oxford_comma": "Design a function to count the number of unique symbols, letters, and numbers in a string.",
    "instruct_parenthetical_aside": "Design a function to count the number of unique characters (this should be simple) in a string.",
    "instruct_random_caps": "DeSiGn a FuNcTiOn To CoUnT ThE nUmBeR Of UnIqUe ChArAcTeRs In A StRiNg.",
    "instruct_sms_abbrev": "Dsgn a fnctn 2 cnt the num unique chars in a str.",
    "instruct_three_typos_punctuation": "Design a function to count the number of unique characters in a string;;;",
    "instruct_two_typos_punctuation": "Design a function to count the number of unique characters in a string;;",
    "instruct_typo_adjacent": "Dezign a functipn to cound the numher of inique characgers in a strinf.",
    "instruct_typo_extra_letter": "Designn a funaction to count the numbere of uniquee characters in a strring.",
    "instruct_typo_extra_space": "Design a function to count the number of unique characters in a string. ",
    "instruct_typo_homophone": "Design a function too count the number of unique characters in a string.",
    "instruct_typo_missing_letter": "Desin a funtion to cunt the numer of unque charcters in a strng.",
    "instruct_typo_missing_space": "Designafunctiontocountthenumberofuniquecharactersinastring.",
    "instruct_typo_missing_vowels": "Dsgn a fnctn t cnt th nmbr f nq chrctrs n a strng.",
    "instruct_typo_random": "Desgn a functin to cuont the numner of unikue characers in a string.",
    "instruct_typo_repeated_letters": "Designn a funnction to ccount the nnumberr of unnique characcters in a strringgg.",
    "instruct_typo_swap": "Deisgn a function ot count the numerb of unique chracters in a trsing.",
    "instruct_typo_swap_and_punctuation": "Deisgn a function to count the numerb of unique chracters in a trsing?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Dsei gn a functoin to count the numer of uinque carhcaters in a strnig.",
    "instruct_typo_transpose": "Dsei gn a functoin to count the numer of uinque carhcaters in a strnig.",
    "instruct_typo_wrong_letter": "Design a functipn to count the nymber of unique chrracters in a string.",
    "output": "def count_unique_chars(string):\n  char_dict = {}\n  for char in string:\n    if char in char_dict:\n      char_dict[char] += 1\n    else:\n      char_dict[char] = 1\n  return len(char_dict)\n\nprint(count_unique_chars(\"Butterflies\"))\n# Output: 9",
    "prompt_id": "40524731-667b-4b6a-8768-0485838815ee"
  },
  {
    "prompt_count": 485,
    "instruction_original": "Suggest a good screen capture tool for Mac.",
    "input": "",
    "instruct_all_caps": "SUGGEST A GOOD SCREEN CAPTURE TOOL FOR MAC.",
    "instruct_em_dash_break": "Suggest a good screen capture—tool for Mac.",
    "instruct_extra_punct": "Suggest... a good! screen capture tool? for Mac.",
    "instruct_hashtags": "Suggest a good screen capture tool for Mac. #screencapture #mac #tool",
    "instruct_inline_ad": "Suggest a good screen capture tool for Mac. Get ScreenRecorder Pro today!",
    "instruct_inline_url": "Suggest a good screen capture tool for Mac. More info at example.com",
    "instruct_interrobang": "Suggest a good screen capture tool for Mac!?",
    "instruct_key_smash": "Suggest a good screen capture tool for Mac. kjhlkjhl",
    "instruct_leet_speak": "5ugg357 a g00d 5cr33n c4p7ur3 700l f0r M4c.",
    "instruct_misplaced_commas": "Suggest, a good screen, capture tool for, Mac.",
    "instruct_missing_bracket": "Suggest a good screen capture tool [for Mac.",
    "instruct_missing_bracket_and_quote": "['Suggest a good screen capture tool for Mac.",
    "instruct_missing_quote": "'Suggest a good screen capture tool for Mac.",
    "instruct_no_caps": "suggest a good screen capture tool for mac.",
    "instruct_no_punct": "Suggest a good screen capture tool for Mac",
    "instruct_one_typo_punctuation": "Suggest a good screen capture tool for Mac?",
    "instruct_oxford_comma": "Suggest a good, simple, and efficient screen capture tool for Mac.",
    "instruct_parenthetical_aside": "Suggest a good screen capture tool (one that works well) for Mac.",
    "instruct_random_caps": "SuGGesT a gOOd sCrEen cAPturE tOOl fOr MAc.",
    "instruct_sms_abbrev": "Suggst gd screen cap tool 4 Mac.",
    "instruct_three_typos_punctuation": "Suggest a good screen capture tool for Mac?!.",
    "instruct_two_typos_punctuation": "Suggest a good screen capture tool for Mac!.",
    "instruct_typo_adjacent": "Suuggest a goof screen capturw tool for Mac.",
    "instruct_typo_extra_letter": "Suggest a good screeen capture tool for Mac.",
    "instruct_typo_extra_space": "Suggest a good screen capture tool  for Mac.",
    "instruct_typo_homophone": "Suggest a good screen capture toole for Mac.",
    "instruct_typo_missing_letter": "Sugges a good screen capture tool for Mac.",
    "instruct_typo_missing_space": "Suggestagood screen capture tool for Mac.",
    "instruct_typo_missing_vowels": "Sggst gd scrn cptr tl fr Mc.",
    "instruct_typo_random": "Suggesz a goos scree capture toil for Mac.",
    "instruct_typo_repeated_letters": "Suggest a goood screen caaapture tool for Mac.",
    "instruct_typo_swap": "Suggest a goos screne capture tool for Mac.",
    "instruct_typo_swap_and_punctuation": "Suggest a goos screne capture tool for Mac!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Sugges a gofod scren capture tool for Mac!",
    "instruct_typo_transpose": "Suggest a gofod sceren capture tool for Mac.",
    "instruct_typo_wrong_letter": "Suggest a goot screen capture tool for Mac.",
    "output": "One of the best screen capture tools for Mac is Skitch. It is easy to use, and has powerful features such as annotations, markup tools, and cloud storage for easy sharing. It also allows for timed screenshots and has a built-in screenshot editor. In addition, you can save screenshots as an image or video file in various formats.",
    "prompt_id": "a55e92b3-1e31-4a97-a569-85e39586753a"
  },
  {
    "prompt_count": 486,
    "instruction_original": "Summarize the main argument of the paper \"A Social Network that Influences Attitudes and Behaviors\"",
    "input": "",
    "instruct_all_caps": "SUMMARIZE THE MAIN ARGUMENT OF THE PAPER \"A SOCIAL NETWORK THAT INFLUENCES ATTITUDES AND BEHAVIORS\"",
    "instruct_em_dash_break": "Summarize the main argument—the core idea—of the paper \"A Social Network that Influences Attitudes and Behaviors\".",
    "instruct_extra_punct": "Summarize... the main, argument, of the paper!!!!? \"A Social Network that Influences Attitudes and Behaviors\"!!!!!",
    "instruct_hashtags": "Summarize the main argument of the paper \"A Social Network that Influences Attitudes and Behaviors\" #SocialNetwork #Attitudes #Behaviors #Research",
    "instruct_inline_ad": "Summarize the main argument of the paper \"A Social Network that Influences Attitudes and Behaviors\" (Shop now for amazing deals!).",
    "instruct_inline_url": "Summarize the main argument of the paper \"A Social Network that Influences Attitudes and Behaviors\" (find more here: http://example.com).",
    "instruct_interrobang": "Summarize the main argument of the paper \"A Social Network that Influences Attitudes and Behaviors\"?!",
    "instruct_key_smash": "Summarize the main argument of the paper \"A Social Network that Influences Attitudes and Behaviors\" lkhjsdfg.",
    "instruct_leet_speak": "5|_|mm4r|z3 +|-|3 m4|n 4rg|_|m3n+ 0f +|-|3 p4p3r \"4 50c|4| |/|3+vv/0r|< +|-|4+ |/|nf|_|3nc35 4++|+|_|d35 4nd 83|-|4\\/|0r5\"",
    "instruct_misplaced_commas": "Summarize, the, main argument of the paper, \"A Social Network, that Influences Attitudes, and Behaviors.\"",
    "instruct_missing_bracket": "Summarize the main argument of the paper \"A Social Network that Influences Attitudes and Behaviors.",
    "instruct_missing_bracket_and_quote": "Summarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors.",
    "instruct_missing_quote": "Summarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors\"",
    "instruct_no_caps": "summarize the main argument of the paper \"a social network that influences attitudes and behaviors\"",
    "instruct_no_punct": "Summarize the main argument of the paper A Social Network that Influences Attitudes and Behaviors",
    "instruct_one_typo_punctuation": "Summarize the main argument of the paper? \"A Social Network that Influences Attitudes and Behaviors\".",
    "instruct_oxford_comma": "Summarize the main argument, of the paper \"A Social Network that Influences Attitudes and Behaviors\".",
    "instruct_parenthetical_aside": "Summarize the main argument (the central point) of the paper \"A Social Network that Influences Attitudes and Behaviors\".",
    "instruct_random_caps": "SuMmArIzE tHe mAiN aRgUmEnT Of tHe PaPeR \"A sOcIaL NeTwOrK ThAt iNfLuEnCeS AtTiTuDeS AnD BeHaViOrS\"",
    "instruct_sms_abbrev": "Smrz the main argmt of the ppr \"A Social Ntwk tht Inflncs Attitds nd Behaviors\".",
    "instruct_three_typos_punctuation": "Summarize; the main, argument, of the paper.. \"A Social Network that Influences Attitudes and Behaviors\"",
    "instruct_two_typos_punctuation": "Summarize the main argument; of the paper? \"A Social Network that Influences Attitudes and Behaviors\".",
    "instruct_typo_adjacent": "Summarize thw main argument of the psper \"A Socixl Network that Influences Attitudes and Benaviors\".",
    "instruct_typo_extra_letter": "Summarize the maiin argument of the papper \"A Social Networrk that Influencess Attitudes and Behaviors\".",
    "instruct_typo_extra_space": "Summarize the main argument of the paper \"A Social Netw ork that Influences Attitudes and Behaviors\".",
    "instruct_typo_homophone": "Summarize tha main argument off the paper \"A Social Network that Influences Attitudes and Behaviors\".",
    "instruct_typo_missing_letter": "Sumarize the main argumnt of the paper \"A Socil Netwrk that Infuences Atitudes and Behaviors\".",
    "instruct_typo_missing_space": "Summarizethe mainargument of thepaper \"A SocialNetworkthat InfluencesAttitudesand Behaviors\".",
    "instruct_typo_missing_vowels": "Smmrz th mn rgmmt f th ppr \"A Scil Ntwrk tht Inflncs Tttds nd Bhvrs\".",
    "instruct_typo_random": "Summarixe thw mian argumnet of tje pper \"A Socila Networq thqat Influnces ATtitudes and Behviors\".",
    "instruct_typo_repeated_letters": "Summarizze the mmain argument of the paperr \"A Sociial Nettwork that Influencess Attitudess and Behaviorrs\".",
    "instruct_typo_swap": "Sumamrize teh mian argyemtn fo teh paepr \"A Socoal Netwrok taht Iunflcnees Atittueds nad Behaivors\".",
    "instruct_typo_swap_and_punctuation": "Sumamrize teh mian argument of the paper? \"A Social Network that Influences Attitudes and Behaviors\".",
    "instruct_typo_swap_and_transpose_and_punctuation": "Sumamrize the argyemtn of the paper; \"A Socail Network that Influences Attitudes and Behaviors\".",
    "instruct_typo_transpose": "Summarzie the mian arguenmt of the paper \"A Scial Network taht Influencees Attituuds and Behaiovrs\".",
    "instruct_typo_wrong_letter": "Sumparize the main argument of the paper \"A Socual Network that Influences Attitudes and Behaziors\".",
    "output": "The paper \"A Social Network that Influences Attitudes and Behaviors\" discusses how online social networks can influence people’s attitudes and behaviors. It suggests that online networks are capable of reaching more people than in-person networks, and that this can result in drastic alteration of attitudes and behaviors on a wider scale. The paper argues that certain individuals within networks can serve as influentials, having an outsize impact on opinions and behaviors of those around them, which has implications for how society functions. The paper further suggests that the study of online networks is a crucial area of research to better understand and predict social change.",
    "prompt_id": "4382a62f-1155-467e-8c5a-99499993b252"
  },
  {
    "prompt_count": 487,
    "instruction_original": "Write a Python function that takes two integers and returns their least common multiple.",
    "input": "",
    "instruct_all_caps": "WRITE A PYTHON FUNCTION THAT TAKES TWO INTEGERS AND RETURNS THEIR LEAST COMMON MULTIPLE.",
    "instruct_em_dash_break": "Write a Python function that takes two integers—and returns—their least common multiple.",
    "instruct_extra_punct": "Write a Python function that takes two integers, and returns their least common multiple...!!!",
    "instruct_hashtags": "Write a Python function that takes two integers and returns their least common multiple. #python #lcm #function #programming",
    "instruct_inline_ad": "Write a Python function (get your free trial of [Product Name] today!) that takes two integers and returns their least common multiple.",
    "instruct_inline_url": "Write a Python function (learn more at example.com) that takes two integers and returns their least common multiple.",
    "instruct_interrobang": "Write a Python function that takes two integers and returns their least common multiple?!",
    "instruct_key_smash": "asdfjkl; qwert yuiop zxcvbnm,./ mn bvcxza lkjhgfds poiuytrewq ;lkjhgfdsa.",
    "instruct_leet_speak": "Wr1t3 a Py7h0n fu|\\|(|i0n th@+ +@k3s 7w0 1|\\|73g3r$ @|\\|d r3+urn$ +h31r l3@$t (0mm0n mu171pl3.",
    "instruct_misplaced_commas": "Write a Python, function that takes, two integers and returns, their least common, multiple.",
    "instruct_missing_bracket": "Write a Python function (that takes two integers and returns their least common multiple.",
    "instruct_missing_bracket_and_quote": "Write a Python function (that takes two integers and 'returns their least common multiple.",
    "instruct_missing_quote": "Write a Python function that 'takes two integers and returns their least common multiple.",
    "instruct_no_caps": "write a python function that takes two integers and returns their least common multiple.",
    "instruct_no_punct": "Write a Python function that takes two integers and returns their least common multiple",
    "instruct_one_typo_punctuation": "Write a Python function that takes two integers and returns their least common multiple?",
    "instruct_oxford_comma": "Write a Python function that takes two integers, and returns their least common multiple.",
    "instruct_parenthetical_aside": "Write a Python function that takes two integers (as input) and returns their least common multiple.",
    "instruct_random_caps": "WrItE a pYtHoN fuNcTiOn tHaT tAkEs tWo iNtEgErS aNd rEtUrNs tHeIr lEaSt cOmMoN mUlTiPlE.",
    "instruct_sms_abbrev": "wrt a pythn fnxn tht tks 2 ints & rtrns thr lst cmn mult.",
    "instruct_three_typos_punctuation": "Write a Python function! that takes two integers? and returns their least common multiple.",
    "instruct_two_typos_punctuation": "Write a Python function, that takes two integers, and returns their least common multiple.",
    "instruct_typo_adjacent": "Writd a Rython gunvtion thst tskes twp ibtegers snd retufns their leqst vommon mulgiple.",
    "instruct_typo_extra_letter": "Wriite a Pythhon functtion thhat taakes twwo inttegers annd retturns thheir leasst commmon multiiple.",
    "instruct_typo_extra_space": "Write a Python function that takes two integers and returns their least common multiple .",
    "instruct_typo_homophone": "Right a Python function that take two integers and returns their least common multiple.",
    "instruct_typo_missing_letter": "Wrie a Pytho fnction that tkes wo integer an reurns heir lest common multip.",
    "instruct_typo_missing_space": "WriteaPythonfunctionthattakestwointegersandreturnstheirleastcommonmultiple.",
    "instruct_typo_missing_vowels": "Wrt a Pythn fnctn tht tks tw ntgrs nd rtrns thr lst cmmmn mltpl.",
    "instruct_typo_random": "Wriye a Ptyhon fnctoin tjat takes tvo intdgers anf rertns thair lesta coomon mutipld.",
    "instruct_typo_repeated_letters": "Writtee a Python funtion that takes twwwo integeers and returnss therr leaaast coommon muultiple.",
    "instruct_typo_swap": "Wirte a Pyhton fucntion taht takes wto ingeters adn reutrns theri lesat cmomon miltiple.",
    "instruct_typo_swap_and_punctuation": "Wirte a Pyhton fucntion, taht takes wto ingeters? adn reutrns theri lesat cmomon miltiple!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Wriet a Ptyhon fnuction! taht teaks two intgeres? and rternus thier lsaet cmomno mltiiple.",
    "instruct_typo_transpose": "Wriet a Ptyhon fnuction taht teaks two intgeres and rternus thier lsaet cmomno mltiiple.",
    "instruct_typo_wrong_letter": "Writw a Python funstion that takes two intebers and returns theie least common multiple.",
    "output": "def lcm(a, b):\n  if a > b:\n    greater = a\n  else:\n    greater = b\n  while(True):\n    if((greater % a == 0) and (greater % b == 0)):\n      lcm = greater\n      break\n    greater += 1\n  return lcm\n\nprint(lcm(15, 18))\n# Output: 90",
    "prompt_id": "85722db3-878d-4838-8e64-bbc2e88fff20"
  },
  {
    "prompt_count": 488,
    "instruction_original": "Rewrite the following paragraph in the active voice",
    "input": "The new policy will be implemented by the employees in the management department.",
    "instruct_all_caps": "REWRITE THE FOLLOWING PARAGRAPH IN THE ACTIVE VOICE",
    "instruct_em_dash_break": "Rewrite the following paragraph—in the active voice",
    "instruct_extra_punct": "Rewrite the following paragraph... in the active voice!!!!",
    "instruct_hashtags": "Rewrite the following paragraph in the active voice #rewrite #activevoice #paragraph",
    "instruct_inline_ad": "Rewrite the following paragraph (limited time offer!) in the active voice",
    "instruct_inline_url": "Rewrite the following paragraph (learn more at example.com) in the active voice",
    "instruct_interrobang": "Rewrite the following paragraph in the active voice?!",
    "instruct_key_smash": "Rewrite the following paragraph in the active voice asdfghjkl;lkjhgfdsa",
    "instruct_leet_speak": "R3wr1t3 th3 f0ll0w1ng p4r4gr4ph 1n th3 4ct1v3 v01c3",
    "instruct_misplaced_commas": "Rewrite, the following paragraph, in the active voice,",
    "instruct_missing_bracket": "[Rewrite the following paragraph in the active voice",
    "instruct_missing_bracket_and_quote": "['Rewrite the following paragraph in the active voice",
    "instruct_missing_quote": "'Rewrite the following paragraph in the active voice",
    "instruct_no_caps": "rewrite the following paragraph in the active voice",
    "instruct_no_punct": "Rewrite the following paragraph in the active voice",
    "instruct_one_typo_punctuation": "Rewrite the following paragraph in the active voice;",
    "instruct_oxford_comma": "Rewrite the following, paragraph in the active voice.",
    "instruct_parenthetical_aside": "Rewrite the following paragraph (the one below) in the active voice",
    "instruct_random_caps": "rEwrIte tHe foLlOwInG pArAgRaPh iN ThE aCtIvE vOiCe",
    "instruct_sms_abbrev": "Rwt the folog prgrf in actv vc",
    "instruct_three_typos_punctuation": "Rewrite the following paragraph: in the active voice.,",
    "instruct_two_typos_punctuation": "Rewrite the following paragraph? in the active voice!",
    "instruct_typo_adjacent": "Rwwrite the following paragraph in the active voice",
    "instruct_typo_extra_letter": "Rewrites the following paragraph in the active voice.",
    "instruct_typo_extra_space": "Rewrite the following paragraph in the active voice.",
    "instruct_typo_homophone": "Rewrite the following paragraph in the active voise",
    "instruct_typo_missing_letter": "Rewrit the folowing paragraph in the active voice.",
    "instruct_typo_missing_space": "Rewritethe following paragraph in the active voice.",
    "instruct_typo_missing_vowels": "Rwrte th fllwng prgrph n th actv vce",
    "instruct_typo_random": "Rewritye the following parqagraph in the activce voice.",
    "instruct_typo_repeated_letters": "Rewrrite the following paragraph in the activee voice",
    "instruct_typo_swap": "Rwerite the following paragraph in the active voice",
    "instruct_typo_swap_and_punctuation": "Rwerite the following paragraph in the active voice!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Rewrtie the folloiwng paragraph in the active voice.?",
    "instruct_typo_transpose": "Rewrtie the folloiwng paragraph in the active voice",
    "instruct_typo_wrong_letter": "Rewrite the follpwing paragraph in the active voice.",
    "output": "The management department employees will implement the new policy.",
    "prompt_id": "59e4b17f-44ec-4fe3-adda-58b91a8d70b6"
  },
  {
    "prompt_count": 489,
    "instruction_original": "Generate three different ways to greet the user.",
    "input": "",
    "instruct_all_caps": "GENERATE THREE DIFFERENT WAYS TO GREET THE USER.",
    "instruct_em_dash_break": "Generate—three different ways—to greet the user.",
    "instruct_extra_punct": "Generate!!! three different ways!!! to greet the user!!!!",
    "instruct_hashtags": "Generate three different ways to greet the user #greetings #ways #user",
    "instruct_inline_ad": "Generate three different ways to greet the user. Visit our sponsor today!",
    "instruct_inline_url": "Generate three different ways to greet the user. More info at example.com",
    "instruct_interrobang": "Generate three different ways to greet the user‽",
    "instruct_key_smash": "Generate three different ways to greet the user asdfjkl;",
    "instruct_leet_speak": "63n3r473 7hr33 d1ff3r3n7 w4y5 70 6r337 7h3 u53r.",
    "instruct_misplaced_commas": "Generate, three different, ways to, greet the, user.",
    "instruct_missing_bracket": "Generate three different ways [to greet the user.",
    "instruct_missing_bracket_and_quote": "Generate three different ways [\"to greet the user.",
    "instruct_missing_quote": "Generate three different ways \"to greet the user.",
    "instruct_no_caps": "generate three different ways to greet the user.",
    "instruct_no_punct": "Generate three different ways to greet the user",
    "instruct_one_typo_punctuation": "Generate three different ways, to greet the user.",
    "instruct_oxford_comma": "Generate three different ways, to greet the user.",
    "instruct_parenthetical_aside": "Generate three different ways (as examples) to greet the user.",
    "instruct_random_caps": "Generate Three DiFferent waYS to Greet tHe User.",
    "instruct_sms_abbrev": "Gen 3 diff ways 2 greet da user.",
    "instruct_three_typos_punctuation": "Generate three different ways, to greet the user??!.",
    "instruct_two_typos_punctuation": "Generate three different ways, to greet the user?.",
    "instruct_typo_adjacent": "Generatr three difcerent ways to hrreet the iser.",
    "instruct_typo_extra_letter": "Gennerate three different ways to greet the userrr.",
    "instruct_typo_extra_space": "Genera te three diff eren t ways to greet the use r.",
    "instruct_typo_homophone": "Generate three different ways to great the user.",
    "instruct_typo_missing_letter": "Generae thre different was to greet the user.",
    "instruct_typo_missing_space": "Generatethreedifferentwaystogreettheuser.",
    "instruct_typo_missing_vowels": "Gnrte thre dffrnt wys t grt th usr.",
    "instruct_typo_random": "Genwrate threo difffrent waya yo greet the use.",
    "instruct_typo_repeated_letters": "Generrate thhree differeent wayss to greet the userr.",
    "instruct_typo_swap": "Gneerate thrree difefrent awys to greet the usre.",
    "instruct_typo_swap_and_punctuation": "Gneerate thare difefrent awys, to greet the usre?.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Genaerte trhee dfifernet wyas, to greet the uesr?.",
    "instruct_typo_transpose": "Genaerte trhee dfifernet wyas to greet the uesr.",
    "instruct_typo_wrong_letter": "Genexate three different ways to greet the uses.",
    "output": "1. Hi there!\n2. Greetings!\n3. Welcome!",
    "prompt_id": "90f1b4fd-dd9e-4daa-9710-1800b1f3fa1d"
  },
  {
    "prompt_count": 490,
    "instruction_original": "Name one way to start a conversation with someone you don't know.",
    "input": "",
    "instruct_all_caps": "NAME ONE WAY TO START A CONVERSATION WITH SOMEONE YOU DON'T KNOW.",
    "instruct_em_dash_break": "Name one way--to start a conversation--with someone you don't know.",
    "instruct_extra_punct": "Name one way to start a conversation with someone you don't know!!!",
    "instruct_hashtags": "Name one way to start a conversation with someone you don't know #conversation #icebreaker",
    "instruct_inline_ad": "Name one way to start a conversation with someone you don't know. Shop now at ConversationStarters.com!",
    "instruct_inline_url": "Name one way to start a conversation with someone you don't know. Learn more at example.com.",
    "instruct_interrobang": "Name one way to start a conversation with someone you don't know!?",
    "instruct_key_smash": "Name one way to start a conversation with someone you don't know. asdfgqwer",
    "instruct_leet_speak": "N4m3 0n3 w4y 70 574r7 4 c0nv3r54710n w17h 50m30n3 y0u d0n'7 kn0w.",
    "instruct_misplaced_commas": "Name, one way, to start a, conversation, with someone you don't, know.",
    "instruct_missing_bracket": "Name one way to start a conversation with someone you don't know (like asking a question.",
    "instruct_missing_bracket_and_quote": "Name one way to start a conversation with someone you don't know \"like asking a question.",
    "instruct_missing_quote": "Name one way to start a conversation with someone you don't know \"ask a question.",
    "instruct_no_caps": "name one way to start a conversation with someone you don't know.",
    "instruct_no_punct": "Name one way to start a conversation with someone you dont know",
    "instruct_one_typo_punctuation": "Name one way to start a conversation with someone you don't know?",
    "instruct_oxford_comma": "Name one way to start a conversation with someone you don't know.",
    "instruct_parenthetical_aside": "Name one way (perhaps offering a compliment) to start a conversation with someone you don't know.",
    "instruct_random_caps": "nAme oNe wAy tO sTaRt a CoNvErSaTiOn WiTh sOmEoNe yOu dOn'T kNoW.",
    "instruct_sms_abbrev": "nm 1 wy 2 strt a cnvrsatn w sum1 u dnt knw.",
    "instruct_three_typos_punctuation": "Name one way, to start a conversation, with someone, you don't know?.",
    "instruct_two_typos_punctuation": "Name one way to start a conversation, with someone you don't know.",
    "instruct_typo_adjacent": "Gane one way to strst a conversagion with sonwonw you don't know.",
    "instruct_typo_extra_letter": "Namee one wayy too startt a conversationn withh someonee you don'tt knoww.",
    "instruct_typo_extra_space": "Name one way to start a conversation with some one you don't know.",
    "instruct_typo_homophone": "Name won way to start a conversation with someone you don't no.",
    "instruct_typo_missing_letter": "Nam one way to star a conversaton with somone you don't know.",
    "instruct_typo_missing_space": "Nameonewaytostartaconversationwithsomeoneyoudon'tknow.",
    "instruct_typo_missing_vowels": "Nm n wy t strt cnnvrsatn wth smn y dn't knw.",
    "instruct_typo_random": "Nane one way t start a conviersatiom woth someon you don't knoq.",
    "instruct_typo_repeated_letters": "Namme one way tto starrt a convversatioon withhh someone you don't knoww.",
    "instruct_typo_swap": "Nmae one way ot strta a converstaion whti smoeone yuo don't know.",
    "instruct_typo_swap_and_punctuation": "Nmae one way ot strta a converstaion whti smoeone yuo don't know?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Nmae one way ot sttar a coversation whti someone you don't know?.",
    "instruct_typo_transpose": "Name one way to sttar a coversation with someone you don't know.",
    "instruct_typo_wrong_letter": "Bame one way to starts a conversgtion with somehne you don't knos.",
    "output": "A great way to start a conversation with someone you don't know is to introduce yourself and ask them questions about themselves. For example, you could say: \"Hi, I'm [Your Name], it's nice to meet you. What do you do for a living?\"",
    "prompt_id": "94ec0495-2c20-4324-aa03-003935fe1385"
  },
  {
    "prompt_count": 491,
    "instruction_original": "Compose a poem about a single color.",
    "input": "",
    "instruct_all_caps": "COMPOSE A POEM ABOUT A SINGLE COLOR.",
    "instruct_em_dash_break": "Compose a poem—about a single color.",
    "instruct_extra_punct": "Compose... a poem! about a single, color???",
    "instruct_hashtags": "Compose a poem about a single color. #Poetry #Color",
    "instruct_inline_ad": "Compose a poem about a single color. (Sponsored: Check out Rainbow Paints!)",
    "instruct_inline_url": "Compose a poem about a single color. Learn more: [URL]",
    "instruct_interrobang": "Compose a poem about a single color!?",
    "instruct_key_smash": "Compose a poem about a single color. jkl;",
    "instruct_leet_speak": "C0mp053 a p03m ab0ut a 51ngl3 c0l0r.",
    "instruct_misplaced_commas": "Compose, a poem, about a, single, color.",
    "instruct_missing_bracket": "Compose a poem about a single color.",
    "instruct_missing_bracket_and_quote": "Compose a poem about a single color.",
    "instruct_missing_quote": "Compose a poem about a single color.",
    "instruct_no_caps": "compose a poem about a single color.",
    "instruct_no_punct": "Compose a poem about a single color",
    "instruct_one_typo_punctuation": "Compose a poem about a single color,",
    "instruct_oxford_comma": "Compose a poem about its primary color, shade, and mood.",
    "instruct_parenthetical_aside": "Compose a poem (make it good!) about a single color.",
    "instruct_random_caps": "CoMpOsE a PoEm AbOuT a SiNgLe CoLoR.",
    "instruct_sms_abbrev": "Cmps a poem abt a sngl clr.",
    "instruct_three_typos_punctuation": "Compose a poem? about a single color.,,",
    "instruct_two_typos_punctuation": "Compose a poem; about a single color,",
    "instruct_typo_adjacent": "Compose a porm about a single cooor.",
    "instruct_typo_extra_letter": "Composse a poerm about a single collor.",
    "instruct_typo_extra_space": "Compose a poem about a single  color.",
    "instruct_typo_homophone": "Compose a poeme about a single color.",
    "instruct_typo_missing_letter": "Compse a pom about a sinle color.",
    "instruct_typo_missing_space": "Composeapoemaboutasinglecolor.",
    "instruct_typo_missing_vowels": "Cmps a pm abt a sngl clr.",
    "instruct_typo_random": "Compse a pome abotu a sinle cloor.",
    "instruct_typo_repeated_letters": "Composse a poeem abouut a singgle colooor.",
    "instruct_typo_swap": "Comopse a peom abotu a silgne cloor.",
    "instruct_typo_swap_and_punctuation": "Comopse a peom abotu a silgne cloor.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Cmopose a pome abotu a snigle cloro?",
    "instruct_typo_transpose": "Cmopose a pome abotu a snigle cloro.",
    "instruct_typo_wrong_letter": "Compase a pyem about a single coler.",
    "output": "The color green, so serene and pleasing.\nIt reminds me why I keep believing.\nThe lush life brings me to feelings of delight\nSeeing the world in all of its light.\nThe rolling hills and the trees so tall\nThe calming presence that they offer to all.\nThe vibrant grass that is sure to please\nThe softness of it I can't help but seize.\nThe evergreens that add to the scene\nBringing serenity and charm unforeseen.\nThe color green carries many memories\nIt is certainly one to keep close to me.",
    "prompt_id": "fccc4a75-b890-404a-a23d-0f2c2a4155ed"
  },
  {
    "prompt_count": 492,
    "instruction_original": "Provide the answer to the equation.",
    "input": "7 + 6",
    "instruct_all_caps": "PROVIDE THE ANSWER TO THE EQUATION.",
    "instruct_em_dash_break": "Provide the answer--to the equation.",
    "instruct_extra_punct": "Provide the answer to the equation!!!",
    "instruct_hashtags": "Provide the answer to the equation. #math #solve",
    "instruct_inline_ad": "Provide the answer to the equation. (Limited time offer!)",
    "instruct_inline_url": "Provide the answer to the equation. (Find out more at example.com)",
    "instruct_interrobang": "Provide the answer to the equation!?",
    "instruct_key_smash": "Provide the answer to the equation. asdfghjkl;",
    "instruct_leet_speak": "Pr0v1d3 th3 4nsw3r t0 th3 3qu4t10n.",
    "instruct_misplaced_commas": "Provide, the answer, to the equation.",
    "instruct_missing_bracket": "Provide the answer [to the equation.",
    "instruct_missing_bracket_and_quote": "Provide the answer \"[to the equation.",
    "instruct_missing_quote": "Provide the answer \"to the equation.",
    "instruct_no_caps": "provide the answer to the equation.",
    "instruct_no_punct": "Provide the answer to the equation",
    "instruct_one_typo_punctuation": "Provide the answer to the equation,",
    "instruct_oxford_comma": "Provide the answer, the solution, and the result to the equation.",
    "instruct_parenthetical_aside": "Provide the answer (the final result) to the equation.",
    "instruct_random_caps": "PrOvIdE tHe AnSwEr To ThE eQuAtIoN.",
    "instruct_sms_abbrev": "Pls provide ansr 2 the eqn.",
    "instruct_three_typos_punctuation": "Provide the answer to the equation...",
    "instruct_two_typos_punctuation": "Provide the answer to the equation.",
    "instruct_typo_adjacent": "Provibe the answer to the equation.",
    "instruct_typo_extra_letter": "Provide the answerr to the equation.",
    "instruct_typo_extra_space": "Provide the answer to the equation .",
    "instruct_typo_homophone": "Provide the anser to the equation.",
    "instruct_typo_missing_letter": "Provide the answr to the equation.",
    "instruct_typo_missing_space": "Providethe answer to the equation.",
    "instruct_typo_missing_vowels": "Prvd th nswr t th qtn.",
    "instruct_typo_random": "Provide the answrr to the equatino.",
    "instruct_typo_repeated_letters": "Provide the ansswer to the equation.",
    "instruct_typo_swap": "Povride the answer to the equation.",
    "instruct_typo_swap_and_punctuation": "Povride the answer to the equation!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Prvoide the answre to the equation.",
    "instruct_typo_transpose": "Prvoide the answer to the equation.",
    "instruct_typo_wrong_letter": "Provide the answer to the equasion.",
    "output": "13",
    "prompt_id": "e492413c-8c76-4446-9d6a-eeecf2b8acd9"
  },
  {
    "prompt_count": 493,
    "instruction_original": "Write a limerick about a holiday.",
    "input": "",
    "instruct_all_caps": "WRITE A LIMERICK ABOUT A HOLIDAY.",
    "instruct_em_dash_break": "Write a limerick—about a holiday.",
    "instruct_extra_punct": "Write a limerick about a holiday!???",
    "instruct_hashtags": "Write a limerick about a holiday #limerick #holiday",
    "instruct_inline_ad": "Write a limerick (visit our site) about a holiday.",
    "instruct_inline_url": "Write a limerick (see example.com) about a holiday.",
    "instruct_interrobang": "Write a limerick about a holiday!?",
    "instruct_key_smash": "Write a limerick about a holiday asdf.",
    "instruct_leet_speak": "Wr1t3 @ l1m3r1ck @b0u7 @ h0l1d@y.",
    "instruct_misplaced_commas": "Write, a limerick, about, a holiday.",
    "instruct_missing_bracket": "[Write a limerick about a holiday.",
    "instruct_missing_bracket_and_quote": "[\"Write a limerick about a holiday.",
    "instruct_missing_quote": "\"Write a limerick about a holiday.",
    "instruct_no_caps": "write a limerick about a holiday.",
    "instruct_no_punct": "Write a limerick about a holiday",
    "instruct_one_typo_punctuation": "Write a limerick about a holiday?",
    "instruct_oxford_comma": "Write a limerick about a holiday.",
    "instruct_parenthetical_aside": "Write a limerick (make it good) about a holiday.",
    "instruct_random_caps": "wRiTe a LiMeRiCk aBoUt a HoLiDaY.",
    "instruct_sms_abbrev": "wrt a limerick abt a holiday.",
    "instruct_three_typos_punctuation": "Write a limerick?! about a holiday...",
    "instruct_two_typos_punctuation": "Write a limerick? about a holiday!",
    "instruct_typo_adjacent": "Writi a lomerick aobuy a holifay.",
    "instruct_typo_extra_letter": "Writtee a limerick abouut a holidaay.",
    "instruct_typo_extra_space": "Write a limerick a bout a holi day.",
    "instruct_typo_homophone": "Right a limerick about a holiday.",
    "instruct_typo_missing_letter": "Writ a limerick abou a holidy.",
    "instruct_typo_missing_space": "Writealimerickaboutaholiday.",
    "instruct_typo_missing_vowels": "Wrt a lmrck abt a hldy.",
    "instruct_typo_random": "Wrute a lumerick aboot a holigay.",
    "instruct_typo_repeated_letters": "Writte a limerick abboout a holiday.",
    "instruct_typo_swap": "Wrtie a lemirick abuot a hlodiay.",
    "instruct_typo_swap_and_punctuation": "Wrtie a lemirick? abuot a hlodiay!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Wrtie a lierick?! abotu a hoidaly...",
    "instruct_typo_transpose": "Wirte a lierick abotu a hoidaly.",
    "instruct_typo_wrong_letter": "Wrate a lumerick aboit a hollfay.",
    "output": "There once was a holiday rare\nWhen people from all around did prepare\nFor a day full of joys\nAnd many wonderful toys\nMerry Christmas and happy Yuletide to share!",
    "prompt_id": "7aa95f9d-bf7f-47a3-8ceb-f9f66b54b275"
  },
  {
    "prompt_count": 494,
    "instruction_original": "Provide a definition of the word \"vacillation\".",
    "input": "",
    "instruct_all_caps": "PROVIDE A DEFINITION OF THE WORD 'VACILLATION'.",
    "instruct_em_dash_break": "Provide a definition—of the word 'vacillation'.",
    "instruct_extra_punct": "Provide... a definition... of the word 'vacillation'!!!!",
    "instruct_hashtags": "Provide a definition of the word 'vacillation'. #definition #words #vacillation",
    "instruct_inline_ad": "Provide a definition of the word 'vacillation'. Shop the sale now!",
    "instruct_inline_url": "Provide a definition of the word 'vacillation'. Find out more at https://example.com.",
    "instruct_interrobang": "Provide a definition of the word 'vacillation'‽",
    "instruct_key_smash": "Provide a definition of the word 'vacillation'. asdfghjkl;",
    "instruct_leet_speak": "Pr0v1d3 @ d3f1n1t10n 0f th3 w0rd 'v@c1ll@t10n'.",
    "instruct_misplaced_commas": "Provide a definition, of, the word, 'vacillation'.",
    "instruct_missing_bracket": "Provide a definition of the word 'vacillation'.",
    "instruct_missing_bracket_and_quote": "Provide a definition of the word vacillation.",
    "instruct_missing_quote": "Provide a definition of the word vacillation'.",
    "instruct_no_caps": "provide a definition of the word 'vacillation'.",
    "instruct_no_punct": "Provide a definition of the word vacillation",
    "instruct_one_typo_punctuation": "Provide a definition of the word 'vacillation'?",
    "instruct_oxford_comma": "Provide a definition of the word 'vacillation',.",
    "instruct_parenthetical_aside": "Provide a definition (like the meaning) of the word 'vacillation'.",
    "instruct_random_caps": "PrOvIdE a DeFiNiTiOn Of ThE wOrD 'VaCiLlAtIoN'.",
    "instruct_sms_abbrev": "Prvd a def of the wrd 'vacillation'.",
    "instruct_three_typos_punctuation": "Provide; a definition: of the word 'vacillation'?",
    "instruct_two_typos_punctuation": "Provide a definition, of the word 'vacillation',.",
    "instruct_typo_adjacent": "Proivde a definition of the wofd 'vacillation'.",
    "instruct_typo_extra_letter": "Providee a definition of the wword 'vacillation'.",
    "instruct_typo_extra_space": "Provide a definition of the word 'vacillation'.",
    "instruct_typo_homophone": "Provide a defination of the word 'vacillation'.",
    "instruct_typo_missing_letter": "Provie a deinition of the word 'vacillation'.",
    "instruct_typo_missing_space": "Provideadefinition of the word 'vacillation'.",
    "instruct_typo_missing_vowels": "Prvd a dfntn f th wrd 'vclltn'.",
    "instruct_typo_random": "Provlde a definigion of rhe word 'vacillation'.",
    "instruct_typo_repeated_letters": "Provvide a definittion of the worrd 'vacillatiion'.",
    "instruct_typo_swap": "Provdie a definition of teh word 'vacillation'.",
    "instruct_typo_swap_and_punctuation": "Provdie a definition of teh word 'vacillation'.?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Provdie a defintion, of the word 'vacillation':",
    "instruct_typo_transpose": "Provdie a defintion of the word 'vacillation'.",
    "instruct_typo_wrong_letter": "Provide a definision of the word 'vacillation'.",
    "output": "Vacillation is the state of hesitating or wavering between decisions or actions. It is characterized by an inability to make a firm decision or commitment.",
    "prompt_id": "6c2eb7d3-9458-4881-8502-d962d7b99e87"
  },
  {
    "prompt_count": 495,
    "instruction_original": "Write a haiku about the ocean.",
    "input": "",
    "instruct_all_caps": "WRITE A HAIKU ABOUT THE OCEAN.",
    "instruct_em_dash_break": "Write a haiku—about the ocean.",
    "instruct_extra_punct": "Write a haiku about the ocean...!!!",
    "instruct_hashtags": "Write a haiku about the ocean. #haiku #ocean #poetry",
    "instruct_inline_ad": "Write a haiku about the ocean. Shop now for 10% off!",
    "instruct_inline_url": "Write a haiku about the ocean. Visit example.com for more info.",
    "instruct_interrobang": "Write a haiku about the ocean!?",
    "instruct_key_smash": "Write a haiku about the ocean. asdflkjh",
    "instruct_leet_speak": "Wr1t3 4 h41ku 4b0u7 7h3 0c34n.",
    "instruct_misplaced_commas": "Write, a haiku about, the ocean.",
    "instruct_missing_bracket": "Write a haiku about the ocean[",
    "instruct_missing_bracket_and_quote": "Write a haiku about the ocean[\"",
    "instruct_missing_quote": "Write a haiku about the ocean\"",
    "instruct_no_caps": "write a haiku about the ocean.",
    "instruct_no_punct": "Write a haiku about the ocean",
    "instruct_one_typo_punctuation": "Write a haiku about the ocean,",
    "instruct_oxford_comma": "Write a haiku about the ocean,",
    "instruct_parenthetical_aside": "Write a haiku (you know, 5-7-5) about the ocean.",
    "instruct_random_caps": "wRiTe a HaIkU AbOuT tHe OcEaN.",
    "instruct_sms_abbrev": "wt a haiku bout the ocn.",
    "instruct_three_typos_punctuation": "Write a haiku about the ocean!;,?",
    "instruct_two_typos_punctuation": "Write a haiku about the ocean!;",
    "instruct_typo_adjacent": "Wroye a haiku ajout the ocezn.",
    "instruct_typo_extra_letter": "Writge a haiku about the ocdean.",
    "instruct_typo_extra_space": "Write a haiku about the ocean .",
    "instruct_typo_homophone": "Rite a high coo about the o shun.",
    "instruct_typo_missing_letter": "Wrie a haiku about the oean.",
    "instruct_typo_missing_space": "Writeahaikuabouttheocean.",
    "instruct_typo_missing_vowels": "Wrt hk bt th cn.",
    "instruct_typo_random": "Wrie a haiku about the ocewn.",
    "instruct_typo_repeated_letters": "Writtee a haiku abouut the oceaaan.",
    "instruct_typo_swap": "Wrtie a haiku about the ocaen.",
    "instruct_typo_swap_and_punctuation": "Wrtie a haiku about the ocaen?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Wrtei a haiku aoubt the ocaen!?",
    "instruct_typo_transpose": "Wrtei a haiku aoubt the ocaen.",
    "instruct_typo_wrong_letter": "Write a haibu about the ocean.",
    "output": "Endless waves, crashing ashore,\nPeaceful blue depths, ancient lore.\nMajestic ocean, evermore.",
    "prompt_id": "27baaf8c-d95f-4c4b-9213-910abf84c508"
  },
  {
    "prompt_count": 496,
    "instruction_original": "Organize the following words into a meaningful sentence.",
    "input": "tall life the in",
    "instruct_all_caps": "ORGANIZE THE FOLLOWING WORDS INTO A MEANINGFUL SENTENCE.",
    "instruct_em_dash_break": "Organize the following words—into a meaningful sentence—",
    "instruct_extra_punct": "Organize the following words into a meaningful sentence?!!",
    "instruct_hashtags": "Organize the following words into a meaningful sentence #organize #words #sentence",
    "instruct_inline_ad": "Organize the following words (Sponsored by Acme Corp) into a meaningful sentence.",
    "instruct_inline_url": "Organize the following words (visit example.com) into a meaningful sentence.",
    "instruct_interrobang": "Organize the following words into a meaningful sentence‽",
    "instruct_key_smash": "Organize the following words asdfghjkl into a meaningful sentence.",
    "instruct_leet_speak": "0rg4n1z3 th3 f0ll0w1ng w0rd5 1nt0 4 m34n1ngful 53nt3nc3.",
    "instruct_misplaced_commas": "Organize, the, following, words, into, a, meaningful, sentence.",
    "instruct_missing_bracket": "Organize the following words (into a meaningful sentence.",
    "instruct_missing_bracket_and_quote": "'Organize the following words (into a meaningful sentence.",
    "instruct_missing_quote": "'Organize the following words into a meaningful sentence.",
    "instruct_no_caps": "organize the following words into a meaningful sentence.",
    "instruct_no_punct": "Organize the following words into a meaningful sentence",
    "instruct_one_typo_punctuation": "Organize the following words into a meaningful sentence,",
    "instruct_oxford_comma": "Organize the following words, into a meaningful sentence.",
    "instruct_parenthetical_aside": "Organize the following words (the ones provided) into a meaningful sentence.",
    "instruct_random_caps": "OrGaNiZe ThE fOlLoWiNg WoRdS iNtO a MeAnInGfUl SeNtEnCe.",
    "instruct_sms_abbrev": "Org the fllwng wrds nto a mningfl sntnc.",
    "instruct_three_typos_punctuation": "Organize the following words into a meaningful sentence;?.",
    "instruct_two_typos_punctuation": "Organize the following words into a meaningful sentence,?",
    "instruct_typo_adjacent": "Orgsnize the following words into a meaningful sentence.",
    "instruct_typo_extra_letter": "Organiize the following words into a meaningful sentence.",
    "instruct_typo_extra_space": "Organize the following words into a meaningful sentence .",
    "instruct_typo_homophone": "Organize the following words into a meaningful sentents.",
    "instruct_typo_missing_letter": "Organze the following words into a meaningful sentence.",
    "instruct_typo_missing_space": "Organize thefollowing words into a meaningful sentence.",
    "instruct_typo_missing_vowels": "Orgnz th fllwng wrds nt a mnngfl sntnc.",
    "instruct_typo_random": "Orgainze the fllowing words into a meaningful sentence.",
    "instruct_typo_repeated_letters": "Organize the followwing wordds into a meaninggful senttence.",
    "instruct_typo_swap": "Orgainze the following words into a meaningful sentence.",
    "instruct_typo_swap_and_punctuation": "Orgainze the following words into a meaningful sentence;.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Orgainze the flolowing words into a meaningful sentence;.",
    "instruct_typo_transpose": "Oragnize the following words into a meaningful sentence.",
    "instruct_typo_wrong_letter": "Organize the fpllowing words into a meaningful sentence.",
    "output": "Life in the tall is full of surprises.",
    "prompt_id": "117929d8-71f3-4d24-99ca-49d787643eef"
  },
  {
    "prompt_count": 497,
    "instruction_original": "Sort the following items into two categories.",
    "input": "pencil, apple, phone",
    "instruct_all_caps": "SORT THE FOLLOWING ITEMS INTO TWO CATEGORIES.",
    "instruct_em_dash_break": "Sort the following items—into two categories.",
    "instruct_extra_punct": "Sort the following items into two categories..!!!",
    "instruct_hashtags": "Sort the following items into two categories. #sorting #categorization",
    "instruct_inline_ad": "Sort the following items (Get 10% off our sorting service!) into two categories.",
    "instruct_inline_url": "Sort the following items (find out more at example.com) into two categories.",
    "instruct_interrobang": "Sort the following items into two categories?!",
    "instruct_key_smash": "Sort the following items into two categories. fghjkl;fghjk",
    "instruct_leet_speak": "50rt th3 f0ll0w1n6 173m5 1n70 7w0 c47360r135.",
    "instruct_misplaced_commas": "Sort the following, items into two, categories.",
    "instruct_missing_bracket": "Sort the following items [into two categories.",
    "instruct_missing_bracket_and_quote": "Sort the following [\"items into two categories.",
    "instruct_missing_quote": "Sort the following \"items into two categories.",
    "instruct_no_caps": "sort the following items into two categories.",
    "instruct_no_punct": "Sort the following items into two categories",
    "instruct_one_typo_punctuation": "Sort the following items into two categories?",
    "instruct_oxford_comma": "Sort the following items: apples, bananas, and oranges, into two categories.",
    "instruct_parenthetical_aside": "Sort the following items (this is important) into two categories.",
    "instruct_random_caps": "sOrT tHe fOLloWinG iTeMs iNtO tWo cATeGoRiEs.",
    "instruct_sms_abbrev": "Srt the folowin itms n 2 cats.",
    "instruct_three_typos_punctuation": "Sort the following items into two categories!?.",
    "instruct_two_typos_punctuation": "Sort the following items into two categories?.",
    "instruct_typo_adjacent": "Sory the fjllowing items into two caregories.",
    "instruct_typo_extra_letter": "Sort the followeing items into two categories.",
    "instruct_typo_extra_space": "Sort the following items into two categories .",
    "instruct_typo_homophone": "Sort the following items in to two categories.",
    "instruct_typo_missing_letter": "Sort the folowing items into two categories.",
    "instruct_typo_missing_space": "Sortthe following items into two categories.",
    "instruct_typo_missing_vowels": "Srt th fllwng itms nt tw ctgrs.",
    "instruct_typo_random": "Sort the following itmes into two categoriez.",
    "instruct_typo_repeated_letters": "Sortt thee followingg itemss inttoo twoo categoriess.",
    "instruct_typo_swap": "Srot the fowollnig items into two categories.",
    "instruct_typo_swap_and_punctuation": "Srot the fowollnig items into two categories?.",
    "instruct_typo_swap_and_transpose_and_punctuation": "Srot the folloiwng items into two categories!?.",
    "instruct_typo_transpose": "Sotr the folloiwng items into two categories.",
    "instruct_typo_wrong_letter": "Sort the fpllowing items into two catekorues.",
    "output": "Category 1: Pencil, Apple \nCategory 2: Phone",
    "prompt_id": "f1d6db31-ef7d-4b9d-92ed-5734d30e2136"
  },
  {
    "prompt_count": 498,
    "instruction_original": "Rewrite the following sentence with more accurate grammar.",
    "input": "She done a lot of good",
    "instruct_all_caps": "REWRITE THE FOLLOWING SENTENCE WITH MORE ACCURATE GRAMMAR.",
    "instruct_em_dash_break": "Rewrite the following sentence—with more accurate grammar.",
    "instruct_extra_punct": "Rewrite the following sentence with more accurate grammar...!!",
    "instruct_hashtags": "Rewrite the following sentence with more accurate grammar. #grammar #rewriting",
    "instruct_inline_ad": "Rewrite the following sentence (Get grammar help!) with more accurate grammar.",
    "instruct_inline_url": "Rewrite the following sentence (example.com) with more accurate grammar.",
    "instruct_interrobang": "Rewrite the following sentence with more accurate grammar?!",
    "instruct_key_smash": "Rewrite the following sentence with more accurate grammar. sadklfjsd",
    "instruct_leet_speak": "R3wr173 7h3 f0ll0w1ng 53n73nc3 w17h m0r3 4ccur473 gr4mm4r.",
    "instruct_misplaced_commas": "Rewrite, the, following, sentence, with, more, accurate, grammar.",
    "instruct_missing_bracket": "[Rewrite the following sentence with more accurate grammar.",
    "instruct_missing_bracket_and_quote": "[\"Rewrite the following sentence with more accurate grammar.",
    "instruct_missing_quote": "\"Rewrite the following sentence with more accurate grammar.",
    "instruct_no_caps": "rewrite the following sentence with more accurate grammar.",
    "instruct_no_punct": "Rewrite the following sentence with more accurate grammar",
    "instruct_one_typo_punctuation": "Rewrite the following sentence with more accurate grammar,",
    "instruct_oxford_comma": "Rewrite, the following sentence with more accurate grammar.",
    "instruct_parenthetical_aside": "Rewrite the following sentence (with more accurate grammar).",
    "instruct_random_caps": "rEwRiTe tHe fOlLoWiNg sEnTeNcE WiTh mOrE AcCuRaTe gRaMmAr.",
    "instruct_sms_abbrev": "Rwt the fllwng sntnc w/ mre accrt grmmr.",
    "instruct_three_typos_punctuation": "Rewrite the following sentence with more accurate grammar...?",
    "instruct_two_typos_punctuation": "Rewrite the following sentence with more accurate grammar;!",
    "instruct_typo_adjacent": "Rewrote the follosing sentejce with nore accurate grammaf.",
    "instruct_typo_extra_letter": "Rewriite the following sentence with more accurate grammar.",
    "instruct_typo_extra_space": "Rewrite the following sentence with more accurate grammar.",
    "instruct_typo_homophone": "Wright the flowing sentence witch more accurate grammar.",
    "instruct_typo_missing_letter": "Rewite the following sentence with more accurate grammar.",
    "instruct_typo_missing_space": "Rewritethefollowingsentencewithmoreaccurategrammar.",
    "instruct_typo_missing_vowels": "Rwrte th fllwng sntnc wth mr accrt grmmr.",
    "instruct_typo_random": "Reewriiet the folowing setence wuth moar accqrate gramamr.",
    "instruct_typo_repeated_letters": "Reewriitee the follooowing seenteence wiith mooree accuraatte grammmar.",
    "instruct_typo_swap": "Reiwtre the follwoing setnence wtih mroe accurtae garmmar.",
    "instruct_typo_swap_and_punctuation": "Reiwtre the follwoing setnence wtih mroe accurtae garmmar!!",
    "instruct_typo_swap_and_transpose_and_punctuation": "Rierwte the folloiwng snetnece wtih mroe accuraet gramamr.?!",
    "instruct_typo_transpose": "Rierwte the folloiwng snetnece wtih mroe accuraet gramamr.",
    "instruct_typo_wrong_letter": "Rewrity the following sentence with more accurate grammar.",
    "output": "She has done a lot of good.",
    "prompt_id": "2d67065f-78ec-4ca5-b0aa-619a4b296e1d"
  },
  {
    "prompt_count": 499,
    "instruction_original": "Name three government positions in the United States.",
    "input": "",
    "instruct_all_caps": "NAME THREE GOVERNMENT POSITIONS IN THE UNITED STATES.",
    "instruct_em_dash_break": "Name three government positions—in the United States.",
    "instruct_extra_punct": "Name... three,,, government!!!! positions??? in the... United, States!!!!",
    "instruct_hashtags": "Name three government positions in the United States #gov #usa #politics",
    "instruct_inline_ad": "Name three government positions in the United States - Visit Example.com for more!",
    "instruct_inline_url": "Name three government positions in the United States (https://www.usa.gov).",
    "instruct_interrobang": "Name three government positions in the United States!?",
    "instruct_key_smash": "Name three government positions in the United States gfdgfdg.",
    "instruct_leet_speak": "N4m3 thr33 g0v3rnm3nt p051t10n5 1n th3 Un1t3d 5t4t35.",
    "instruct_misplaced_commas": "Name three government positions, in the United States.",
    "instruct_missing_bracket": "Name three government positions (in the United States.",
    "instruct_missing_bracket_and_quote": "Name three government positions (in the United States.",
    "instruct_missing_quote": "Name three government positions in the United States.",
    "instruct_no_caps": "name three government positions in the united states.",
    "instruct_no_punct": "Name three government positions in the United States",
    "instruct_one_typo_punctuation": "Name three government positions in the United States,",
    "instruct_oxford_comma": "Name three government positions in the United States.",
    "instruct_parenthetical_aside": "Name three government positions (like President, Senator, etc.) in the United States.",
    "instruct_random_caps": "nAmE ThrEe GOvernMenT POsItiOns In ThE UniTEd StaTeS.",
    "instruct_sms_abbrev": "Nm 3 govt posns in the US.",
    "instruct_three_typos_punctuation": "Name three government positions in the United States?!.",
    "instruct_two_typos_punctuation": "Name three government positions in the United States?!",
    "instruct_typo_adjacent": "Name three government positions in the United Stqtes.",
    "instruct_typo_extra_letter": "Name three government posittions in the United States.",
    "instruct_typo_extra_space": "Name three government positions in the United States.",
    "instruct_typo_homophone": "Name there government positions in the United States.",
    "instruct_typo_missing_letter": "Name thre government positins in the United States.",
    "instruct_typo_missing_space": "NamethreegovernmentpositionsintheUnitedStates.",
    "instruct_typo_missing_vowels": "Nm thr gvrnmnt pstns n th Untd Stts.",
    "instruct_typo_random": "Nmme thre govrnment postions in th Uited Statea.",
    "instruct_typo_repeated_letters": "Name three governmment positions in the Unitedd States.",
    "instruct_typo_swap": "Nmae three government psotions in the United States.",
    "instruct_typo_swap_and_punctuation": "Nmae three goveremnt psotions in the United States!?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Naem three goveremnt psotions in the Unitde States!?.",
    "instruct_typo_transpose": "Name three government psotions in the United States.",
    "instruct_typo_wrong_letter": "Name three gobernment positions in the United States.",
    "output": "Three government positions in the United States are President, Vice President, and Senator.",
    "prompt_id": "7bc62846-31f7-4ace-9724-32bfbdb2883f"
  },
  {
    "prompt_count": 500,
    "instruction_original": "Improve the following sentence by using a better transition.",
    "input": "We did not have enough time so we had to leave.",
    "instruct_all_caps": "IMPROVE THE FOLLOWING SENTENCE BY USING A BETTER TRANSITION.",
    "instruct_em_dash_break": "Improve the following sentence—by using a better transition.",
    "instruct_extra_punct": "Improve, the following sentence by using a better transition???",
    "instruct_hashtags": "Improve the following sentence by using a better transition. #writing #grammar #transition",
    "instruct_inline_ad": "Improve the following sentence (Visit Our Sponsor!) by using a better transition.",
    "instruct_inline_url": "Improve the following sentence (https://example.com) by using a better transition.",
    "instruct_interrobang": "Improve the following sentence by using a better transition?!",
    "instruct_key_smash": "Improve the following sentence asdflkjhqwer by using a better transition.",
    "instruct_leet_speak": "1mpr0v3 7h3 f0ll0w1n6 53n73nc3 by u51n6 4 83773r 7r4n51710n.",
    "instruct_misplaced_commas": "Improve the, following, sentence by, using a, better transition.",
    "instruct_missing_bracket": "Improve the following sentence by using a better transition).",
    "instruct_missing_bracket_and_quote": "Improve the following sentence by using a better transition.\"",
    "instruct_missing_quote": "Improve the following sentence by using a better transition.",
    "instruct_no_caps": "improve the following sentence by using a better transition.",
    "instruct_no_punct": "Improve the following sentence by using a better transition",
    "instruct_one_typo_punctuation": "Improve the following sentence by using a better transition?",
    "instruct_oxford_comma": "Improve the following sentence, by using a better transition.",
    "instruct_parenthetical_aside": "Improve the following sentence (you know the one) by using a better transition.",
    "instruct_random_caps": "iMpRoVe ThE fOlLoWiNg SeNtEnCe By UsInG a BeTtEr TrAnSiTiOn.",
    "instruct_sms_abbrev": "Imprv the folo sntnc by usin a btr trans.",
    "instruct_three_typos_punctuation": "Improve, the following sentence by using a better transition?!",
    "instruct_two_typos_punctuation": "Improve the following sentence by using a better transition?!",
    "instruct_typo_adjacent": "Imrpvoe the gollwoing sentence by usung a bettur trasnsition.",
    "instruct_typo_extra_letter": "Imprrove the followiing sentence by using a betterr transition.",
    "instruct_typo_extra_space": "Improve the  following sentence by using a better transition.",
    "instruct_typo_homophone": "Improve the following sentence by using a wetter transition.",
    "instruct_typo_missing_letter": "Imrove the follwing sentence by using a better tranition.",
    "instruct_typo_missing_space": "Improvethe following sentence by using a better transition.",
    "instruct_typo_missing_vowels": "Imprv the fllwng sntnc by sng a bttr trnstn.",
    "instruct_typo_random": "Imrprove tje following senrence by usiing a bette transitiohn.",
    "instruct_typo_repeated_letters": "Impprove the followiing senntennce by ussiing a bettteer transitioon.",
    "instruct_typo_swap": "Inprome the following snetence by using a better trasition.",
    "instruct_typo_swap_and_punctuation": "Inprome the following snetence by using a better trasition?",
    "instruct_typo_swap_and_transpose_and_punctuation": "Imporve the folowing snteence by usnig a beater transiton?!",
    "instruct_typo_transpose": "Imporve the folowing snteence by usnig a beater transiton.",
    "instruct_typo_wrong_letter": "Imrpove the follwing sentence by using a betrer transition.",
    "output": "Given that we had limited time, we had to leave.",
    "prompt_id": "eaf7fb0e-037a-42c6-be54-9f1d7c745392"
  }
]