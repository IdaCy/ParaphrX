[
  {
    "prompt_count": 101,
    "instruction_original": "Design a database to record employee salaries.",
    "input": "",
    "instruct_all_caps_and_typo": "DESIGN A DATABAS TO RECOrd EMPLOYEE SALARIE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESIGN A DATABAS TO RECOrd EMPLOYEE SALARIE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"DESIGN A DATABAS TO RECOrd EMPLOYEE SALARIE.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"DESIGN A DATABAS TO RECOrd EMPLOYEE SALARIE.",
    "instruct_code_fence": "```sql Design a database to record employee salaries. ```",
    "instruct_confusable_unicode": "Desιgn a databa𝚜e to rec𝚘rd empl𝚘yee salarιes.",
    "instruct_confusable_unicode_and_typo": "Desιgn a databa𝚜 to rec𝚘rd empl𝚘yee salarιs.",
    "instruct_emoji": "Design a database to record employee salaries. 📊💰💾👩‍💼👨‍💼📈",
    "instruct_emoji_and_typo": "Desin a databas to record employee salaris. 📊💰💾👩‍💼👨‍💼📈",
    "instruct_emoji_and_typo_and_missing_bracket": "Desin a databas to record employee salaris. 📊💰💾👩‍💼👨‍💼📈",
    "instruct_emoji_and_typo_and_missing_quote": "\"Desin a databas to record employee salaris. 📊💰💾👩‍💼👨‍💼📈",
    "instruct_emoticon": "Design a database to record employee salaries. :) :D ;)",
    "instruct_emoticon_and_typo": "Desin a databas to record employee salaris. :) :D ;)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Desin a databas to record employee salaris. :) :D ;)",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Desin a databas to record employee salaris. :) :D ;)",
    "instruct_helpful_markdown_structure": "# Database Design - Employee Salaries\n\n- Design a database to record employee salaries.",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Design a database 💾 to record employee salaries 💰. ✅",
    "instruct_html_tags": "<p>Design a database to record employee salaries.</p>",
    "instruct_kaomoji": "Design a database to record employee salaries. (•‿•) (^-^) (≧▽≦)",
    "instruct_kaomoji_and_typo": "Desin a databas to record employee salaris. (•‿•) (^-^) (≧▽≦)",
    "instruct_markdown_bold": "**Design a database to record employee salaries.**",
    "instruct_markdown_bold_and_italic": "**_Design a database to record employee salaries._**",
    "instruct_markdown_italic": "*Design a database to record employee salaries.*",
    "instruct_qr_ascii": "Design a database to record employee salaries.\n███████████\n█ ▀▄▀ █ ▀▄█\n█▄█▄▀▄█▄▀█\n████ █ █████\n█ ▀▀▄▄█▄█▄█\n█▄▀▀ █ ▄▀▄█\n███████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Desin a\ndatabse to\nrecor employe\nsalaries.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "\"Desin a\ndatabse to\nrecor employe\nsalaries.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "\"Desin a;\ndatabse to,\nrecor employe!;\nsalaries..",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "\"Desin a ; \ndatabse to , \nrecor employe ! ; \nsalaries. .",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"Desin a\ndatabse to\nrecor employe\nsalaries.",
    "instruct_several_html_tags": "<div><p><span>Design a database to record employee salaries.</span></p></div>",
    "instruct_spoiler_bars": "||Design a database to record employee salaries.||",
    "instruct_with_inbetween_gzip_b64_blob": "Design a database [H4sIAAAAAAAAA0soLgnXBbGlsbFUAAC8/N5fFQAAAA==] to record employee salaries.",
    "instruct_zalgo": "D̶͙͋e̶̦͌s̵̤̃í̸̦g̴̞̅ǹ̶͉ ̸͉̈́ä̶̩́ ̴̖̄d̷̪̅ạ̵́t̸̪́ḁ̶̓ḃ̷͓á̷̹š̷̗é̸͉ ̶̖̃t̷̽ͅo̴̹͋ ̸̺̃r̶͓̈ê̴͙c̶͓͊ô̵̳r̵̡͆d̴̘̓ ̶̨̍e̸̡͒m̵̡̏p̴̜̾ľ̴͉ó̷̪ỵ̸̈e̵͖͐e̵̞͑ ̴̪̊s̶̰̐ä̸̱l̸̪͝a̴̜̕r̵̡̀i̶̱̋ę̵͝s̵̬͆.̴͉̐",
    "instruct_zero_width": "D‎e‎s‎i‎g‎n‎ ‎a‎ ‎d‎a‎t‎a‎b‎a‎s‎e‎ ‎t‎o‎ ‎r‎e‎c‎o‎r‎d‎ ‎e‎m‎p‎l‎o‎y‎e‎e‎ ‎s‎a‎l‎a‎r‎i‎e‎s‎.",
    "instruct_zero_width_and_typo": "D‎e‎s‎i‎n‎ ‎a‎ ‎d‎a‎t‎a‎b‎a‎s‎ ‎t‎o‎ ‎r‎e‎c‎o‎r‎d‎ ‎e‎m‎p‎l‎o‎y‎e‎e‎ ‎s‎a‎l‎a‎r‎i‎s‎.",
    "output": "The database should contain fields for employee name, position, salary, and date. It should also include a field for the employee's manager, so that the salaries can be properly allocated across departments. The database should also be able to generate reports on salary expenses for departments or individuals.",
    "prompt_id": "3f70208d-e83e-47f7-a55c-70610f919266"
  },
  {
    "prompt_count": 102,
    "instruction_original": "Identify the theme of the following book.",
    "input": "The book is about a small town in the Midwest and how people respond to a series of tragedies and unexpected events that shake their lives.",
    "instruct_all_caps_and_typo": "IDENTIFY THE THAME OF THE FOLLOWING BOOK.",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDENTIFY THE THAME OF THE FOLLOWING BOOK.\"",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "IDENTIFY THE THAME OF THE FOLLOWING BOOK.",
    "instruct_all_caps_and_typo_and_missing_quote": "IDENTIFY THE THAME OF THE FOLLOWING BOOK.}",
    "instruct_code_fence": "```Identify the theme of the following book.```",
    "instruct_confusable_unicode": "Ιԁеո𝚝і𝚏γ thе thеmе о𝚏 thе fοllоwіոɡ Ьοοκ.",
    "instruct_confusable_unicode_and_typo": "Ιԁеո𝚝і𝚏γ thе thаmе о𝚏 thе fοllоwіոɡ Ьοοκ.",
    "instruct_emoji": "Identify the theme 📚🔍 of the following book.",
    "instruct_emoji_and_typo": "Identify the thame 📚🔍 of the following book.",
    "instruct_emoji_and_typo_and_missing_bracket": "Identify the thame 📚🔍 of the following book.\"",
    "instruct_emoji_and_typo_and_missing_quote": "Identify the thame 📚🔍 of the following book.}",
    "instruct_emoticon": "Identify the theme :-) of the following book.",
    "instruct_emoticon_and_typo": "Identify the thame :-) of the following book.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Identify the thame :-) of the following book.\"",
    "instruct_emoticon_and_typo_and_missing_quote": "Identify the thame :-) of the following book.}",
    "instruct_helpful_markdown_structure": "# Task: Identify Theme - Identify the theme of the following book.",
    "instruct_helpful_meaning_reinforing_characters": "🔎 Identify the theme of the following book. 📚",
    "instruct_html_tags": "<p>Identify the theme of the following book.</p>",
    "instruct_kaomoji": "Identify the theme (｡◕‿◕｡) of the following book.",
    "instruct_kaomoji_and_typo": "Identify the thame (｡◕‿◕｡) of the following book.",
    "instruct_markdown_bold": "**Identify the theme of the following book.**",
    "instruct_markdown_bold_and_italic": "***Identify the theme of the following book.***",
    "instruct_markdown_italic": "*Identify the theme of the following book.*",
    "instruct_qr_ascii": "[ASCII_QR_FOR_THEME]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Identify the\nthame of\nthe following book.\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Identify the\nthame of\nthe following book.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Identify the\nthame of\nthe following book?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Identify the \n thame of\nthe following book?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Identify the\nthame of\nthe following book.}",
    "instruct_several_html_tags": "<div><p><em>Identify the theme of the following book.</em></p></div>",
    "instruct_spoiler_bars": "||Identify the theme of the following book.||",
    "instruct_with_inbetween_gzip_b64_blob": "Identify the theme of the following book.<!-- GZIP_B64_BLOB: H4sIAAAAAAAC/wXBMQoAEAgF0F7iN0G3q/c14SAtBv95T9t4AI8AAAA= -->",
    "instruct_zalgo": "I̐d͂ë́ñt̃īf̂ÿ́ t̀h̑ē t̾h̃e̛m̆ë o͐f̉ t̋h̑ẽ f̛òl͐l̂o̊ŵi̚n̛ǵ b̂òòk.",
    "instruct_zero_width": "I​d​e​n​t​i​f​y​ t​h​e​ t​h​e​m​e​ ​o​f​ t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​b​o​o​k.",
    "instruct_zero_width_and_typo": "I​d​e​n​t​i​f​y​ t​h​e​ t​h​a​m​e​ ​o​f​ t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​b​o​o​k.",
    "output": "The theme of the book is resilience in the face of unexpected tragedy, and how the people of a small town come together to overcome difficult times.",
    "prompt_id": "de1d960e-d011-40b6-92b3-29e7ad65c77f"
  },
  {
    "prompt_count": 103,
    "instruction_original": "Assign each word in the sentence below to its part of speech.",
    "input": "Kittens often scamper around excitedly.",
    "instruct_all_caps_and_typo": "ASSIGN EACH WORD IN THE SENTENCE BELOEW TO ITS PART OF SPEECH.",
    "instruct_all_caps_and_typo_and_missing_bracket": "ASSIGN EACH WORD IN THE SENTENCE BELOEW TO ITS PART OF SPEECH.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "ASSIGN EACH WORD IN THE SENTENCE BELOEW TO ITS PART OF SPEECH.",
    "instruct_all_caps_and_typo_and_missing_quote": "ASSIGN EACH WORD IN THE SENTENCE BELOEW TO ITS PART OF SPEECH.",
    "instruct_code_fence": "```Assign each word in the sentence below to its part of speech.```",
    "instruct_confusable_unicode": "Αssign еach wοrd in the sеntеncе bеlοw tο its pаrt οf spееch.",
    "instruct_confusable_unicode_and_typo": "Αssign еach wοrd in the sеntеncе bеlοеw tο its pаrt οf spееch.",
    "instruct_emoji": "Assign 📝 each word 💬 in the sentence 👇 below to its part of speech 🗣️.",
    "instruct_emoji_and_typo": "Assign 📝 each word 💬 in the sentence 👇 beloew to its part of speech 🗣️.",
    "instruct_emoji_and_typo_and_missing_bracket": "Assign 📝 each word 💬 in the sentence 👇 beloew to its part of speech 🗣️.",
    "instruct_emoji_and_typo_and_missing_quote": "Assign 📝 each word 💬 in the sentence 👇 beloew to its part of speech 🗣️.",
    "instruct_emoticon": "Assign :-) each word ;-) in the sentence :P below to its part of speech :-).",
    "instruct_emoticon_and_typo": "Assign :-) each word ;-) in the sentence :P beloew to its part of speech :-).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Assign :-) each word ;-) in the sentence :P beloew to its part of speech :-).",
    "instruct_emoticon_and_typo_and_missing_quote": "Assign :-) each word ;-) in the sentence :P beloew to its part of speech :-).",
    "instruct_helpful_markdown_structure": "- Assign each word in the sentence below to its part of speech.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Assign each word --> in the sentence below *** to its part of speech.",
    "instruct_html_tags": "<p>Assign each word in the sentence below to its part of speech.</p>",
    "instruct_kaomoji": "Assign (｡◕‿◕｡) each word (・ω・) in the sentence (ノ^_^)ノ below to its part of speech (´・ω・)っ.",
    "instruct_kaomoji_and_typo": "Assign (｡◕‿◕｡) each word (・ω・) in the sentence (ノ^_^)ノ beloew to its part of speech (´・ω・)っ.",
    "instruct_markdown_bold": "**Assign each word in the sentence below to its part of speech.**",
    "instruct_markdown_bold_and_italic": "***Assign each word in the sentence below to its part of speech.***",
    "instruct_markdown_italic": "*Assign each word in the sentence below to its part of speech.*",
    "instruct_qr_ascii": "Assign each word in the sentence below to its part of speech.\n[ASCII_QR_CODE_PLACEHOLDER]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Assign each\n    word in the sentence\n    beloew to its part\n    of speech.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Assign each\n    word in the sentence\n    beloew to its part\n    of speech.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Assign each\n    word in the sentence\n    beloew to its part\n    of speech;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Assign each \n    word in the sentence \n    beloew to its part \n    of speech; ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Assign each\n    word in the sentence\n    beloew to its part\n    of speech.",
    "instruct_several_html_tags": "<div><p><span>Assign each word in the sentence below to its part of speech.</span></p></div>",
    "instruct_spoiler_bars": "||Assign each word in the sentence below to its part of speech.||",
    "instruct_with_inbetween_gzip_b64_blob": "Assign each word [GZIP_B64_BLOB] in the sentence below [GZIP_B64_BLOB] to its part of speech.",
    "instruct_zalgo": "A̶s̶s̶i̶g̶n̶ ̶e̶a̶c̶h̶ ̶w̶o̶r̶d̶ ̶i̶n̶ ̶t̶h̶e̶ ̶s̶e̶n̶t̶e̶n̶c̶e̶ ̶b̶e̶l̶o̶w̶ ̶t̶o̶ ̶i̶t̶s̶ ̶p̶a̶r̶t̶ ̶o̶f̶ ̶s̶p̶e̶e̶c̶h̶.",
    "instruct_zero_width": "A\nas\ns\ni\ng\nn\n\ne\na\nc\nh\n\nw\no\nr\nd\n\ni\nn\n\nt\nh\ne\n\ns\ne\nn\nt\ne\nn\nc\ne\n\nb\ne\nl\no\nw\n\nt\no\n\ni\nt\ns\n\np\na\nr\nt\n\no\nf\n\ns\np\ne\ne\nc\nh\n.",
    "instruct_zero_width_and_typo": "A\nas\ns\ns\ni\ng\nn\n\ne\na\nc\nh\n\nw\no\nr\nd\n\ni\nn\n\nt\nh\ne\n\ns\ne\nn\nt\ne\nn\nc\ne\n\nb\ne\nl\no\ne\nw\n\nt\no\n\ni\nt\ns\n\np\na\nr\nt\n\no\nf\n\ns\np\ne\ne\nc\nh\n.",
    "output": "Kittens - Noun \noften - Adverb \nscamper - Verb \naround - Preposition \nexcitedly - Adverb",
    "prompt_id": "c0a32291-6e7a-43f3-811f-e319953f1acb"
  },
  {
    "prompt_count": 104,
    "instruction_original": "Generate a password of 8 characters.",
    "input": "",
    "instruct_all_caps_and_typo": "GENERATE A PASSWIRD OF 8 CHARACTERZ.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERATE A PASSWIRD OF 8 CHARACTERZ.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GENERATE A PASSWIRD OF 8 CHARACTERZ.",
    "instruct_all_caps_and_typo_and_missing_quote": "GENERATE A PASSWIRD OF 8 CHARACTERZ.",
    "instruct_code_fence": "```\nGenerate a password of 8 characters.\n```",
    "instruct_confusable_unicode": "Ǥeռerɑte ɑ ƿasswᴏrԀ ᴏf 8 cɦɑrɑcters.",
    "instruct_confusable_unicode_and_typo": "Ǥeռerɑte ɑ ƿasswᴏrԀ ᴏf 8 cɦɑrɑcterz.",
    "instruct_emoji": "🔑 Generate a password of 8 characters. 🔢",
    "instruct_emoji_and_typo": "🔑 Generate a passwird of 8 characterz. 🔢",
    "instruct_emoji_and_typo_and_missing_bracket": "🔑 Generate a passwird of 8 characterz. 🔢",
    "instruct_emoji_and_typo_and_missing_quote": "🔑 Generate a passwird of 8 characterz. 🔢",
    "instruct_emoticon": "Generate a password of 8 characters. :)",
    "instruct_emoticon_and_typo": "Generate a passwird of 8 characterz. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Generate a passwird of 8 characterz. :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Generate a passwird of 8 characterz. :)",
    "instruct_helpful_markdown_structure": "- Generate a password\n- Must be 8 characters long",
    "instruct_helpful_meaning_reinforing_characters": ">>> Generate a password [length=8 characters] <<<",
    "instruct_html_tags": "<p>Generate a password of 8 characters.</p>",
    "instruct_kaomoji": "Generate a password of 8 characters. (^_^)",
    "instruct_kaomoji_and_typo": "Generate a passwird of 8 characterz. (^_^)",
    "instruct_markdown_bold": "**Generate a password of 8 characters.**",
    "instruct_markdown_bold_and_italic": "***Generate a password of 8 characters.***",
    "instruct_markdown_italic": "*Generate a password of 8 characters.*",
    "instruct_qr_ascii": "█▀▀▀▀▀█ ██▀▀█ █ █▀▀▀▀▀█\n█ ███ █ ▀ █ █ ▀ █ ███ █\n█ ▀▀▀ █ █ ▀██▀█ █ ▀▀▀ █\n▀▀▀▀▀▀▀ █▀▀ █ ▀ ▀▀▀▀▀▀▀\n█▀ █ █ ▀▄ █▄███ ▀ █▀█▄▄\n█▄█▄█ █ ▀ ▄ █ ▄ █ █ █ ▀\n▀ ▀ ▀ ▀█▀ █▀ █ █ ▀ ▀ ▀\n█▀▀▀▀▀█ █ █ █▀ █ █▀▀▀▀▀█\n█ ███ █ ▀ █ █ ▀█▀ █ ███ █\n█ ▀▀▀ █ █ █▀▄█▀ █ ▀▀▀ █\n▀▀▀▀▀▀▀ ▀ ▀▀▀ ▀▀▀ ▀▀▀▀▀▀▀\nGenerate a password of 8 characters.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate\na passwird\nof 8 characterz",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Generate\na passwird\nof 8 characterz",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Generate,\na passwird,\nof 8 characterz:",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Generate \na passwird \nof 8 characterz : ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Generate\na passwird\nof 8 characterz",
    "instruct_several_html_tags": "<div><p><span>Generate a password of 8 characters.</span></p></div>",
    "instruct_spoiler_bars": "||Generate a password of 8 characters.||",
    "instruct_with_inbetween_gzip_b64_blob": "Generate a password <gzip+b64>H4sIAAAAAAAAA0soLS7RT0lTSsywNzZMsjI0BgACj9aRCwAAAA==</gzip+b64> of 8 characters.",
    "instruct_zalgo": "G͎e̳n̷e͓r̸a̰t̃e͂ ͖a̵ p͙a̳s͑s͒w̕o͠r̛d̔ ̱o͡f̳ 8̇ ͎c̓h̃a̵r̋ǎc̶t͋e̵r̙s̫.",
    "instruct_zero_width": "G​e​n​e​r​a​t​e​ ​a​ ​p​a​s​s​w​o​r​d​ ​o​f​ ​8​ ​c​h​a​r​a​c​t​e​r​s​.",
    "instruct_zero_width_and_typo": "G​e​n​e​r​a​t​e​ ​a​ ​p​a​s​s​w​i​r​d​ ​o​f​ ​8​ ​c​h​a​r​a​c​t​e​r​z​.",
    "output": "e9gKyd2D",
    "prompt_id": "c846d753-07a1-449b-b0ec-0b1c67ddae1f"
  },
  {
    "prompt_count": 105,
    "instruction_original": "Create a web page about robotics.",
    "input": "",
    "instruct_all_caps_and_typo": "CREAT A WEB PAGE ABOUT ROBOTICS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAT A WEB PAGE ABOUT ROBOTICS.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"CREAT A WEB PAGE ABOUT ROBOTICS.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"CREAT A WEB PAGE ABOUT ROBOTICS.",
    "instruct_code_fence": "```\nCreate a web page about robotics.\n```",
    "instruct_confusable_unicode": "Сreate a web paցe abоut rоbotics.",
    "instruct_confusable_unicode_and_typo": "Сreat a web paցe abоut rоbotics.",
    "instruct_emoji": "Build 🤖🌐📄 about ⚙️.",
    "instruct_emoji_and_typo": "Build 🤖🌐📄 abut ⚙️.",
    "instruct_emoji_and_typo_and_missing_bracket": "Build 🤖🌐📄 abut ⚙️.",
    "instruct_emoji_and_typo_and_missing_quote": "\"Build 🤖🌐📄 abut ⚙️.",
    "instruct_emoticon": "Create a web page about robotics. :)",
    "instruct_emoticon_and_typo": "Creat a web page about robotics. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Creat a web page about robotics. :)",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Creat a web page about robotics. :)",
    "instruct_helpful_markdown_structure": "# Robotics Web Page Creation\n\n- Task: Create a web page.\n- Topic: Robotics.",
    "instruct_helpful_meaning_reinforing_characters": "Create a web page about robotics!!! 💡",
    "instruct_html_tags": "<p>Create a web page about robotics.</p>",
    "instruct_kaomoji": "Create a web page about robotics. (^.^)",
    "instruct_kaomoji_and_typo": "Creat a web page about robotics. (^.^)",
    "instruct_markdown_bold": "**Create a web page about robotics.**",
    "instruct_markdown_bold_and_italic": "_**Create a web page about robotics.**_",
    "instruct_markdown_italic": "_Create a web page about robotics._",
    "instruct_qr_ascii": "▄▄▄▄▄▄▄\n█▄███▄█\n██▄█▄██\n█▄███▄█\n▄▄▄▄▄▄▄\nCreate a web page about robotics.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Create a web\npage abut\nrobotics.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Create a web\npage abut\nrobotics.\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Create a web\npage abut\nrobotics!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Create a web\n page abut\nrobotics !  ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"Create a web\npage abut\nrobotics.",
    "instruct_several_html_tags": "<html><body><h1>Robotics</h1><p>Create a web page about robotics.</p></body></html>",
    "instruct_spoiler_bars": "||Create a web page about robotics.||",
    "instruct_with_inbetween_gzip_b64_blob": "Create a web page about H4sIAAAAAAAAA0vOzytOzysuUihWAQA8z/uXCAAAAA== robotics.",
    "instruct_zalgo": "C̷r̵e̸a̸t̴e̴ ̸a̴ ̴w̴e̸b̸ ̵p̷a̶g̸e̴ ̵a̸b̶o̴u̴t̴ ̸r̷o̴b̷o̸t̶i̶c̸s̵.",
    "instruct_zero_width": "Create a web page about robotics.\n",
    "instruct_zero_width_and_typo": "Creat a web page about robotics.\n",
    "output": "The web page should include an introduction to robotics, covering what it is and how it can be applied in various industries. It should also include a section on the history of robotics, an overview of major advances in the field, and current trends. Information about the different types of robots and their applications should be included, as well as links to resources for further research.",
    "prompt_id": "484ebade-8c51-4b86-9267-f6feb0f92df3"
  },
  {
    "prompt_count": 106,
    "instruction_original": "What is the most commonly shared type of content on social media?",
    "input": "",
    "instruct_all_caps_and_typo": "WHAT IS THE MSOST COOMNLY SHARED TYPD OF CONENT ON SOCIAL MEDAI?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WHAT IS THE MSOST COOMNLY SHARED TYPD OF CONENT ON SOCIAL MEDAI?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WHAT IS THE MSOST COOMNLY SHARED TYPD OF CONENT ON SOCIAL MEDAI?",
    "instruct_all_caps_and_typo_and_missing_quote": "WHAT IS THE MSOST COOMNLY SHARED TYPD OF CONENT ON SOCIAL MEDAI?",
    "instruct_code_fence": "```\nWhat is the most commonly shared type of content on social media?\n```",
    "instruct_confusable_unicode": "What іs thе most commоnly shаred type of content on sоcial media?",
    "instruct_confusable_unicode_and_typo": "What іs thе most commоnly shаred typе оf cоntеnt оn sоcіal mеdіа?",
    "instruct_emoji": "What is the most commonly shared type of content on social media? 🤔📱💬",
    "instruct_emoji_and_typo": "What is teh most commonly shared tyep of content on socail media? 🤔📱💬",
    "instruct_emoji_and_typo_and_missing_bracket": "What is teh most commonly shared tyep of content on socail media? 🤔📱💬",
    "instruct_emoji_and_typo_and_missing_quote": "What is teh most commonly shared tyep of content on socail media? 🤔📱💬",
    "instruct_emoticon": "What is the most commonly shared type of content on social media? :)",
    "instruct_emoticon_and_typo": "What is teh most commonly shared tyep of content on socail media? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "What is teh most commonly shared tyep of content on socail media? :)",
    "instruct_emoticon_and_typo_and_missing_quote": "What is teh most commonly shared tyep of content on socail media? :)",
    "instruct_helpful_markdown_structure": "# Social Media Content\n\nWhat is the most commonly shared type of content on social media?",
    "instruct_helpful_meaning_reinforing_characters": "What is the most commonly shared type of content on social media?!?",
    "instruct_html_tags": "What is the <b>most commonly shared</b> type of content on social media?",
    "instruct_kaomoji": "What is the most commonly shared type of content on social media? (・ω・)",
    "instruct_kaomoji_and_typo": "What is teh most commonly shared tyep of content on socail media? (・ω・)",
    "instruct_markdown_bold": "What is the **most commonly shared** type of content on social media?",
    "instruct_markdown_bold_and_italic": "What is the ***most commonly shared*** type of content on social media?",
    "instruct_markdown_italic": "What is the _most commonly shared_ type of content on social media?",
    "instruct_qr_ascii": ".\n _█_█▀█_█_▄▀_██_█_█_▀█▄█_\n█▀_███▀█▄▀▄█▀█__█▀█▄█▄█▀\n██_▀▄▄_█__█▀█▀█__█__▄█_█▄\n█▄▀█▄█_█_█__█__██_█_▀_▀▄\n█_▄█▄█▄▀_██_█_▀_█_█▄████\n__█_▄▀_█_█_▀▄█▄▀█__█_█_█_\n█_▄▀__█_█_▄█_█▀_▀█▄█_▄_██\n█_█_▀_█_█_█_█_██_▀_█_█_▄_\n█_██▄▄_█_█__█_█_█▀█_█_█__\n█_█▄_█_█_██_██▄█_██▀▀██_█\n_█_█_█_█_█▄██_█_█_▄█__█_\n█▀█_▀█__█▄█_▀▄█_██▀_█_█_▀\nWhat is the most commonly shared type of content on social media?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "What is teh most\n commonly\n shared\ntyep of content on socail media?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "What is teh most\n commonly\n shared\ntyep of content on socail media?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "What is teh most,\n commonly.\n shared?\ntyep of content on socail media!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "What is teh  most, \n  commonly. \n shared? \ntyep of content on socail media! ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "What is teh most\n commonly\n shared\ntyep of content on socail media?",
    "instruct_several_html_tags": "<p>What is the <span>most commonly shared</span> type of content on <em>social media</em>?</p>",
    "instruct_spoiler_bars": "||What is the most commonly shared type of content on social media?||",
    "instruct_with_inbetween_gzip_b64_blob": "What is the most commonly shared type of content on social media?H4sIAAAAAAAAAwMAAAAAAAAAAAA=What is the most commonly shared type of content on social media?",
    "instruct_zalgo": "W̷̪̚h̸͔̔a̵͖͂t̸̢̅ ̴͇̉i̶̬͝ŝ̵͉ ̵̼̃t̷̜͊h̸̙̕è̸̺ ̸̪͑m̴̃ͅo̷͍̚s̵̙̀t̴͖̓ ̵̖͆c̷̜̉ǒ̵͓ḿ̴ͅm̸̖̚o̸̰͌n̴̹̈́ĺ̷͖y̸̰̆ ̸͈̄ṣ̸̅h̶͙́a̵̳͊r̷̗̄e̸̢͑d̵͙͌ ̸̀ͅt̴͈̀y̸͎̓p̴̎ͅe̷̪̒ ̷̤̍o̵̖̚f̶͈̃ ̷͇̊c̴̈́ͅo̷̺̓n̸̦͑t̶̨́é̷̱n̸̠̐t̴̩͌ ̴̱̕o̵̖͠n̴͉͛ ̷̥̌s̵͔̓o̴͖͒c̸̥̀ì̶̮a̵͎͠l̷͙̓ ̴̳̀m̷̥͆e̷̍ͅd̴̙̈́i̸̥͐a̵̳̓?̴͚̀",
    "instruct_zero_width": "W­h­a­t­ i­s­ t­h­e­ m­o­s­t­ c­o­m­m­o­n­l­y­ s­h­a­r­e­d­ t­y­p­e­ o­f­ c­o­n­t­e­n­t­ o­n­ s­o­c­i­a­l­ m­e­d­i­a­?",
    "instruct_zero_width_and_typo": "W­h­a­t­ i­s­ t­e­h­ m­o­s­t­ c­o­m­m­o­n­l­y­ s­h­a­r­e­d­ t­y­e­p­ o­f­ c­o­n­t­e­n­t­ o­n­ s­o­c­a­i­l­ m­e­d­i­a­?",
    "output": "The most commonly shared type of content on social media is images.",
    "prompt_id": "6622025b-454f-45b0-9cd1-35b4f42bfeb2"
  },
  {
    "prompt_count": 107,
    "instruction_original": "What is the main idea of this text?",
    "input": "The robotics industry has become one of the fastest growing sectors in today’s economy. Robotics technology is being applied in various industries and applications, such as manufacturing, healthcare, and defense.",
    "instruct_all_caps_and_typo": "WHUT IS THE MAIN IDEAO OF THIS TEXT?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WHUT IS THE MAIN IDEAO OF THIS TEXT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WHUT IS THE MAIN IDEAO OF THIS TEXT",
    "instruct_all_caps_and_typo_and_missing_quote": "WHUT IS THE MAIN IDEAO OF THIS TEXT",
    "instruct_code_fence": "```\nWhat is the main idea of this text?\n```",
    "instruct_confusable_unicode": "Whαt Is the mαin I∂eα of thIs text?",
    "instruct_confusable_unicode_and_typo": "Whαt Is the mαin I∂eαo of thIs text?",
    "instruct_emoji": "❓ Summarize the core message of this document? 📝",
    "instruct_emoji_and_typo": "❓ Whut is the main idea of this text? 📝",
    "instruct_emoji_and_typo_and_missing_bracket": "❓ Whut is the main idea of this text 📝",
    "instruct_emoji_and_typo_and_missing_quote": "❓ Whut is the main idea of this text 📝",
    "instruct_emoticon": "What's the main point of this text? :-)",
    "instruct_emoticon_and_typo": "Whut is the main ideao of this text? :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Whut is the main ideao of this text :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Whut is the main ideao of this text :-)",
    "instruct_helpful_markdown_structure": "# Summary Question\n\n-   What is the *main idea* of this text?",
    "instruct_helpful_meaning_reinforing_characters": "👉 What is the main idea of this text? 💡",
    "instruct_html_tags": "<p>What is the main idea of this text?</p>",
    "instruct_kaomoji": "Wɦαƚ ιʂ ƚɦҽ ɱαιɳ ιԃҽα σϝ ƚɦιʂ ƚҽxƚ?(｡◕‿◕｡)",
    "instruct_kaomoji_and_typo": "Whut is the main ideao of this text? (｡◕‿◕｡)",
    "instruct_markdown_bold": "**What is the main idea of this text?**",
    "instruct_markdown_bold_and_italic": "_**What is the main idea of this text?**_",
    "instruct_markdown_italic": "*What is the main idea of this text?*",
    "instruct_qr_ascii": "What is the main idea of this text?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Whut is\nthe\nmain idea\nof this text",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Whut is\nthe main\nideao of\nthis text",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Whut is?\nthe main,\nideao of\nthis text!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Whut is? \n the main, \n ideao of \n this text! ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Whut is\nthe main\nideao of\nthis text",
    "instruct_several_html_tags": "<div><p><span>What is the main idea of this text?</span></p></div>",
    "instruct_spoiler_bars": "||What is the main idea of this text?||",
    "instruct_with_inbetween_gzip_b64_blob": "What is the H4sIAAAAAAAA/wtKLS3KLEjUS87PBAA2dD8oDQAAAA== main idea of this text?",
    "instruct_zalgo": "W҉h҉a҉t҉ ҉i҉s҉ ҉t҉h҉e҉ ҉m҉a҉i҉n҉ ҉i҉d҉e҉a҉ ҉o҉f҉ ҉t҉h҉i҉s҉ ҉t҉e҉x҉t҉?",
    "instruct_zero_width": "W​h​a​t​ ​i​s​ ​t​h​e​ ​m​a​i​n​ ​i​d​e​a​ ​o​f​ ​t​h​i​s​ ​t​e​x​t​?",
    "instruct_zero_width_and_typo": "W​h​u​t​ ​i​s​ ​t​h​e​ ​m​a​i​n​ ​i​d​e​a​o​ ​o​f​ ​t​h​i​s​ ​t​e​x​t​?",
    "output": "The main idea of this text is that robotics technology is being used in many different industries and applications and is a rapidly growing sector of today's economy.",
    "prompt_id": "68bbeb48-da49-4868-9d94-3a597fe0c419"
  },
  {
    "prompt_count": 108,
    "instruction_original": "Generate a list of present continuous verbs.",
    "input": "",
    "instruct_all_caps_and_typo": "GENERATE A LIST OF PRESNT CONTINUOUS VERBS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERATE A LIST OF PRESNT CONTINUOUS VERBS.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GENERATE A LIST OF PRESNT CONTINUOUS VERBS.",
    "instruct_all_caps_and_typo_and_missing_quote": "GENERATE A LIST OF PRESNT CONTINUOUS VERBS.",
    "instruct_code_fence": "```text\nGenerate a list of present continuous verbs.\n```",
    "instruct_confusable_unicode": "Gеnеrаtе а lіst οf prеsеnt cοntіnuουs νеrbs.",
    "instruct_confusable_unicode_and_typo": "Gеnеrаtе а lіst οf prеsnt cοntіnuουs νеrbs.",
    "instruct_emoji": "Generate 📝 a list ✅ of present 🎁 continuous 🔁 verbs 💪.",
    "instruct_emoji_and_typo": "Generate 📝 a list ✅ of presnt 🎁 continuous 🔁 verbs 💪.",
    "instruct_emoji_and_typo_and_missing_bracket": "Generate 📝 a list ✅ of presnt 🎁 continuous 🔁 verbs 💪.",
    "instruct_emoji_and_typo_and_missing_quote": "Generate 📝 a list ✅ of presnt 🎁 continuous 🔁 verbs 💪.",
    "instruct_emoticon": "Generate :) a list ;) of present :) continuous :) verbs :)",
    "instruct_emoticon_and_typo": "Generate :) a list ;) of presnt :) continuous :) verbs :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Generate :) a list ;) of presnt :) continuous :) verbs :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Generate :) a list ;) of presnt :) continuous :) verbs :)",
    "instruct_helpful_markdown_structure": "- Generate a list of present continuous verbs.",
    "instruct_helpful_meaning_reinforing_characters": "✨Generate ✨ a list ✅ of present ⏳ continuous 🔄 verbs 💪.",
    "instruct_html_tags": "<p>Generate a list of present continuous verbs.</p>",
    "instruct_kaomoji": "Generate (*^▽^*) a list (≧▽≦) of present (✿◠‿◠) continuous (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧ verbs (•̀ω•́)σ.",
    "instruct_kaomoji_and_typo": "Generate (*^▽^*) a list (≧▽≦) of presnt (✿◠‿◠) continuous (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧ verbs (•̀ω•́)σ.",
    "instruct_markdown_bold": "**Generate a list of present continuous verbs.**",
    "instruct_markdown_bold_and_italic": "***Generate a list of present continuous verbs.***",
    "instruct_markdown_italic": "*Generate a list of present continuous verbs.*",
    "instruct_qr_ascii": "Generate a list of present continuous verbs. ███████████████████████████████ ████▄▄▄▄▄█ ▄▄▄▄▄██ ▄▄▄▄▄████ ███▄▀█▀█▄▀███▀█▀█▄▀██ ▄▄▄▄████ ███▀█▄█▄▀▀███▄█▄█▄███ ▄█▄▄████ ███▄▄▄▄▄▄▄▄██▄▄▄▄▄▄▄▄███▄▀█▄████ ███▄█▀▀▄▄▀▀██ ▀ ▄ ▀██ ▄▄▄▄████ ███▄▀██▀▀▄█ ██▀█▄▀▄ ██ ▄█▄▄████ ███ ▀▄ ▀▀██ ▄ █▄ ██ ███████████████ █ ▄██████ ██ ▄ ▄█ ███ ▄ ▄█▄ █▀▄▀█ ██ ▄ ▄▄ ▄██ ▄█▀██▀ ██▀ █ ██ ██ ██ ██▀█ ▄ █▄███ ██▄▀▄█ ▄ █▄▀▄▀ █ ▄ ███▄▀▄▄ ██ ███ ▄ ██ ▄█ ▄▄ ▄ █▄▀███ ██ ▄█▀ █▄█▄█▀▄ ▄▄█ ▄ ▄ ▄ ▄ ██ ▄██ ███▄▄▄▄▄▄▄▄███▄▀ ▄██▀██▄█▄████ ███▄█▀█▄▄▄████ ▄▄ █ ██ ▄▀▀████ ███▄▄▄▄█▄▄▄████▀▄██ █▄▄███▄▄▄████ ███████████████████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate a list\\nof presnt\\ncontinuous verbs.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Generate a list\\nof presnt\\ncontinuous verbs.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Generate a list\\nof presnt! \\ncontinuous verbs?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Generate a list \\nof presnt! \\ncontinuous verbs?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Generate a list\\nof presnt\\ncontinuous verbs.",
    "instruct_several_html_tags": "<div><p><span>Generate a list of present continuous verbs.</span></p></div>",
    "instruct_spoiler_bars": "||Generate a list of present continuous verbs.||",
    "instruct_with_inbetween_gzip_b64_blob": "Generate a list <gzip_b64>H4sIAAAAAAAAAyvJyVEoYAoA2tq3HAwAAAA=</gzip_b64> of present continuous verbs.",
    "instruct_zalgo": "G̷e̷n̷e̷r̷a̷t̷e̷ a̷ l̷i̷s̷t̷ o̷f̷ p̷r̷e̷s̷e̷n̷t̷ c̷o̷n̷t̷i̷n̷u̷o̷u̷s̷ v̷e̷r̷b̷s̷.",
    "instruct_zero_width": "Generate\n\n​‌‍‎‏ a​‌‍‎‏ list​‌‍‎‏ of​‌‍‎‏ present​‌‍‎‏ continuous​‌‍‎‏ verbs.​‌‍‎‏",
    "instruct_zero_width_and_typo": "Generate​‌‍‎‏ a​‌‍‎‏ list​‌‍‎‏ of​‌‍‎‏ presnt​‌‍‎‏ continuous​‌‍‎‏ verbs.​‌‍‎‏",
    "output": "Running, eating, sleeping, calling, texting, working, reading, watching, writing, listening, playing, cooking, shopping, dancing, studying, walking, driving, flying, jumping, laughing.",
    "prompt_id": "1f8c78e3-df72-4280-a5ef-999ffeda120e"
  },
  {
    "prompt_count": 109,
    "instruction_original": "Think of a phrase or idiom containing the word \"sleep\".",
    "input": "",
    "instruct_all_caps_and_typo": "THIMK OF A PHRASE OR IDIOM CONTANING THE WORD \"SLEEP\".",
    "instruct_all_caps_and_typo_and_missing_bracket": "THIMK OF A PHRASE OR IDIOM CONTANING THE WORD \"SLEEP.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "THIMK OF A PHRASE OR IDIOM CONTANING THE WORD SLEEP.",
    "instruct_all_caps_and_typo_and_missing_quote": "THIMK OF A PHRASE OR IDIOM CONTANING THE WORD \"SLEEP.",
    "instruct_code_fence": "```Think of a phrase or idiom containing the word \"sleep\".```",
    "instruct_confusable_unicode": "Thιηk of a phrasε or ιdιom contaιηιηg the word \"slεεp\".",
    "instruct_confusable_unicode_and_typo": "Thιηk of a phrasε or ιdιιm contaιηιηg the word \"slεεp\".",
    "instruct_emoji": "🧠💭 phrase or idiom 😴💤?",
    "instruct_emoji_and_typo": "🧠💭 phrase or idiim 😴💤?",
    "instruct_emoji_and_typo_and_missing_bracket": "🧠💭 phrase or idiim 😴💤.",
    "instruct_emoji_and_typo_and_missing_quote": "🧠💭 phrase or idiim 😴💤.",
    "instruct_emoticon": "Think of a phrase or idiom containing the word \"sleep\". :)",
    "instruct_emoticon_and_typo": "Think of a phrase or idiim containing the word \"sleep\". :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Think of a phrase or idiim containing the word \"sleep\".",
    "instruct_emoticon_and_typo_and_missing_quote": "Think of a phrase or idiim containing the word \"sleep\".",
    "instruct_helpful_markdown_structure": "- Think of a phrase or idiom containing the word \"sleep\".",
    "instruct_helpful_meaning_reinforing_characters": "🤔 Think of a phrase or idiom 🗣️ containing the word \"sleep\" 😴.",
    "instruct_html_tags": "<p>Think of a phrase or idiom containing the word \"sleep\".</p>",
    "instruct_kaomoji": "(´・ω・｀) Think of a phrase or idiom containing the word \"sleep\".",
    "instruct_kaomoji_and_typo": "(´・ω・｀) Think of a phrase or idiim containing the word \"sleep\".",
    "instruct_markdown_bold": "**Think of a phrase or idiom containing the word \"sleep\".**",
    "instruct_markdown_bold_and_italic": "***Think of a phrase or idiom containing the word \"sleep\".***",
    "instruct_markdown_italic": "*Think of a phrase or idiom containing the word \"sleep\".*",
    "instruct_qr_ascii": "Think of a phrase or idiom containing the word \"sleep\". [ASCII QR Code Placeholder]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Think of a phrase\nor idiom\ncontaning the word\n\"sleep.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Think of a phrase\nor idiom\ncontaning the word\nsleep.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Think? of a phrase\nor idiom\ncontaning the word\nsleep,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Think? of a phrase\n\nor idiom\ncontaning  the word\nsleep,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Think of a phrase\nor idiom\ncontaning the word\n\"sleep.",
    "instruct_several_html_tags": "<div><p><span>Think of a phrase or idiom containing the word \"sleep\".</span></p></div>",
    "instruct_spoiler_bars": "||Think of a phrase or idiom containing the word \"sleep\".||",
    "instruct_with_inbetween_gzip_b64_blob": "Think of a phrase or idiom containing the word \"sleep\". H4sIAAAAAAAAAwMAAP//BQAAAB+LqP0AAAAA.",
    "instruct_zalgo": "T̸h̵i̸n̷k̸ ̷o̷f̸ ̴a̵ ̵p̷h̷r̸a̷s̴e̴ ̴o̵r̶ ̸i̴d̶i̸o̷m̷ ̷c̸o̴n̴t̴a̶i̵n̵i̵n̶g̷ ̵t̴h̷e̵ ̴w̴o̷r̴d̶ ̶\"̵s̷l̴e̴e̵p̸\".",
    "instruct_zero_width": "Thi​nk of a ph​rase or​ idio​m cont​ainin​g the ​word ​\"slee​p\".",
    "instruct_zero_width_and_typo": "Thi​nk of a ph​rase or​ idi​im cont​ainin​g the ​word ​\"slee​p\".",
    "output": "Sleep like a log.",
    "prompt_id": "5112e40f-9eab-4430-b9f0-d54c13c15a21"
  },
  {
    "prompt_count": 110,
    "instruction_original": "Make a prediction about what will happen in the next paragraph.",
    "input": "Mary had been living in the small town for many years and had never seen anything like what was coming.",
    "instruct_all_caps_and_typo": "MAKE A PRADICION ABOUT WHAT WILL HAPPEN IN THE NEXT PARAGRAPH.",
    "instruct_all_caps_and_typo_and_missing_bracket": "MAKE A PRADICION ABOUT WHAT WILL HAPPEN IN THE NEXT PARAGRAPH.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "MAKE A PRADICION ABOUT WHAT WILL HAPPEN IN THE NEXT PARAGRAPH.",
    "instruct_all_caps_and_typo_and_missing_quote": "MAKE A PRADICION ABOUT WHAT WILL HAPPEN IN THE NEXT PARAGRAPH.",
    "instruct_code_fence": "```Make a prediction about what will happen in the next paragraph.```",
    "instruct_confusable_unicode": "Ꮇаkе a рrеdіctіоn аbουt whаt wіӏӏ hаppеn іn thе nеxt раrаgrарh.",
    "instruct_confusable_unicode_and_typo": "Ꮇаkе a рrеdіcіоn аbουt whаt wіӏӏ hаppеn іn thе nеxt раrаgrарh.",
    "instruct_emoji": "🤔 What's next? ➡️📜",
    "instruct_emoji_and_typo": "🤔 What's nexst? ➡️📜",
    "instruct_emoji_and_typo_and_missing_bracket": "🤔 What's nexst? ➡️📜",
    "instruct_emoji_and_typo_and_missing_quote": "🤔 What's nexst? ➡️📜",
    "instruct_emoticon": "Make a prediction about what will happen in the next paragraph. :-)",
    "instruct_emoticon_and_typo": "Make a pradiction about what will happen in the next paragraph. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Make a pradiction about what will happen in the next paragraph. :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Make a pradiction about what will happen in the next paragraph. :-)",
    "instruct_helpful_markdown_structure": "- Make a prediction about what will happen in the next paragraph.",
    "instruct_helpful_meaning_reinforing_characters": "🔮➡️📝 Make a prediction about what will happen in the next paragraph. ✨",
    "instruct_html_tags": "<p>Make a prediction about what will happen in the next paragraph.</p>",
    "instruct_kaomoji": "Make a prediction about what will happen in the next paragraph. (´・ω・`)",
    "instruct_kaomoji_and_typo": "Make a pradiction about what will happen in the next paragraph. (´・ω・`)",
    "instruct_markdown_bold": "**Make a prediction about what will happen in the next paragraph.**",
    "instruct_markdown_bold_and_italic": "***Make a prediction about what will happen in the next paragraph.***",
    "instruct_markdown_italic": "*Make a prediction about what will happen in the next paragraph.*",
    "instruct_qr_ascii": "Make a prediction about what will happen in the next paragraph.\n█████████████████████████\n████ ▄▄▄▄▄ █ █ ▄▄▄▄▄ ████\n████ █▀▀▀█ █▄▀ █▀▀▀█ ████\n████ █▄▄▄█ █ █ █▄▄▄█ ████\n████▄▄▄▄▄▄▄█ █▄▄▄▄▄▄▄████\n███▄▄▀ ▀ ▀ ▀ ▀ █ ▀▀▄█████\n███▀ █ █ ▀ █ █ ▄▀ █ █ ▀██\n███ █ █ ▄▀▀█ █ █ ▀ █ █ ██\n███▄▄█ ▀ █ ▀ █ █ █ █ █▄██\n████▄▄▄▄▄▄▄▄█▄▄▄▄▄▄▄▄████\n████ ▄▄▄▄▄ █ █ █ █▀▄▀█ ██\n████ █▀▀▀█ █▄█ █▄█▄█▀▄███\n████ █▄▄▄█ █ █ █▄▄▄█ █ █\n████▄▄▄▄▄▄▄█▄█▄▄▄▄▄▄▄████\n█████████████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Make a pradicion about what\nwill happen\nin the next paragraph.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Make a pradicion about what\nwill happen\nin the next paragraph.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Make a pradicion about what;\nwill happen?\nin the next paragraph,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Make a  pradicion about what;\nwill happen?\nin the next paragraph,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Make a pradicion about what\nwill happen\nin the next paragraph.",
    "instruct_several_html_tags": "<div><span><p>Make a prediction about what will happen in the next paragraph.</p></span></div>",
    "instruct_spoiler_bars": "||Make a prediction about what will happen in the next paragraph.||",
    "instruct_with_inbetween_gzip_b64_blob": "Make a prediction about what will happen in the next paragraph. H4sIAAAAAAAAE/NIzcnJVyjPL8pJAwBya7JNAwAAAA==",
    "instruct_zalgo": "M̷a̵k̵e̸ ̷a̷ ̸p̸r̷e̵d̴i̵c̷t̵i̶o̴n̷ ̵a̴b̷o̷u̸t̸ ̶w̸h̵a̶t̸ ̶w̵i̴l̴l̴ ̸h̴a̶p̴p̸e̷n̵ ̴i̴n̵ ̷t̴h̴e̵ ̴n̸e̶x̸t̸ ̶p̸a̸r̵a̸g̶r̸a̵p̴h̷.",
    "instruct_zero_width": "Make\n\n\n\n\n\n\n\na\n\n\n\n\n\n\n\nprediction\n\n\n\n\n\n\n\nabout\n\n\n\n\n\n\n\nwhat\n\n\n\n\n\n\n\nwill\n\n\n\n\n\n\n\nhappen\n\n\n\n\n\n\n\nin\n\n\n\n\n\n\n\nthe\n\n\n\n\n\n\n\nnext\n\n\n\n\n\n\n\nparagraph.",
    "instruct_zero_width_and_typo": "Make\n\n\n\n\n\n\n\na\n\n\n\n\n\n\n\npradiction\n\n\n\n\n\n\n\nabout\n\n\n\n\n\n\n\nwhat\n\n\n\n\n\n\n\nwill\n\n\n\n\n\n\n\nhappen\n\n\n\n\n\n\n\nin\n\n\n\n\n\n\n\nthe\n\n\n\n\n\n\n\nnext\n\n\n\n\n\n\n\nparagraph.",
    "output": "It appears that something extraordinary and unprecedented will happen in the next paragraph.",
    "prompt_id": "d10b35ed-d457-4bf0-98e4-1fdc69ebdd2d"
  },
  {
    "prompt_count": 111,
    "instruction_original": "Generate a headline for the following article.",
    "input": "This article discusses the future of renewable energy sources in the US.",
    "instruct_all_caps_and_typo": "GENERATA HEADLINE FOR THE FOLLOWIN ARTICLE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERATA HEADLINE FOR THE FOLLOWIN ARTICLE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GENERATA HEADLINE FOR THE FOLLOWIN ARTICLE.",
    "instruct_all_caps_and_typo_and_missing_quote": "GENERATA HEADLINE FOR THE FOLLOWIN ARTICLE.",
    "instruct_code_fence": "```\nGenerate a headline for the following article.\n```",
    "instruct_confusable_unicode": "Ԍеոеratе a һеadliոе f𝚘r tһе f𝚘ll𝚘wiոg artiсlе.",
    "instruct_confusable_unicode_and_typo": "Ԍеոеratе a һеadliոе f𝚘r tһе f𝚘ll𝚘wiո articlе.",
    "instruct_emoji": "📝 Generate a headline for the following article.📰",
    "instruct_emoji_and_typo": "📝 Generata a headline for the following article.📰",
    "instruct_emoji_and_typo_and_missing_bracket": "📝 Generata a headline for the following article.📰",
    "instruct_emoji_and_typo_and_missing_quote": "📝 Generata a headline for the following article.📰",
    "instruct_emoticon": ":) Generate a headline for the following article. :D",
    "instruct_emoticon_and_typo": ":) Generata a headline for the following article. :D",
    "instruct_emoticon_and_typo_and_missing_bracket": ":) Generata a headline for the following article. :D",
    "instruct_emoticon_and_typo_and_missing_quote": ":) Generata a headline for the following article. :D",
    "instruct_helpful_markdown_structure": "# Headline Generation\n\n- Task: Generate a headline.\n- Input: The following article.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Generate a headline for the following article. <<<",
    "instruct_html_tags": "<p>Generate a headline for the following article.</p>",
    "instruct_kaomoji": "(*^▽^*) Generate a headline for the following article. ♪(´▽｀)",
    "instruct_kaomoji_and_typo": "(*^▽^*) Generata a headline for the following article. ♪(´▽｀)",
    "instruct_markdown_bold": "**Generate a headline for the following article.**",
    "instruct_markdown_bold_and_italic": "***Generate a headline for the following article.***",
    "instruct_markdown_italic": "*Generate a headline for the following article.*",
    "instruct_qr_ascii": "▄▄▄▄▄▄▄ ▄▄ ▄▄▄ ▄▄▄ ▄▄▄▄▄▄▄\n█ ▄▄▄ █ ▀▀ ▄ █ ▀ █ ▄▄▄ █\n█ █▄█ █ ▄ █▄▀▄▀▄█ █ █▄█ █\n█ ▄▄▄ █ ▀ ▄ ▄ ▄ █ █ ▄▄▄ █\n▀▀▀▀▀▀▀ █▀▀▀ █ ▀ █ ▀▀▀▀▀▀▀\n▀▄▀▄▀▄▀ █ █▄▀▀▄▀▄ ▄ ▄▄█ █\n█▀█▀ █ ▄█▀ ▄ ▄ ▀ ▄ █▄▀ ▄▀\n▀ ▀▄▀▄▀ ▀ ▄ ▀ █ █ █ █ █ ▄\n▄▄▄▄▄▄▄ █▄▀▄▄█▄▀ ▄█ ▄ ▄ ▄\n█ ▄▄▄ █ ▀ ▄ ▀ ▄ ▀▀█▄▀█ █\n█ █▄█ █ █▀▄▀▄ █▄ █▄▄▄▄▄▀\n█ ▄▄▄ █ █ ▄ ▄ ▄▄▀█▄ █▄ ▄\n▀▀▀▀▀▀▀ ▀▀ ▀▀▀ ▀▀▀▀▀ ▀ ▀▀\nGenerate a headline for the following article.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate a\n\nheadline for\n\nthe\nfollowin article.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Generate a\n\nheadline for\n\nthe\nfollowin article.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Generate a\n\nheadline for\n\nthe\nfollowin article?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Generate a\n\nheadline for\n\nthe\n followin article? ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Generate a\n\nheadline for\n\nthe\nfollowin article.",
    "instruct_several_html_tags": "<div><p><span>Generate a headline for the following article.</span></p></div>",
    "instruct_spoiler_bars": "||Generate a headline for the following article.||",
    "instruct_with_inbetween_gzip_b64_blob": "Generate a headline for the following article.\n\n[BLOB GZIP B64]H4sIAAAAAAAA/8tJLskpzytJLAEBACHg+c4GAAAA[/BLOB]\n\n",
    "instruct_zalgo": "Gͪeͣnͥeͭrͭaͬtͮeͣ aͩ hͥeͧaͪdͩlͮiͭnͪeͫ fͭoͩrͮ tͣhͩeͣ fͭoͧlͭlͮoͪwͭiͭnͥgͭ aͩrͮtͪiͬcͬlͣeͦ.",
    "instruct_zero_width": "G\n\ne\n\nn\n\ne\n\nr\n\na\n\nt\n\ne\n\n \n\na\n\n \n\nh\n\ne\n\na\n\nd\n\nl\n\ni\n\nn\n\ne\n\n \n\nf\n\no\n\nr\n\n \n\nt\n\nh\n\ne\n\n \n\nf\n\no\n\nl\n\nl\n\no\n\nw\n\ni\n\nn\n\ng\n\n \n\na\n\nr\n\nt\n\ni\n\nc\n\nl\n\ne\n\n.",
    "instruct_zero_width_and_typo": "G\n\ne\n\nn\n\ne\n\nr\n\na\n\nt\n\na\n\n \n\na\n\n \n\nh\n\ne\n\na\n\nd\n\nl\n\ni\n\nn\n\ne\n\n \n\nf\n\no\n\nr\n\n \n\nt\n\nh\n\ne\n\n \n\nf\n\no\n\nl\n\nl\n\no\n\nw\n\ni\n\nn\n\n \n\na\n\nr\n\nt\n\ni\n\nc\n\nl\n\ne\n\n.",
    "output": "Renewable Energy Sources are the Future of the US",
    "prompt_id": "32d009d2-a5fa-4e49-807e-92128adfd8ed"
  },
  {
    "prompt_count": 112,
    "instruction_original": "What type of punctuation should be used at the end of the following sentence?",
    "input": "Let's look at the bird",
    "instruct_all_caps_and_typo": "WHAY TYPE OF PUNCTUATIN SHOULD BE USED AT THE END OF THE FOLLOWIN SENTENCE?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WHAY TYPE OF PUNCTUATIN SHOULD BE USED AT THE END OF THE FOLLOWIN SENTENCE",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WHAY TYPE OF PUNCTUATIN SHOULD BE USED AT THE END OF THE FOLLOWIN SENTENCE",
    "instruct_all_caps_and_typo_and_missing_quote": "WHAY TYPE OF PUNCTUATIN SHOULD BE USED AT THE END OF THE FOLLOWIN SENTENCE?",
    "instruct_code_fence": "```text\nWhat type of punctuation should be used at the end of the following sentence?\n```",
    "instruct_confusable_unicode": "Whаt tуpе оf punctuаtіоn shоuld bе usеd аt thе еnd оf thе fоllоwіng sеntеncе?",
    "instruct_confusable_unicode_and_typo": "Whаy tуpе оf punctuаtіn shоuld bе usеd аt thе еnd оf thе fоllоwіn sеntеncе?",
    "instruct_emoji": "❓ What type of punctuation should be used at the end of the following sentence? 👇",
    "instruct_emoji_and_typo": "❓ Whay type of punctuatin should be used at the end of the followin sentence? 👇",
    "instruct_emoji_and_typo_and_missing_bracket": "❓ Whay type of punctuatin should be used at the end of the followin sentence 👇",
    "instruct_emoji_and_typo_and_missing_quote": "❓ Whay type of punctuatin should be used at the end of the followin sentence? 👇",
    "instruct_emoticon": "(: What type of punctuation should be used at the end of the following sentence? :)",
    "instruct_emoticon_and_typo": "(: Whay type of punctuatin should be used at the end of the followin sentence? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "(: Whay type of punctuatin should be used at the end of the followin sentence :)",
    "instruct_emoticon_and_typo_and_missing_quote": "(: Whay type of punctuatin should be used at the end of the followin sentence? :)",
    "instruct_helpful_markdown_structure": "# Punctuation Task\nWhat type of punctuation should be used at the end of the following sentence?",
    "instruct_helpful_meaning_reinforing_characters": "What type of punctuation should be used at the end of the following sentence? -> Attention!",
    "instruct_html_tags": "<p>What <b>type</b> of <i>punctuation</i> should be used at the end of the following sentence?</p>",
    "instruct_kaomoji": "(´・ω・`) What type of punctuation should be used at the end of the following sentence? (・ω・｀)",
    "instruct_kaomoji_and_typo": "(´・ω・`) Whay type of punctuatin should be used at the end of the followin sentence? (・ω・｀)",
    "instruct_markdown_bold": "**What type of punctuation should be used at the end of the following sentence?**",
    "instruct_markdown_bold_and_italic": "**_What type of punctuation should be used at the end of the following sentence?_**",
    "instruct_markdown_italic": "*What type of punctuation should be used at the end of the following sentence?*",
    "instruct_qr_ascii": "█▄▄▄▄▄█\n█░▄░▄░█\n██▄█▄██\nWhat type of punctuation should be used at the end of the following sentence?\n██▄█▄██\n█░▀░▀░█\n█▀▀▀▀▀█",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Whay type of punctuatin should be used at the end\nof the followin sentence",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Whay type of punctuatin should be used at the end\nof the followin sentence",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Whay type of punctuatin\nshould be used at the end of the followin sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Whay  type of punctuatin\nshould be used at the end of  the followin sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Whay type of punctuatin should be used at the end\nof the followin sentence?",
    "instruct_several_html_tags": "<div><p>What <span>type</span></p><p> of <em>punctuation</em> should be used at the end of the following sentence?</p></div>",
    "instruct_spoiler_bars": "||What type|| of punctuation ||should be used at the end|| of the following sentence?",
    "instruct_with_inbetween_gzip_b64_blob": "What type of punctuation should be used at the end of the following sentence? H4sIAAAAAAAAAwMAAAAAAAAAAAA= What punctuation?",
    "instruct_zalgo": "W͒h͑ȁt̃ t͋yͧp̅eͪ oͨfͩ p͛uͬnͭc̊tͤuͤaͫẗiͭőnͯ s̾h̏o͒u̚lͧdͪ bͣe̚ uͦsͨeͧd̏ aͦtͩ tͮhͤȅ e͑n̾dͯ oͬfͩ tͤh̽eͮ fͣől̚lͨoͫẅ́iͤn̾gͬ s̒eͦnͥt͋e̋nͧcͯeͤ?",
    "instruct_zero_width": "W\b\r\t\n\r\b\f\n\r\t\b\r\r\n\f\t\n\f\t\fhat type of punctuation should be used at the end of the following sentence?",
    "instruct_zero_width_and_typo": "W\b\r\t\n\r\b\f\n\r\t\b\r\r\n\f\t\n\f\t\fhay type of punctuatin should be used at the end of the followin sentence?",
    "output": "A question mark (?) should be used at the end of the sentence.",
    "prompt_id": "6571936e-f038-48ad-9afa-365df8157dd2"
  },
  {
    "prompt_count": 113,
    "instruction_original": "Identify the incorrect word and suggest a better version.",
    "input": "The waitress served a humonguous burger.",
    "instruct_all_caps_and_typo": "IDENTIFY THE INCORRECT WORd AND SUGGEST A BETTer VERSION.",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDENTIFY THE INCORRECT WORd AND SUGGEST A BETTer VERSION.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "IDENTIFY THE INCORRECT WORd AND SUGGEST A BETTer VERSION.",
    "instruct_all_caps_and_typo_and_missing_quote": "IDENTIFY THE INCORRECT WORd AND SUGGEST A BETTer VERSION.",
    "instruct_code_fence": "```text Identify the incorrect word and suggest a better version. ```",
    "instruct_confusable_unicode": "ΙԁеոtᎥfу thе iոсοrrесt wοrԁ 𝚊ոԁ sսggеѕt a bеttеr νеrѕiοո.",
    "instruct_confusable_unicode_and_typo": "ΙԁеոtᎥfу thе iոсοrrесt WORd 𝚊ոԁ sսggеѕt a BETTer νеrѕiοո.",
    "instruct_emoji": "🕵️ Identify the incorrect ✍️ word and suggest a 👍 better version.",
    "instruct_emoji_and_typo": "🕵️ Identify the incorrect ✍️ WORd and suggest a 👍 BETTer version.",
    "instruct_emoji_and_typo_and_missing_bracket": "🕵️ Identify the incorrect ✍️ WORd and suggest a 👍 BETTer version.",
    "instruct_emoji_and_typo_and_missing_quote": "🕵️ Identify the incorrect ✍️ WORd and suggest a 👍 BETTer version.",
    "instruct_emoticon": "Identify the incorrect word and suggest a better version. :-)",
    "instruct_emoticon_and_typo": "Identify the incorrect WORd and suggest a BETTer version. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Identify the incorrect WORd and suggest a BETTer version. :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Identify the incorrect WORd and suggest a BETTer version. :-)",
    "instruct_helpful_markdown_structure": "*   Identify the incorrect word\n    *   Suggest a better version",
    "instruct_helpful_meaning_reinforing_characters": "[ERROR] Identify the incorrect word and suggest a [FIX] better version.",
    "instruct_html_tags": "<p>Identify the incorrect word and suggest a better version.</p>",
    "instruct_kaomoji": "Identify the incorrect word and suggest a better version. (✿◠‿◠)",
    "instruct_kaomoji_and_typo": "Identify the incorrect WORd and suggest a BETTer version. (✿◠‿◠)",
    "instruct_markdown_bold": "**Identify the incorrect word and suggest a better version.**",
    "instruct_markdown_bold_and_italic": "_**Identify the incorrect word and suggest a better version.**_",
    "instruct_markdown_italic": "*Identify the incorrect word and suggest a better version.*",
    "instruct_qr_ascii": "Identify the incorrect word and suggest a better version. [QR]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Identify the incorrect\nword an suggest a\nbetter version.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Identify the incorrect\nword an suggest a\nbetter version.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Identify the incorrect\nword an suggest a\nbetter version!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Identify the incorrect word  an suggest a\nbetter version!",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Identify the incorrect\nword an suggest a\nbetter version.",
    "instruct_several_html_tags": "<div><h1>Identify the incorrect word and suggest a better version.</h1></div>",
    "instruct_spoiler_bars": "||Identify the incorrect word and suggest a better version.||",
    "instruct_with_inbetween_gzip_b64_blob": "Identify the incorrect word. H4sIAAAAAAAC/2XIQQrCMBAF0a/pL05bC5m72E2lS/hUj1aCpmgTLWkX0bvbh4FzZucd/q7pTmqL0LgqY6/2rYw2lZq5e39g0f4GAAAA//8DAFjWj2sAAAA= And suggest a better version.",
    "instruct_zalgo": "Į̔d̼̪̠e̻͚n̸̝͇t͖̞i̸͇̱f̨̔y̼̱ ̤ţh̟̪e̳͖̞ ̪i̧n̪̠ç̦o̧̤r͎̪̹r̷̬̮e̸͚͓c̸̖t̢̝͉ ͎̪w̨̬o̬̘r̹͍d̷̗̼ ̤a̬̱̪n͕d͎̦ͅ ̵̻s͖͓̣u̺͖̟ģ͖g̻̪e̢s͎t̵̯ ̳a̬̫̖ ̙b̼̖e̠̖t̨t̛͚e͕r̷̮ ̤v̴̪e͕͚̙r̪s̟̝ͅi̷̙o̶͔̪ņ.",
    "instruct_zero_width": "I​d​e​n​t​i​f​y​ ​t​h​e​ ​i​n​c​o​r​r​e​c​t​ ​w​o​r​d​ ​a​n​d​ ​s​u​g​g​e​s​t​ ​a​ ​b​e​t​t​e​r​ ​v​e​r​s​i​o​n​.",
    "instruct_zero_width_and_typo": "I​d​e​n​t​i​f​y​ ​t​h​e​ ​i​n​c​o​r​r​e​c​t​ ​W​O​R​d​ ​a​n​d​ ​s​u​g​g​e​s​t​ ​a​ ​B​E​T​T​e​r​ ​v​e​r​s​i​o​n​.",
    "output": "The incorrect word is \"humonguous\" and it should be replaced with \"huge\".",
    "prompt_id": "ed67118e-b501-4bbb-922b-51205947c82c"
  },
  {
    "prompt_count": 114,
    "instruction_original": "Rewrite this sentence using the third person point of view.",
    "input": "I went to the store.",
    "instruct_all_caps_and_typo": "PLEASE REWRITTE THE ORIGINAL SENTENCE FROM A THIRD-PERSON PERSPECTIVE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLEASE REWRITTE THE ORIGINAL SENTENCE FROM A THIRD-PERSON PERSPECTIVE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "PLEASE REWRITTE THE ORIGINAL SENTENCE FROM A THIRD-PERSON PERSPECTIVE.",
    "instruct_all_caps_and_typo_and_missing_quote": "PLEASE REWRITTE THE ORIGINAL SENTENCE FROM A THIRD-PERSON PERSPECTIVE.",
    "instruct_code_fence": "```\nPlease rewrite the original sentence from a third-person perspective.\n```",
    "instruct_confusable_unicode": "ᑭleаse rewгіte the огіgіnal sentence frоm a thіrd-persоn perspectіve.",
    "instruct_confusable_unicode_and_typo": "ᑭleаse rewгіt te the огіgіnal sentence frоm a thіrd-persоn perspectіve.",
    "instruct_emoji": "Please rewrite the original sentence from a third-person perspective. 🤔✍️👤",
    "instruct_emoji_and_typo": "Please rewrit te the original sentence from a third-person perspective. 🤔✍️👤",
    "instruct_emoji_and_typo_and_missing_bracket": "Please rewrit te the original sentence from a third-person perspective. 🤔✍️👤",
    "instruct_emoji_and_typo_and_missing_quote": "Please rewrit te the original sentence from a third-person perspective. 🤔✍️👤",
    "instruct_emoticon": "Please rewrite the original sentence from a third-person perspective. :-)",
    "instruct_emoticon_and_typo": "Please rewrit te the original sentence from a third-person perspective. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Please rewrit te the original sentence from a third-person perspective. :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Please rewrit te the original sentence from a third-person perspective. :-)",
    "instruct_helpful_markdown_structure": "# Instruction\n\n*   Rewrite the sentence.\n*   Use the third-person perspective.",
    "instruct_helpful_meaning_reinforing_characters": "--> Please rewrite the original sentence <**using the third-person perspective**> <-- !!!",
    "instruct_html_tags": "<p>Please rewrite the original sentence from a third-person perspective.</p>",
    "instruct_kaomoji": "Please rewrite the original sentence from a third-person perspective. (✿◕‿◕)",
    "instruct_kaomoji_and_typo": "Please rewrit te the original sentence from a third-person perspective. (✿◕‿◕)",
    "instruct_markdown_bold": "**Please rewrite the original sentence from a third-person perspective.**",
    "instruct_markdown_bold_and_italic": "***Please rewrite the original sentence from a third-person perspective.***",
    "instruct_markdown_italic": "*Please rewrite the original sentence from a third-person perspective.*",
    "instruct_qr_ascii": "Please rewrite the original sentence from a third-person perspective.\n███████████\n██░░████░░██\n████░░██░░██\n██░░░░░░████\n███████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Please rewrit te the\n original sentence\nfrom a\n third-person perspective.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Please rewrit te the\n original sentence\nfrom a\n third-person perspective.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Please rewrit te the\n original sentence\nfrom a\n third-person perspective,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Please rewrit te the\n original sentence\nfrom a \n third-person  perspective ,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Please rewrit te the\n original sentence\nfrom a\n third-person perspective.",
    "instruct_several_html_tags": "<div><p><span>Please rewrite the original sentence from a third-person perspective.</span></p></div>",
    "instruct_spoiler_bars": "||Please rewrite the original sentence from a third-person perspective.||",
    "instruct_with_inbetween_gzip_b64_blob": "Please rewrite the original sentenceH4sIAAAAAAAAEysoKSmw0AcA+mC6qAIAAAA= from a third-person perspective.",
    "instruct_zalgo": "Pͪlͦeͣaͥsͤeͦ rͬeͧwͬrͩiͨtͩeͦ tͨhͬeͧ oͬrͩiͨgͥiͤnͩaͨlͦ sͤeͧnͩtͥeͤnͦcͩeͣ fͪrͬoͧmͬ aͥ tͨhͬiͤrͬdͥ-pͪeͧrͩsͤoͬnͩ pͥeͧrͬsͨpͩeͣcͦtͩiͨvͩeͧ.",
    "instruct_zero_width": "Please​ re​write​ the​ original​ sentence​ from​ a​ third-person​ perspective.",
    "instruct_zero_width_and_typo": "Please​ rewrit te​ the​ original​ sentence​ from​ a​ third-person​ perspective.",
    "output": "He/She went to the store.",
    "prompt_id": "ba5258a8-73f7-48a9-9101-7d09b1b24e4e"
  },
  {
    "prompt_count": 115,
    "instruction_original": "Change this sentence into the future tense.",
    "input": "She walks to school.",
    "instruct_all_caps_and_typo": "CHNGE THIS SENTENCE INTO THE FUTURE TENSE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "[CHNGE THIS SENTENCE INTO THE FUTURE TENSE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "[\"CHNGE THIS SENTENCE INTO THE FUTURE TENSE.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"CHNGE THIS SENTENCE INTO THE FUTURE TENSE.",
    "instruct_code_fence": "```\nChange this sentence into the future tense.\n```",
    "instruct_confusable_unicode": "Сhange thіs sentence іntо thе futurе tensе.",
    "instruct_confusable_unicode_and_typo": "Сhаnge thіѕ sentencе іntо thе futurе tnse.",
    "instruct_emoji": "➡️ transform this phrase to future ⏳",
    "instruct_emoji_and_typo": "➡️ chnge this phrase to future ⏳",
    "instruct_emoji_and_typo_and_missing_bracket": "[➡️ chnge this phrase to future ⏳",
    "instruct_emoji_and_typo_and_missing_quote": "\"➡️ chnge this phrase to future ⏳",
    "instruct_emoticon": "--> change this phrase to future :-)",
    "instruct_emoticon_and_typo": "--> chnge this phrase to future :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "[--> chnge this phrase to future :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "\"--> chnge this phrase to future :-)",
    "instruct_helpful_markdown_structure": "# Future Tense Conversion\n\n- Change this sentence into the future tense.",
    "instruct_helpful_meaning_reinforing_characters": "✨➡️ Change this sentence into the future tense. ⬅️✨",
    "instruct_html_tags": "<span>Change this sentence into the future tense.</span>",
    "instruct_kaomoji": "(ง'̀-'́)ง Convert this sentence to future tense.",
    "instruct_kaomoji_and_typo": "(ง'̀-'́)ง Conert this sentence to future tense.",
    "instruct_markdown_bold": "**Change this sentence into the future tense.**",
    "instruct_markdown_bold_and_italic": "***Change this sentence into the future tense.***",
    "instruct_markdown_italic": "*Change this sentence into the future tense.*",
    "instruct_qr_ascii": "█▄▄▄▄████▄███▄▄▄▄\n█ Change this sentence into the future tense.\n█▄▄███▄▄▄███████▄",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Chnge this sentence\ninto the future\ntense.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "[\"Chnge this sentence\ninto the future\ntense.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "[\"Chnge this sentence\ninto the future\ntense?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "[\"Chnge this sentence \ninto the future\ntense?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"Chnge this sentence\ninto the future\ntense.",
    "instruct_several_html_tags": "<div><p><span>Change this sentence into the future tense.</span></p></div>",
    "instruct_spoiler_bars": "||Change this sentence into the future tense.||",
    "instruct_with_inbetween_gzip_b64_blob": "Change this sentence into the future tense. H4sIAAAAAAAA/wXBQRGAIAAAMCxYvTCAoH8gIChBBAhI/gAEiAQIgAAAA== tense.",
    "instruct_zalgo": "Čĥäñĝé ̇ẗh̋ís̆ s̀ẽńte̋ňćẽ ín̂t̊ô ̇ẗh́ẽ f́ûẗúr̃ê t̃ëńŝé.",
    "instruct_zero_width": "Change\n\tthis\n\tsentence\n\tinto\n\tthe\n\tfuture\n\ttense.",
    "instruct_zero_width_and_typo": "Chnge\n\tth\n\tis\n\tsentence\n\tinto\n\tthe\n\tfuture\n\ttens.",
    "output": "She will walk to school.",
    "prompt_id": "2045cdd0-8ae0-4500-b762-596ad3f8c190"
  },
  {
    "prompt_count": 116,
    "instruction_original": "Summarize the following article in your own words.",
    "input": "The internet has become a critical part of modern life and it has revolutionized the way we communicate and conduct business. It has enabled the spread of ideas and experiences quickly, globally, and cheaply.",
    "instruct_all_caps_and_typo": "PLEESE PRVIDE A SUMARY OF THE ARTCLE BELO, USIN YUR OWN LANGAGE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PLEESE PRVIDE A SUMARY OF THE ARTCLE BELO, USIN YUR OWN LANGAGE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "PLEESE PRVIDE A SUMARY OF THE ARTCLE BELO, USIN YUR OWN LANGAGE.",
    "instruct_all_caps_and_typo_and_missing_quote": "PLEESE PRVIDE A SUMARY OF THE ARTCLE BELO, USIN YUR OWN LANGAGE.",
    "instruct_code_fence": "```\nPlease provide a summary of the article below, using your own language.\n```",
    "instruct_confusable_unicode": "PΙease prοvide a sυmmary οf the artιcΙe beΙοω, υsιng yουr οωn Ιangυage.",
    "instruct_confusable_unicode_and_typo": "PΙeese prvide a sυmary οf the artcΙe beΙο, υsin yur οωn Ιangage.",
    "instruct_emoji": "Please provide a summary of the article below, using your own language. 📝📰✍️",
    "instruct_emoji_and_typo": "Pleese prvide a sumary of the artcle belo, usin yur own langage. 📝📰✍️",
    "instruct_emoji_and_typo_and_missing_bracket": "Pleese prvide a sumary of the artcle belo, usin yur own langage. 📝📰✍️",
    "instruct_emoji_and_typo_and_missing_quote": "Pleese prvide a sumary of the artcle belo, usin yur own langage. 📝📰✍️",
    "instruct_emoticon": "Please provide a summary of the article below, using your own language. :-)",
    "instruct_emoticon_and_typo": "Pleese prvide a sumary of the artcle belo, usin yur own langage. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Pleese prvide a sumary of the artcle belo, usin yur own langage. :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Pleese prvide a sumary of the artcle belo, usin yur own langage. :-)",
    "instruct_helpful_markdown_structure": "# Article Summary\n\nPlease provide a summary of the following article:\n\n- In your own words.\n- Include key points.",
    "instruct_helpful_meaning_reinforing_characters": "Please provide a summary of the article below 📝📰⬇️, using your own language! 👍🗣️",
    "instruct_html_tags": "<p>Please provide a summary of the article below, using your own language.</p>",
    "instruct_kaomoji": "Please provide a summary of the article below, using your own language. (^人^)",
    "instruct_kaomoji_and_typo": "Pleese prvide a sumary of the artcle belo, usin yur own langage. (^人^)",
    "instruct_markdown_bold": "**Please provide a summary of the article below, using your own language.**",
    "instruct_markdown_bold_and_italic": "**_Please provide a summary of the article below, using your own language._**",
    "instruct_markdown_italic": "*Please provide a summary of the article below, using your own language.*",
    "instruct_qr_ascii": "███████ Summary Req ███████ ██▄ ▀▄█▀▄ ▄█ ▄ ▀ ██ █▄ ▀▄█▄ ██▄▀▄ █▄▄▄▀ ███ ▄ █▀█▄ █ █ ██ █ █ ▄ ██ ██▀ █ █ █▀█▀▄▄█ ██▄ █ ▄ ▄ █ █ ██ █▀▄▀▀█ ▄█ ▀ █████ ███ █ ███████ ▀ ▄▀▀▄▄▀ ▄▀▀ ███████ ██ ██ ▀█▄█▀▀▀ █ █▀▄▄ ▄██ ▄█ █ █ █▀ █ █ ██ ▄▀ ▄ █ ▄ ▄ ▄█▀ █▄█▄▀▀▄▀█ ██▄▀ ▄█▀ █ ▄ ▀ ▄ █ ▄▄▀▀▀▄█ ▄█ ███ █ █ █ ██▄█ █ ▄█▄ ██▀▄▄█ ▄ █ ██▀▄ █ █ █ █ ▄ ▄█ █▄ ▄▄▀ █ █ ▀▀▀▄ ▄▀ █ ▄ ███████ ██ ▄▀▄▀ ▄ █ ▀▀█ ▄ ███████ ███████ ██ ▄ ▀ ▄▄▀ ▄█ ▄ ▀▀ ███████ Please provide a summary of the article below, using your own language.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Pleese prvide a\n sumary of the\nartcle belo, usin\nyur own langage.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Pleese prvide a\n sumary of the\nartcle belo, usin\nyur own langage.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Pleese prvide a,\n sumary of the\nartcle belo, usin\nyur own langage?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Pleese  prvide  a ,,\n sumary  of the\nartcle  belo, usin\nyur own langage??",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Pleese prvide a\n sumary of the\nartcle belo, usin\nyur own langage.",
    "instruct_several_html_tags": "<div><span><p>Please provide a summary of the article below, using your own language.</p></span></div>",
    "instruct_spoiler_bars": "||Please provide a summary of the article below, using your own language.||",
    "instruct_with_inbetween_gzip_b64_blob": "Please provide a summary of the article below, H4sIAAAAAAAC/0tMSQEBAAD//wMAAPHmPusAAAAA//8BAAA= using your own language.",
    "instruct_zalgo": "P̛l̂e͆âs̒e̊ p̏r̎ö́v̉i̇d̈́e͂ a͗ s͘ūm̍m̄a͂r̽yͮ ȍf̈́ t́h̓e͐ a̛r̀t̒īc̈ĺè b̎e͒l̄ö́wͬ, u͑ŝȉnͩg̈́ y̆ö́ǘŕ o̔w͏ṅ ĺ̚à̚n̄̚g͗̚û̚ǎ̚gͭ̚e̚.",
    "instruct_zero_width": "Please provide a summary of the article below, using your own language.​‍‍‌",
    "instruct_zero_width_and_typo": "Pleese prvide a sumary of the artcle belo, usin yur own language.​‍‍‌",
    "output": "The internet has drastically changed our lives by allowing us to easily and quickly communicate and conduct business across the globe. It has enabled the rapid spread of ideas and experiences worldwide.",
    "prompt_id": "271ee8a9-32bf-4b74-8011-e15d70a9bc22"
  },
  {
    "prompt_count": 117,
    "instruction_original": "What is the meaning of the following idiom?",
    "input": "It’s raining cats and dogs",
    "instruct_all_caps_and_typo": "WHAT IS THE MEANING OF THE FOLLOWIN IDIOM?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WHAT IS THE MEANING OF THE FOLLOWIN IDIOM?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WHAT IS THE MEANING OF THE FOLLOWIN IDIOM?",
    "instruct_all_caps_and_typo_and_missing_quote": "WHAT IS THE MEANING OF THE FOLLOWIN IDIOM?",
    "instruct_code_fence": "```What is the meaning of the following idiom?```",
    "instruct_confusable_unicode": "Whαt іs thе mеаnіng оf thе fоllоwіng іdіоm?",
    "instruct_confusable_unicode_and_typo": "Whαt іs thе mеаnіng оf thе fоllоwіn іdіоm?",
    "instruct_emoji": "❓📚🗣️👇",
    "instruct_emoji_and_typo": "❓📚🗣️👇?",
    "instruct_emoji_and_typo_and_missing_bracket": "❓📚🗣️👇?",
    "instruct_emoji_and_typo_and_missing_quote": "❓📚🗣️👇?",
    "instruct_emoticon": "What is the meaning of the following idiom? :)",
    "instruct_emoticon_and_typo": "What is the meaning of the followin idiom? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "What is the meaning of the followin idiom? :)",
    "instruct_emoticon_and_typo_and_missing_quote": "What is the meaning of the followin idiom? :)",
    "instruct_helpful_markdown_structure": "- What is the meaning of the following idiom?",
    "instruct_helpful_meaning_reinforing_characters": "What is the meaning of the following idiom!?",
    "instruct_html_tags": "<p>What is the meaning of the following idiom?</p>",
    "instruct_kaomoji": "What is the meaning of the following idiom? (・ω・)",
    "instruct_kaomoji_and_typo": "What is the meaning of the followin idiom? (・ω・)",
    "instruct_markdown_bold": "**What is the meaning of the following idiom?**",
    "instruct_markdown_bold_and_italic": "***What is the meaning of the following idiom?***",
    "instruct_markdown_italic": "*What is the meaning of the following idiom?*",
    "instruct_qr_ascii": "█████████████████\n███████▀▀▀▀▀██████\n████▀▄█▀▄█▄▀██▄██\n█████▄██▄▀▄▄▄███▄\n██████▀▀▀▀▀██████\n█████████████████\nWhat is the meaning of the following idiom?\n█████████████████\n███████▀▀▀▀▀██████\n█████▄█▄▀▄███▀▄██\n████▄▄▄█▄▀▄█▄███▄\n██████▀▀▀▀▀██████\n█████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "What is the \n meaning \nof the\n followin\nidiom?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "What is the \n meaning \nof the\n followin\nidiom?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "What is the \n meaning \nof the\n followin\nidiom.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "What is the  \n meaning \nof the\n followin\nidiom.",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "What is the \n meaning \nof the\n followin\nidiom?",
    "instruct_several_html_tags": "<body><div><p><b>What is the meaning of the following idiom?</b></p></div></body>",
    "instruct_spoiler_bars": "||What is the meaning of the following idiom?||",
    "instruct_with_inbetween_gzip_b64_blob": "What is the meaning of the following idiom? [GZIP_B64_BLOB]",
    "instruct_zalgo": "W҉h҉a҉t҉ ҉i҉s҉ ҉t҉h҉e҉ ҉m҉e҉a҉n҉i҉n҉g҉ ҉o҉f҉ ҉t҉h҉e҉ ҉f҉o҉l҉l҉o҉w҉i҉n҉g҉ ҉i҉d҉i҉o҉m҉?",
    "instruct_zero_width": "W​h​a​t​ ​i​s​ ​t​h​e​ ​m​e​a​n​i​n​g​ ​o​f​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​i​d​i​o​m​?",
    "instruct_zero_width_and_typo": "W​h​a​t​ ​i​s​ ​t​h​e​ ​m​e​a​n​i​n​g​ ​o​f​ ​t​h​e​ ​f​o​l​l​o​w​i​n​ ​i​d​i​o​m​?",
    "output": "The idiom \"it’s raining cats and dogs\" means that it is raining heavily.",
    "prompt_id": "5e80f773-f77e-4da9-8783-9d9f561bc49d"
  },
  {
    "prompt_count": 118,
    "instruction_original": "Generate a sentence using the following words in the correct order.",
    "input": "house on fire",
    "instruct_all_caps_and_typo": "GENARATE A SENTENCE USNG THE FOLLWING WORDS IN THE CORREKT ORDER.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENARATE A SENTENCE USNG THE FOLLWING WORDS IN THE CORREKT ORDER. [MISSING BRACKET",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GENARATE A SENTENCE USNG THE FOLLWING WORDS IN THE CORREKT ORDER. [MISSING BRACKET AND QUOTE",
    "instruct_all_caps_and_typo_and_missing_quote": "GENARATE A SENTENCE USNG THE FOLLWING WORDS IN THE CORREKT ORDER. [MISSING QUOTE",
    "instruct_code_fence": "```Generate a sentence using the following words in the correct order.```",
    "instruct_confusable_unicode": "Ԍenerate a ѕentence uѕing the fοllοwing wordѕ in the cοrrect οrder.",
    "instruct_confusable_unicode_and_typo": "Ԍenarate a ѕntence uѕng the fοlοwing wordѕ in the correkt οrder.",
    "instruct_emoji": "✍️ Generate a sentence using the following words in the correct order. 📝✅",
    "instruct_emoji_and_typo": "✍️ Genarate a sntence usng the folowing words in the correkt order. 📝✅",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ Genarate a sntence usng the folowing words in the correkt order. 📝✅ [MISSING BRACKET",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ Genarate a sntence usng the folowing words in the correkt order. 📝✅ [MISSING QUOTE",
    "instruct_emoticon": "Generate a sentence using the following words in the correct order. :)",
    "instruct_emoticon_and_typo": "Genarate a sntence usng the folowing words in the correkt order. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Genarate a sntence usng the folowing words in the correkt order. :) [MISSING BRACKET",
    "instruct_emoticon_and_typo_and_missing_quote": "Genarate a sntence usng the folowing words in the correkt order. :) [MISSING QUOTE",
    "instruct_helpful_markdown_structure": "# Generate a Sentence\n\nUse the following words in the correct order to form a sentence.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Generate a sentence using the following words in the correct order. <<<",
    "instruct_html_tags": "<h1>Generate a sentence using the following words in the correct order.</h1>",
    "instruct_kaomoji": "Generate a sentence using the following words in the correct order. (^▽^)",
    "instruct_kaomoji_and_typo": "Genarate a sntence usng the folowing words in the correkt order. (^▽^)",
    "instruct_markdown_bold": "**Generate a sentence using the following words in the correct order.**",
    "instruct_markdown_bold_and_italic": "***Generate a sentence using the following words in the correct order.***",
    "instruct_markdown_italic": "*Generate a sentence using the following words in the correct order.*",
    "instruct_qr_ascii": "Generate a sentence using the following words in the correct order [QR ASCII].",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Genrate a sntence\n\nusng the\n\nfolowing words in the correkt order. [MISSING BRACKET",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Genrate a sntence\n\nusng the\n\nfolowing words in the correkt order. [MISSING BRACKET AND QUOTE",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Genrate a sntence\n\nusng the\n\nfolowing words in the correkt order; [MISSING BRACKET AND QUOTE",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Genrate a sntence\n\nusng the\n\nfolowing words in the correkt order ; [MISSING BRACKET AND QUOTE",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Genrate a sntence\n\nusng the\n\nfolowing words in the correkt order. [MISSING QUOTE",
    "instruct_several_html_tags": "<p><span><b>Generate a sentence using the following words in the correct order.</b></span></p>",
    "instruct_spoiler_bars": "||Generate a sentence using the following words in the correct order.||",
    "instruct_with_inbetween_gzip_b64_blob": "Generate a sentence using the following words [GZIP_B64_BLOB] in the correct order.",
    "instruct_zalgo": "G͎e͂n̾e̫r͑a͋tͧe̸ ͒â ͭs̀e̢ñt̸e͡n͡c̷ȩ ̏űs͂i͊n̷g͛ ̏t̒h̊e̵ ͝f̀oͭļlͫo̒w͏iͬn̷g̏ ͊w͡ö́rͣd͌s͏ ̂i̋n̴ ̌t̃h͒e̸ ͣc̚o͊r͐r͌e͒c̸t͌ ̄o͡r̷d̐eͧr.",
    "instruct_zero_width": "G\b\be\b\bn\b\be\b\br\b\ba\b\bt\b\be\b\b \b\ba\b\b \b\bs\b\be\b\bn\b\bt\b\be\b\bn\b\bc\b\be\b\b \b\bu\b\bs\b\bi\b\bn\b\bg\b\b \b\bt\b\bh\b\be\b\b \b\bf\b\bo\b\bl\b\bl\b\bo\b\bw\b\bi\b\bn\b\bg\b\b \b\bw\b\bo\b\br\b\bd\b\bs\b\b \b\bi\b\bn\b\b \b\bt\b\bh\b\be\b\b \b\bc\b\bo\b\br\b\br\b\be\b\bc\b\bt\b\b \b\bo\b\br\b\bd\b\be\b\br\b.",
    "instruct_zero_width_and_typo": "G\b\be\b\bn\b\ba\b\br\b\ba\b\bt\b\be\b\b \b\ba\b\b \b\bs\b\bn\b\bt\b\be\b\bn\b\bc\b\be\b\b \b\bu\b\bs\b\bn\b\bg\b\b \b\bt\b\bh\b\be\b\b \b\bf\b\bo\b\bl\b\bo\b\bw\b\bi\b\bn\b\bg\b\b \b\bw\b\bo\b\br\b\bd\b\bs\b\b \b\bi\b\bn\b\b \b\bt\b\bh\b\be\b\b \b\bc\b\bo\b\br\b\br\b\be\b\bk\b\bt\b\b \b\bo\b\br\b\bd\b\be\b\br\b.",
    "output": "The house was on fire.",
    "prompt_id": "2887adab-dd2b-4b5c-a4a3-8e1213ff363c"
  },
  {
    "prompt_count": 119,
    "instruction_original": "Is the sentence grammatically correct?",
    "input": "The boy was playing with her toys.",
    "instruct_all_caps_and_typo": "IS THE SENTENCE GRAMMATICLY CORRECT?",
    "instruct_all_caps_and_typo_and_missing_bracket": "IS THE SENTENCE GRAMMATICLY CORRECT? [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "IS THE SENTENCE GRAMMATICLY CORRECT? [\"",
    "instruct_all_caps_and_typo_and_missing_quote": "IS THE SENTENCE GRAMMATICLY CORRECT? \"",
    "instruct_code_fence": "```Is the sentence grammatically correct?```",
    "instruct_confusable_unicode": "Ιs the sentence grаmmаticаlly cоrrеct?",
    "instruct_confusable_unicode_and_typo": "Ιs the sentence grаmmаticly cоrrеct?",
    "instruct_emoji": "Is the sentence grammatically correct? 🤔✅",
    "instruct_emoji_and_typo": "Is the sentence grammaticly correct? 🤔✅",
    "instruct_emoji_and_typo_and_missing_bracket": "Is the sentence grammaticly correct? 🤔✅ [",
    "instruct_emoji_and_typo_and_missing_quote": "Is the sentence grammaticly correct? 🤔✅ \"",
    "instruct_emoticon": "Is the sentence grammatically correct? :-)",
    "instruct_emoticon_and_typo": "Is the sentence grammaticly correct? :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Is the sentence grammaticly correct? :-) [",
    "instruct_emoticon_and_typo_and_missing_quote": "Is the sentence grammaticly correct? :-) \"",
    "instruct_helpful_markdown_structure": "Check Grammar:\n\nIs the sentence grammatically correct?",
    "instruct_helpful_meaning_reinforing_characters": "Is the sentence grammatically correct? [?]",
    "instruct_html_tags": "<body>Is the sentence grammatically correct?</body>",
    "instruct_kaomoji": "Is the sentence grammatically correct? (｡◕‿◕｡)",
    "instruct_kaomoji_and_typo": "Is the sentence grammaticly correct? (｡◕‿◕｡)",
    "instruct_markdown_bold": "**Is the sentence grammatically correct?**",
    "instruct_markdown_bold_and_italic": "***Is the sentence grammatically correct?***",
    "instruct_markdown_italic": "*Is the sentence grammatically correct?*",
    "instruct_qr_ascii": "▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄\n█ █ ▄▀ █ ▄█ ▀▄▄▄▀▄ █ ▄ ▀▀▄ █\n█ ▄ █ ▀ █▄ █ ▀ █ ▄▀█▀▄ █ █ █\n█▄▄▄▄▄▄▄█ ▄ █▀▄▀ █ ▄ █▄█ ▄ █\n█ ▀ █ ▄ ▀▀ █ ▄ ▀▄ █ █ ▄ █ █ █\n█ █▀ █ ▄ █▄▄▀ █ █ ▀▄ █ ▄ ▄▄█\n█ ▄ ▄▀▄ ▄ █ ▄ █ █ ▄▄▀▄▀ ▄ ▄ █\n█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄\nIs the sentence grammatically correct?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Is the sentence grammaticly correct? [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Is the sentence grammaticly correct? [\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Is the sentence grammaticly correct! [\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Is the sentence grammaticly correct! [\" ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Is the sentence grammaticly correct? \"",
    "instruct_several_html_tags": "<div><p><span>Is the sentence grammatically correct?</span></p></div>",
    "instruct_spoiler_bars": "||Is the sentence grammatically correct?||",
    "instruct_with_inbetween_gzip_b64_blob": "Is the sentence grammatically correct? <gzip_b64> H4sIAAAAAAAC/wEAAP//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= </gzip_b64>",
    "instruct_zalgo": "I̸s̷ ̧t̸h҉e ̷s̶e̸n̵t̶e̴n̴c̶e̸ ̶g̶r̸a̷m̴m̵a̴t̷i̷c̸a̶l̴l̶y̸ ̶c̷o̵r̷r̸e̴c̸t̵?",
    "instruct_zero_width": "I​s​ ​t​h​e​ ​s​e​n​t​e​n​c​e​ ​g​r​a​m​m​a​t​i​c​a​l​l​y​ ​c​o​r​r​e​c​t​?",
    "instruct_zero_width_and_typo": "I​s​ ​t​h​e​ ​s​e​n​t​e​n​c​e​ ​g​r​a​m​m​a​t​i​c​l​y​ ​c​o​r​r​e​c​t​?",
    "output": "Yes, the sentence is grammatically correct.",
    "prompt_id": "9eb8dbfd-66c4-40df-9b68-e32511f88866"
  },
  {
    "prompt_count": 120,
    "instruction_original": "Classify the relationship between John and Mary.",
    "input": "John and Mary are siblings.",
    "instruct_all_caps_and_typo": "CLASSFIY THE RELTIONSHIP BETWEEN JOHN AND MARY.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CLASSFIY THE RELTIONSHIP BETWEEN JOHN AND MARY.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CLASSFIY THE RELTIONSHIP BETWEEN JOHN AND MARY.",
    "instruct_all_caps_and_typo_and_missing_quote": "CLASSFIY THE RELTIONSHIP BETWEEN JOHN AND MARY.",
    "instruct_code_fence": "```\nClassify the relationship between John and Mary.\n```",
    "instruct_confusable_unicode": "Ꮯlassify thе relаtionshіp bеtween Ꭻohn аnd Мary.",
    "instruct_confusable_unicode_and_typo": "Ꮯlаssіfу thе relаtіonshір bеtweeп Ꭻohn аnd Мarу.",
    "instruct_emoji": "👫 Classify the relationship between John and Mary. 🤔",
    "instruct_emoji_and_typo": "👫 Clasify the relatnship betwen John & Mary. 🤔",
    "instruct_emoji_and_typo_and_missing_bracket": "👫 Clasify the relatnship betwen John & Mary 🤔",
    "instruct_emoji_and_typo_and_missing_quote": "👫 Clasify the relatnship betwen John & Mary. 🤔",
    "instruct_emoticon": "(: Classify the relationship between John and Mary. :)",
    "instruct_emoticon_and_typo": "(: Clasify the relatnship betwen John and Mary. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "(: Clasify the relatnship betwen John and Mary :)",
    "instruct_emoticon_and_typo_and_missing_quote": "(: Clasify the relatnship betwen John and Mary. :)",
    "instruct_helpful_markdown_structure": "# Classification Task\n\n* Classify the relationship between John and Mary.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Classify the relationship between John and Mary? <<<",
    "instruct_html_tags": "<p>Classify the relationship between John and Mary.</p>",
    "instruct_kaomoji": "(･ω･) Classify the relationship between John and Mary. (｡◕‿◕｡)",
    "instruct_kaomoji_and_typo": "(･ω･) Clasify the relatnship betwen John and Mary. (｡◕‿◕｡)",
    "instruct_markdown_bold": "**Classify the relationship between John and Mary.**",
    "instruct_markdown_bold_and_italic": "***Classify the relationship between John and Mary.***",
    "instruct_markdown_italic": "*Classify the relationship between John and Mary.*",
    "instruct_qr_ascii": "███████████\n█ ▄▄▄ █ █ ▄▄▄ █\n█ █▄█ █▄█ █ █▄█ █\n█ ▄▄▄ █ █ ▄▄▄ █\n███████████\nClassify the relationship between John and Mary.\n█ ▄▄ █▄█ █ ▄▄▄ █\n█▄██▄█ █ █ █▄█ █\n█ █ █ █▄█ ▄▄▄ █\n███████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Classify the reltionship\nbetween John and Mary",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Classify the reltionship\nbetween John and Mary",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Classify the reltionship;\n\nbetween John and Mary.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Classify the reltionship : \n\nbetween John and Mary. ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Classify the reltionship\nbetween John and Mary",
    "instruct_several_html_tags": "<div><span><p>Classify the relationship between John and Mary.</p></span></div>",
    "instruct_spoiler_bars": "||Classify the relationship between John and Mary.||",
    "instruct_with_inbetween_gzip_b64_blob": "Classify the relationship between John and Mary. H4sIAAAAAAAC/0vOSCxPTwIAAD//AQYA53oAAAAA=",
    "instruct_zalgo": "Çl̕âs̋s̀îf̃ȳ t̃h̕é r̴él̶ãt̂íǒn̔s̈h̀îp̛ b̋ẽẗw̕e̋êń J̀o͋h́n͂ a͋n̄d̂ M̆a͂r̋y̋.",
    "instruct_zero_width": "C‌l‌a‌s‌s‌i‌f‌y‌ ‌t‌h‌e‌ ‌r‌e‌l‌a‌t‌i‌o‌n‌s‌h‌i‌p‌ ‌b‌e‌t‌w‌e‌e‌n‌ ‌J‌o‌h‌n‌ ‌a‌n‌d‌ ‌M‌a‌r‌y‌.",
    "instruct_zero_width_and_typo": "C‌l‌a‌s‌s‌i‌f‌y‌ ‌t‌h‌e‌ ‌r‌e‌l‌a‌t‌i‌n‌s‌h‌i‌p‌ ‌b‌e‌t‌w‌e‌n‌ ‌J‌o‌h‌n‌ ‌a‌n‌d‌ ‌M‌a‌r‌y‌.",
    "output": "John and Mary are brother and sister.",
    "prompt_id": "d135acf0-75b5-4e34-b610-d39e14a060f4"
  },
  {
    "prompt_count": 121,
    "instruction_original": "Identify the language used in the given sentence.",
    "input": "Il est incroyable.",
    "instruct_all_caps_and_typo": "IDENTIFYY THE LANGAGE USED IN THE GIVEN SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDENTIFYY THE LANGAGE USED IN THE GIVEN SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "IDENTIFYY THE LANGAGE USED IN THE GIVEN SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_quote": "IDENTIFYY THE LANGAGE USED IN THE GIVEN SENTENCE.",
    "instruct_code_fence": "```Identify the language used in the given sentence.```",
    "instruct_confusable_unicode": "Ｉｄｅｎｔｉｆｙ ｔｈｅ ｌａｎｇｕａｇｅ ｕｓｅｄ ｉｎ ｔｈｅ ｇｉｖｅｎ ｓｅｎｔｅｎｃｅ．",
    "instruct_confusable_unicode_and_typo": "Ｉｄｅｎｔｉｆｙ ｔｈｅ ｌａｎｇａｇｅ ｕｓｅｄ ｉｎ ｔｈｅ ｇｉｖｅｎ ｓｅｎｔｅｎｃｅ．",
    "instruct_emoji": "Identify 🔎 the language 🗣️ used in the given sentence 👇.",
    "instruct_emoji_and_typo": "Identify 🔎 the langauge 🗣️ used in the given sentence 👇.",
    "instruct_emoji_and_typo_and_missing_bracket": "Identify 🔎 the langauge 🗣️ used in the given sentence 👇.",
    "instruct_emoji_and_typo_and_missing_quote": "Identify 🔎 the langauge 🗣️ used in the given sentence 👇.",
    "instruct_emoticon": "Identify the language used in the given sentence. :-)",
    "instruct_emoticon_and_typo": "Identify the langauge used in the given sentence. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Identify the langauge used in the given sentence. :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Identify the langauge used in the given sentence. :-)",
    "instruct_helpful_markdown_structure": "# Task: Language Identification\n\n* Identify the language used in the given sentence.",
    "instruct_helpful_meaning_reinforing_characters": "👉 Identify the language used in the given sentence. ✅",
    "instruct_html_tags": "<p>Identify the language used in the given sentence.</p>",
    "instruct_kaomoji": "Identify the language used in the given sentence. (✿◕‿◕✿)",
    "instruct_kaomoji_and_typo": "Identify the langauge used in the given sentence. (✿◕‿◕✿)",
    "instruct_markdown_bold": "**Identify the language used in the given sentence.**",
    "instruct_markdown_bold_and_italic": "***Identify the language used in the given sentence.***",
    "instruct_markdown_italic": "*Identify the language used in the given sentence.*",
    "instruct_qr_ascii": "Identify the language used in the given sentence.\n█▀▀▀▀▀█\n█ ███ █\n█ ▀ ▀ █\n█ ███ █\n█▄▄▄▄▄█",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Identify the langauge\nused in the given\nsentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Identify the langauge\nused in the given\nsentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Identify the langauge!\nused in the given\nsentence?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Identify the langauge ! \nused in the given\nsentence ? ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Identify the langauge\nused in the given\nsentence.",
    "instruct_several_html_tags": "<em><strong>Identify the language used in the given sentence.</strong></em>",
    "instruct_spoiler_bars": "||Identify the language used in the given sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Identify the language used H4sIAAAAAAAA/0soyswrUYAUAADbN98ECAAAAA== in the given sentence.",
    "instruct_zalgo": "I̷d̷e̴n̴t̸i̸f̷y̴ ̷t̷h̸e̸ ̵l̵a̶n̸g̵u̶a̴g̶e̷ ̵u̶s̶e̴d̴ ̴i̷n̵ ̵t̶h̸e̷ ̵g̸i̴v̵e̶n̶ ̴s̷e̴n̷t̴e̴n̴c̴e̷.",
    "instruct_zero_width": "I​d​e​n​t​i​f​y​ ​t​h​e​ ​l​a​n​g​u​a​g​e​ ​u​s​e​d​ ​i​n​ ​t​h​e​ ​g​i​v​e​n​ ​s​e​n​t​e​n​c​e​.",
    "instruct_zero_width_and_typo": "I​d​e​n​t​i​f​y​ ​t​h​e​ ​l​a​n​g​a​g​e​ ​u​s​e​d​ ​i​n​ ​t​h​e​ ​g​i​v​e​n​ ​s​e​n​t​e​n​c​e​.",
    "output": "The sentence is in French.",
    "prompt_id": "14ffc40d-8c53-476c-b548-2e8c36f3be49"
  },
  {
    "prompt_count": 122,
    "instruction_original": "Generate a summary of the given article.",
    "input": "Between 1989 and 2019, the size of the U.S. economy, measured in terms of the gross domestic product (GDP), more than doubled. The growth was faster than in the prior two decades, driven in part by the dramatic expansion of the information technology sector in the 1990s and early 2000s, gains in worker productivity and strong consumer demand, and government investments in research and development.",
    "instruct_all_caps_and_typo": "GENERATE A SUMMERY OF THE GIVEN ARTICEL.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERATE A SUMMERY OF THE GIVEN ARTICEL.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GENERATE A SUMMERY OF THE GIVEN ARTICEL.",
    "instruct_all_caps_and_typo_and_missing_quote": "GENERATE A SUMMERY OF THE GIVEN ARTICEL.",
    "instruct_code_fence": "```text\nGenerate a summary of the given article.\n```",
    "instruct_confusable_unicode": "Generаtе а summаry оf thе givеn аrticlе.",
    "instruct_confusable_unicode_and_typo": "Generаtе а summery оf thе givеn articel.",
    "instruct_emoji": "✍️📝📰➡️📚",
    "instruct_emoji_and_typo": "✍️📝📰➡️📚 articel",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️📝📰➡️📚 articel",
    "instruct_emoji_and_typo_and_missing_quote": "✍️📝📰➡️📚 articel",
    "instruct_emoticon": "Generate a summary of the given article :) ;)",
    "instruct_emoticon_and_typo": "Generate a summery of the given articel :) ;)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Generate a summery of the given articel :) ;)",
    "instruct_emoticon_and_typo_and_missing_quote": "Generate a summery of the given articel :) ;)",
    "instruct_helpful_markdown_structure": "# Summary Task\n\nGenerate a summary of the given article.",
    "instruct_helpful_meaning_reinforing_characters": "📄➡️📚 Generate a summary of the given article. ✨",
    "instruct_html_tags": "<p>Generate a summary of the given article.</p>",
    "instruct_kaomoji": "Generate a summary of the given article (｡◕‿◕｡)",
    "instruct_kaomoji_and_typo": "Generate a summery of the given articel (｡◕‿◕｡)",
    "instruct_markdown_bold": "**Generate a summary of the given article.**",
    "instruct_markdown_bold_and_italic": "***Generate a summary of the given article.***",
    "instruct_markdown_italic": "*Generate a summary of the given article.*",
    "instruct_qr_ascii": "Generate a summary of the given article.\n█████████████████████\n█ ▄▄▄ █ ▄ █ ▄▄▄ █\n█ █▄█ █ ▄▄█ █▄█ █\n█ ▄▄▄ █ █▄█ ▄▄▄ █\n█████████ █ █████████\n█ ▄ ▄▄█▄█▄▄█ ▄ █\n█ █▄█ ██ ▄ █ █▄█ █\n█▄█ ▄ ███ ▄███▄█▄\n█████████▄███▄██████\n█ ▄▄▄ █▄█ █▄▄ ▄▄▄ █\n█ █▄█ █ ▄▄█▄█ █▄█ █\n█ ▄▄▄ █▄▄█ █ ▄▄▄ █\n█████████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate a summery\nof the given\narticel.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Generate a summery\nof the given\narticel.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Generate a summery,\nof the given.\narticel;?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Generate a summery, of the given . articel ;?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Generate a summery\nof the given\narticel.",
    "instruct_several_html_tags": "<div><p><span>Generate a summary of the given article.</span></p></div>",
    "instruct_spoiler_bars": "||Generate a summary of the given article.||",
    "instruct_with_inbetween_gzip_b64_blob": "Generate a summary of the given article.H4sIAAAAAAAAAwtIySko0gIAADsID3cAAAA=.",
    "instruct_zalgo": "G̸e̸n̸e̸r̸a̸t̸e̸ a̸ s̸u̸m̸m̸a̸r̸y̸ o̸f̸ t̸h̸e̸ g̸i̸v̸e̸n̸ a̸r̸t̸i̸c̸l̸e̸.",
    "instruct_zero_width": "G e n e r a t e a​ s​u​m​m​a​r​y​ o​f​ t​h​e​ g​i​v​e​n​ a​r​t​i​c​l​e​.",
    "instruct_zero_width_and_typo": "G e n e r a t e a​ s​u​m​m​e​r​y​ o​f​ t​h​e​ g​i​v​e​n​ a​r​t​i​c​e​l​.",
    "output": "The U.S. economy more than doubled in size between 1989 and 2019, largely due to the rise of the information technology sector, improvements in worker productivity and consumer demand, and government investments. This growth was faster than in the prior two decades.",
    "prompt_id": "cdce9b22-015e-4aef-842c-d6f609e739e3"
  },
  {
    "prompt_count": 123,
    "instruction_original": "Conver the temperature from Fahrenheit to Celsius.",
    "input": "94F",
    "instruct_all_caps_and_typo": "CONVER THE TEMPERATURE FROM FAHRENHEIT TO CELSIUS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CONVER THE TEMPERATURE FROM FAHRENHEIT TO CELSIUS.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CONVER THE TEMPERATURE FROM FAHRENHEIT TO CELSIUS.",
    "instruct_all_caps_and_typo_and_missing_quote": "CONVER THE TEMPERATURE FROM FAHRENHEIT TO CELSIUS.",
    "instruct_code_fence": "```Convert the temperature from Fahrenheit to Celsius.```",
    "instruct_confusable_unicode": "Cօnveгt the tempeгatuгe frօm Faհгenheіt tօ Celѕіսѕ.",
    "instruct_confusable_unicode_and_typo": "Cօnveг the tempeгatuгe frօm Faհгenheіt tօ Celѕіսѕ.",
    "instruct_emoji": "Convert the temperature from Fahrenheit 🌡️ to Celsius ❄️.",
    "instruct_emoji_and_typo": "Conver the temperature from Fahrenheit 🌡️ to Celsius ❄️.",
    "instruct_emoji_and_typo_and_missing_bracket": "Conver the temperature from Fahrenheit 🌡️ to Celsius ❄️",
    "instruct_emoji_and_typo_and_missing_quote": "Conver the temperature from Fahrenheit 🌡️ to Celsius ❄️.",
    "instruct_emoticon": "Convert the temperature from Fahrenheit :( to Celsius :(. Replacing with a more appropriate emoticon pair) Convert the temperature from Fahrenheit :) to Celsius :(",
    "instruct_emoticon_and_typo": "Conver the temperature from Fahrenheit :) to Celsius :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Conver the temperature from Fahrenheit :) to Celsius :",
    "instruct_emoticon_and_typo_and_missing_quote": "Conver the temperature from Fahrenheit :) to Celsius :(",
    "instruct_helpful_markdown_structure": "* Convert Fahrenheit to Celsius.",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Convert Fahrenheit → Celsius ⬅️",
    "instruct_html_tags": "Convert the temperature from Fahrenheit to Celsius.<br>",
    "instruct_kaomoji": "Convert the temperature from Fahrenheit (งツ)ว to Celsius (ง˙∇˙)ว.",
    "instruct_kaomoji_and_typo": "Conver the temperature from Fahrenheit (งツ)ว to Celsius (ง˙∇˙)ว.",
    "instruct_markdown_bold": "**Convert the temperature from Fahrenheit to Celsius.**",
    "instruct_markdown_bold_and_italic": "**_Convert the temperature from Fahrenheit to Celsius._**",
    "instruct_markdown_italic": "_Convert the temperature from Fahrenheit to Celsius._",
    "instruct_qr_ascii": "███████████████████\n████▄▄█ ▀▀█▄▄████\n███▀ █▀█▀█ █▀ ███\n███ █ █ █▄██ ███\n███▄▄▄▄███ ▄▄▄▄███\n███████████████████\nConvert the temperature from Fahrenheit to Celsius.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Conver the\ntemperature from Fahrenheit\nto Celsius",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Conver the\ntemperature from Fahrenheit\nto Celsius",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Conver the,\ntemperature from Fahrenheit?\nto Celsius!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Conver the , \ntemperature from Fahrenheit ?\nto Celsius !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Conver the\ntemperature from Fahrenheit\nto Celsius.",
    "instruct_several_html_tags": "Convert <b>the</b> <i>temperature</i> from <font color='red'>Fahrenheit</font> to <font color='blue'>Celsius</font>.<p>",
    "instruct_spoiler_bars": "||Convert the temperature from Fahrenheit to Celsius.||",
    "instruct_with_inbetween_gzip_b64_blob": "Convert the temperature from Fahrenheit to Celsius.H4sIAAAAAAACAwMAAAAAAAAAAAA=",
    "instruct_zalgo": "C̸o̷n̷v̸e̵r̴t̶ ̷t̸h̸e̵ ̴t̴e̵m̴p̸e̶r̵a̴t̵u̴r̸e̷ ̴f̸r̴o̷m̸ ̷F̶a̴h̴r̸e̶n̷h̷e̸i̸t̷ ̷t̵o̶ ̷C̶e̴l̶s̵i̷u̷s̶.̸",
    "instruct_zero_width": "Convert the temperature fr\nez\nero\n-\nwi\nd\nth\n sp\na\nce\ns\nrom Fahrenheit to Celsius.",
    "instruct_zero_width_and_typo": "Conver the temperature fr\nez\nero\n-\nwi\nd\nth\n sp\na\nce\ns\nrom Fahrenheit to Celsius.",
    "output": "34.4C",
    "prompt_id": "c5db44a4-66be-459d-9ee5-1eaae0e0fe35"
  },
  {
    "prompt_count": 124,
    "instruction_original": "Construct a phrase using the given words",
    "input": "Pandemic, challenge, action",
    "instruct_all_caps_and_typo": "CONSTRCUT A PHRASE USING THE GIVEN WORDZ.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CONSTRCUT A PHRASE USING THE GIVEN WORDZ.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CONSTRCUT A PHRASE USING THE GIVEN WORDZ.",
    "instruct_all_caps_and_typo_and_missing_quote": "CONSTRCUT A PHRASE USING THE GIVEN WORDZ.",
    "instruct_code_fence": "```Construct a phrase using the given words```",
    "instruct_confusable_unicode": "Cоnstгuсt a phгаse using the gіven wогds.",
    "instruct_confusable_unicode_and_typo": "Cоnstгuсt a phгаse usіng the gіven wоrdz.",
    "instruct_emoji": "Construct 🏗️ a phrase 💬 using the given words 📝.",
    "instruct_emoji_and_typo": "Construct 🏗️ a phraze 💬 using the given wordz 📝.",
    "instruct_emoji_and_typo_and_missing_bracket": "Construct 🏗️ a phraze 💬 using the given wordz 📝",
    "instruct_emoji_and_typo_and_missing_quote": "Construct 🏗️ a phraze 💬 using the given wordz 📝",
    "instruct_emoticon": "Construct :-) a phrase using the given words. :D",
    "instruct_emoticon_and_typo": "Construct :-) a phraze using the given wordz. :D",
    "instruct_emoticon_and_typo_and_missing_bracket": "Construct :-) a phraze using the given wordz. :D",
    "instruct_emoticon_and_typo_and_missing_quote": "Construct :-) a phraze using the given wordz. :D",
    "instruct_helpful_markdown_structure": "- Construct a phrase - Using the given words",
    "instruct_helpful_meaning_reinforing_characters": "-> Construct a phrase using the given words <- ***",
    "instruct_html_tags": "<p>Construct a phrase using the given words</p>",
    "instruct_kaomoji": "Construct (・ω・) a phrase using the given words. (^o^)丿",
    "instruct_kaomoji_and_typo": "Constrcut (・ω・) a phraze using the given wordz. (^o^)丿",
    "instruct_markdown_bold": "**Construct a phrase using the given words**",
    "instruct_markdown_bold_and_italic": "**_Construct a phrase using the given words_**",
    "instruct_markdown_italic": "_Construct a phrase using the given words_",
    "instruct_qr_ascii": "Construct a phrase using the given words [QR_ASCII_PLACEHOLDER]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Construct a phrase using the given wordz[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Construct a phrase using the given wordz",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Construct a phrase using the given wordz?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Construct a phrase using the given wordz, ?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Construct a phrase using the given wordz\"",
    "instruct_several_html_tags": "<div><span><b>Construct</b> a phrase</span> using the given words.</div>",
    "instruct_spoiler_bars": "||Construct a phrase using the given words||",
    "instruct_with_inbetween_gzip_b64_blob": "Construct a phrase [GZIP_B64_BLOB] using the given words.",
    "instruct_zalgo": "C̷o̷n̷s̷t̷r̷u̷c̷t̷ ̷a̷ ̷p̷h̷r̷a̷s̷e̷ ̷u̷s̷i̷n̷g̷ ̷t̷h̷e̷ ̷g̷i̷v̷e̷n̷ ̷w̷o̷r̷d̷s̷.",
    "instruct_zero_width": "Co\t\tns\ttr\tuc\tt a\tp\thr\tas\te u\tsi\tng\tt\the\t\tgi\tve\tn w\tor\tds.",
    "instruct_zero_width_and_typo": "Co\t\tns\ttr\tuc\tt a\tp\thr\taz\te u\tsi\tng\tt\the\t\tgi\tve\tn w\tor\tdz.",
    "output": "Our action in the face of the pandemic is the ultimate challenge.",
    "prompt_id": "fc507f3a-d42f-4988-8f8d-2882fa7540ad"
  },
  {
    "prompt_count": 125,
    "instruction_original": "Find the synonyms of the following word: 'Tenacious'.",
    "input": "",
    "instruct_all_caps_and_typo": "FIND THE SYONYMS OF THE FOLLWING WORD: 'TENACIOUS'.",
    "instruct_all_caps_and_typo_and_missing_bracket": "FIND THE SYONYMS OF THE FOLLWING WORD: 'TENACIOUS'.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "FIND THE SYONYMS OF THE FOLLWING WORD: TENACIOUS.",
    "instruct_all_caps_and_typo_and_missing_quote": "FIND THE SYONYMS OF THE FOLLWING WORD: TENACIOUS.",
    "instruct_code_fence": "```Find the synonyms of the following word: 'Tenacious'.```",
    "instruct_confusable_unicode": "Fıηd тhе syηoηуms of тhе foгlowıηg word: 'Теηacıoυs'.",
    "instruct_confusable_unicode_and_typo": "Fıηd тhе syoηуms of тhе follwıηg word: 'Теηacıoυs'.",
    "instruct_emoji": "Find 🤔 the synonyms 👍 of the following word 👇: 'Tenacious' 💪.",
    "instruct_emoji_and_typo": "Find 🤔 the syonyms 👍 of the follwing word 👇: 'Tenacious' 💪.",
    "instruct_emoji_and_typo_and_missing_bracket": "Find 🤔 the syonyms 👍 of the follwing word 👇: 'Tenacious' 💪.",
    "instruct_emoji_and_typo_and_missing_quote": "Find 🤔 the syonyms 👍 of the follwing word 👇: Tenacious 💪.",
    "instruct_emoticon": "Find the synonyms of the following word: 'Tenacious' :).",
    "instruct_emoticon_and_typo": "Find the syonyms of the follwing word: 'Tenacious' :).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Find the syonyms of the follwing word: 'Tenacious' :).",
    "instruct_emoticon_and_typo_and_missing_quote": "Find the syonyms of the follwing word: Tenacious :).",
    "instruct_helpful_markdown_structure": "* Find the synonyms of the following word: 'Tenacious'.",
    "instruct_helpful_meaning_reinforing_characters": "Find the synonyms of the following word ---> 'Tenacious' 👍.",
    "instruct_html_tags": "<p>Find the synonyms of the following word: <span>'Tenacious'</span>.</p>",
    "instruct_kaomoji": "Find the synonyms of the following word: 'Tenacious' (*_*).",
    "instruct_kaomoji_and_typo": "Find the syonyms of the follwing word: 'Tenacious' (*_*).",
    "instruct_markdown_bold": "Find the synonyms of the following word: **'Tenacious'**.",
    "instruct_markdown_bold_and_italic": "*Find the synonyms of the following word:* **'Tenacious'**.",
    "instruct_markdown_italic": "*Find the synonyms of the following word: 'Tenacious'.*",
    "instruct_qr_ascii": "Find the synonyms of the following word: ### 'Tenacious'.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Find\nthe\nsyonyms\nof\nthe\nfollwing\nword:\n'Tenacious'.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Find\nthe\nsyonyms\nof\nthe\nfollwing\nword:\nTenacious.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Find,\nthe;\nsyonyms.\nof:\nthe?\nfollwing!\nword\nTenacious!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Find ,\nthe ;\nsyonyms .\nof :\nthe ?\nfollwing !\nword\nTenacious !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Find\nthe\nsyonyms\nof\nthe\nfollwing\nword:\nTenacious.",
    "instruct_several_html_tags": "<div><p><em>Find the synonyms of the following word: <strong>'Tenacious'</strong>.</em></p></div>",
    "instruct_spoiler_bars": "||Find the synonyms of the following word: 'Tenacious'.||",
    "instruct_with_inbetween_gzip_b64_blob": "Find the synonyms of the following word: H4sIAAAAAAAAA0sotsmptDUzBQCKj6gHEAAAAA== 'Tenacious'.",
    "instruct_zalgo": "Fͨ̽͑iͬ͌̽nͬ̑ͩdͤͭ̚ tͣͯ̍hͪ͒ͮeͦͮ́ sͧ̔̚yͮͦ̃nͤ͌͋oͭ͋ͪnͬͧ͊yͣ̈́̃m̍̽ͩsͫ͌ͩ oͯͮͪf̔ͦ̍ tͧͨ̈hͧͦ͒eͮ͐̾ fͨ̽ͫoͤͧ̚lͨͩͦlͯͪ̃oͭͮͦw͌̈̈iͯ́ͥnͧ͋̚gͭͯ̾ wͮ̽̂oͦ̍̃rͦͧͮdͥͭ̂: 'Tͯ͛͊eͯ͊͋nͨͥ̃a̋ͯ̚c̏͋̔iͮͭ̌oͯ͗nͨ̃̌sͩ̌'.",
    "instruct_zero_width": "Find\b\nthe\b\nsynonyms\b\nof\b\nthe\b\nfollowing\b\nword:\b\n'Tenacious'.",
    "instruct_zero_width_and_typo": "Find\b\nthe\b\nsyonyms\b\nof\b\nthe\b\nfollwing\b\nword:\b\n'Tenacious'.",
    "output": "Persistent, dogged, determined, resolute, steadfast, unwavering, unyielding, persistent, persistent.",
    "prompt_id": "b1893f26-9dd9-43b2-a32a-b325257db21f"
  },
  {
    "prompt_count": 126,
    "instruction_original": "Suggest a good restaurant.",
    "input": "Los Angeles, CA",
    "instruct_all_caps_and_typo": "SUGEGST A GOOD RESTAURNT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUGEGST A GOOD RESTAURNT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "SUGEGST A GOOD RESTAURNT",
    "instruct_all_caps_and_typo_and_missing_quote": "SUGEGST A GOOD RESTAURNT",
    "instruct_code_fence": "```\nSuggest a good restaurant.\n```",
    "instruct_confusable_unicode": "𝐒uggeꜱt a good rеꜱtaurаnt.",
    "instruct_confusable_unicode_and_typo": "𝐒uggeꜱt a good rеꜱtaurаnt.",
    "instruct_emoji": "Suggest a good restaurant? 🍽️😋",
    "instruct_emoji_and_typo": "Sugest a good restaurant? 🍽️😋",
    "instruct_emoji_and_typo_and_missing_bracket": "Sugest a good restaurant? 🍽️😋",
    "instruct_emoji_and_typo_and_missing_quote": "Sugest a good restaurant? 🍽️😋",
    "instruct_emoticon": "Suggest a good restaurant? :)",
    "instruct_emoticon_and_typo": "Sugest a good restaurant? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Sugest a good restaurant? :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Sugest a good restaurant? :)",
    "instruct_helpful_markdown_structure": "### Restaurant Suggestion\n* Please suggest a good restaurant.",
    "instruct_helpful_meaning_reinforing_characters": "⭐Suggest a good restaurant!⭐",
    "instruct_html_tags": "<p>Suggest a good restaurant.</p>",
    "instruct_kaomoji": "Suggest a good restaurant? (๑ᵔڡᵔ๑)",
    "instruct_kaomoji_and_typo": "Sugest a good restaurant? (๑ᵔڡᵔ๑)",
    "instruct_markdown_bold": "**Suggest a good restaurant.**",
    "instruct_markdown_bold_and_italic": "***Suggest a good restaurant.***",
    "instruct_markdown_italic": "*Suggest a good restaurant.*",
    "instruct_qr_ascii": "███████████████████████████\n███████████████████████████\n█████ ▄▄▄ █ ▀ ▄▀█ ▄▄▄ █████\n█████ █▄█ █▄▀▄▀ █ █▄█ █████\n█████ ███ █▄▀▄▀▀█ ███ █████\n███▀▀▀▀▀▀▀▀ ▀▀█ ▀▀▀▀▀▀▀▀███\n███▀ ▄▀█ █ █▀▄▀█ █ ▄▄ █▀███\n███ ▄▄▀▄▄ █ █ ▄ █ █ ▀▄ █ ▄██\n███ ▀▀ █ █▄█▀▀▀ █ █ █ █ ▀██\n███ █▀▄ █ █ █▀▄▀█ █ █▀▄ █▀██\n███▀▀▀▀▀▀▀▀ ▀ ▀ ▀▀▀▀▀▀▀▀███\n█████ ▄▄▄ █▄█▀▄▄ █ ▄ ▀█████\n█████ █▄█ █▄▀ ▀▄▀▄▀ █ ▀████\n█████ ███ █▀ █ █ █▀ █ █████\n███████████████████████████\n███████████████████████████\nSuggest a good restaurant.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Sugest a good\nrestaurant.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Sugest a good\nrestaurant.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Sugest a good\nrestaurant;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Sugest  a good\nrestaurant;",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Sugest a good\nrestaurant.",
    "instruct_several_html_tags": "<div><p><span>Suggest a good restaurant.</span></p></div>",
    "instruct_spoiler_bars": "||Suggest a good restaurant.||",
    "instruct_with_inbetween_gzip_b64_blob": "Suggest H4sIAAAAAAAA/wEAAP//+wEA\nAAAA a good H4sIAAAAAAAA/wEAAP//+wEA\nAAAA restaurant. H4sIAAAAAAAA/wEAAP//+wEA\nAAAA",
    "instruct_zalgo": "S̸͌ǘ̴g̸̀g̷̿e̸͆s̵͌t̶͗ ̶̂a̴͒ ̵̀ǧ̵ó̴ö̴́d̵͂ ̶͋ŕ̵è̶s̵͂ṫ̸ã̶u̴̅r̸̓a̸͐n̶̎t̸̿.̸̌",
    "instruct_zero_width": "S\nasuggest\na\ngood\nrestaurant.",
    "instruct_zero_width_and_typo": "S\nasugest\na\ngood\nrestaurant.",
    "output": "In Los Angeles, CA, I suggest Rossoblu Italian restaurant.",
    "prompt_id": "25a0e495-249d-4ddb-99b2-04287d7ebd26"
  },
  {
    "prompt_count": 127,
    "instruction_original": "Calculate the area of the triangle.",
    "input": "Base: 5cm; Height: 6cm",
    "instruct_all_caps_and_typo": "CALCULETE THE AREA OF THE TRIANGLE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CALCULETE THE AREA OF THE TRIANGLE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"CALCULETE THE AREA OF THE TRIANGLE.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"CALCULETE THE AREA OF THE TRIANGLE.",
    "instruct_code_fence": "```Calculate the area of the triangle.```",
    "instruct_confusable_unicode": "Ⅽalсulate the area οf the triangle.",
    "instruct_confusable_unicode_and_typo": "Ⅽalсulate the area οf the triangel.",
    "instruct_emoji": "📐 Calculate the area of the triangle ✨",
    "instruct_emoji_and_typo": "Calculate the area of the triangel. 📐",
    "instruct_emoji_and_typo_and_missing_bracket": "Calculate the area of the triangel. 📐",
    "instruct_emoji_and_typo_and_missing_quote": "\"Calculate the area of the triangel. 📐",
    "instruct_emoticon": "Calculate the area of the triangle :)",
    "instruct_emoticon_and_typo": "Calculate the area of the triangel :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Calculate the area of the triangel :)",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Calculate the area of the triangel :)",
    "instruct_helpful_markdown_structure": "- Calculate the area of the triangle.",
    "instruct_helpful_meaning_reinforing_characters": "Calculate the area of the triangle!!! ✨",
    "instruct_html_tags": "<p>Calculate the area of the triangle.</p>",
    "instruct_kaomoji": "Calculate the area of the triangle (*^▽^*)",
    "instruct_kaomoji_and_typo": "Calculate the area of the triangel (*^▽^*)",
    "instruct_markdown_bold": "**Calculate the area of the triangle.**",
    "instruct_markdown_bold_and_italic": "_**Calculate the area of the triangle.**_",
    "instruct_markdown_italic": "_Calculate the area of the triangle._",
    "instruct_qr_ascii": "```\n█▀▀▀▀▀█ ██ ▀ █ █▀▀▀▀▀█\n█ ███ █ █▄▀▄█▀▄ █ ███ █\n█ ▀▀▀ █ █ ▀▄█▀█ █ ▀▀▀ █\n▀▀▀▀▀▀▀ █ █ █ ▀ ▀▀▀▀▀▀▀\n▀▀▄█▄▀█▄██▀█▀▄██ █▀█▄▀\n█ ▄█▄▄ ▄█ █▄▄█▄▄█ █\n▀▀▀▀▀▀▀ ▀█▀ ▀ ▀▀█▀▀▀▀▀▀\n```\nCalculate the area of the triangle.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Calculate the\narea of the triangel.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "\"Calculate the\narea of the triangel.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "\"Calculate the\narea of the triangel?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "\" Calculate the\narea of the triangel?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"Calculate the\narea of the triangel.",
    "instruct_several_html_tags": "<div><p><strong><em>Calculate the area of the triangle.</em></strong></p></div>",
    "instruct_spoiler_bars": "||Calculate the area of the triangle.||",
    "instruct_with_inbetween_gzip_b64_blob": "Calculate H4sIAAAAAAAA/8tIzcnJVyjPL8pJAQA= the area H4sIAAAAAAAA/8vPTMgozskvAQE= of the triangle.",
    "instruct_zalgo": "C̴a̸l̵c̶u̵l̵a̴t̸e̷ ̸t̵h̸e̵ ̵a̵r̴e̷a̴ ̶o̵f̷ ̵t̵h̶e̶ ̶t̶r̸i̸a̵n̶g̷l̸e̶.",
    "instruct_zero_width": "C\b\b\ba\b\b\bl\b\b\bc\b\b\bu\b\b\bl\b\b\ba\b\b\bt\b\b\be\b\b\b \b\b\bt\b\b\bh\b\b\be\b\b\b \b\b\ba\b\b\br\b\b\be\b\b\ba\b\b\b \b\b\bo\b\b\bf\b\b\b \b\b\bt\b\b\bh\b\b\be\b\b\b \b\b\bt\b\b\br\b\b\bi\b\b\ba\b\b\bn\b\b\bg\b\b\bl\b\b\be\b\b\b.",
    "instruct_zero_width_and_typo": "C\b\b\ba\b\b\bl\b\b\bc\b\b\bu\b\b\bl\b\b\ba\b\b\bt\b\b\be\b\b\b \b\b\bt\b\b\bh\b\b\be\b\b\b \b\b\ba\b\b\br\b\b\be\b\b\ba\b\b\b \b\b\bo\b\b\bf\b\b\b \b\b\bt\b\b\bh\b\b\be\b\b\b \b\b\bt\b\b\br\b\b\bi\b\b\ba\b\b\bn\b\b\bg\b\b\be\b\b\bl\b.",
    "output": "The area of the triangle is 15 cm².",
    "prompt_id": "80bf074e-38e6-455c-a1e2-47badc414212"
  },
  {
    "prompt_count": 128,
    "instruction_original": "Rewrite the sentence with more descriptive words.",
    "input": "The game is fun.",
    "instruct_all_caps_and_typo": "REWRITE THE SENTENSE WITH MORE DESCRIPTIVE WORDS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWRITE THE SENTENSE WITH MORE DESCRIPTIVE WORDS. (",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "REWRITE THE SENTENSE WITH MORE DESCRIPTIVE WORDS. [\"",
    "instruct_all_caps_and_typo_and_missing_quote": "REWRITE THE SENTENSE WITH MORE DESCRIPTIVE WORDS. \"",
    "instruct_code_fence": "```\nRewrite the sentence with more descriptive words.\n```",
    "instruct_confusable_unicode": "Ｒeｗrite ｔhe seｎteｎce ｗith ｍore descriрtive ｗords．",
    "instruct_confusable_unicode_and_typo": "Ｒeｗrite ｔhe seｎteｎｓe ｗith ｍore descriрtive ｗords．",
    "instruct_emoji": "Rewrite the sentence ✍️ with more descriptive words 📚✨.",
    "instruct_emoji_and_typo": "Rewrite the sentense ✍️ with more descriptive words 📚✨.",
    "instruct_emoji_and_typo_and_missing_bracket": "Rewrite the sentense ✍️ with more descriptive words 📚✨. (",
    "instruct_emoji_and_typo_and_missing_quote": "Rewrite the sentense ✍️ with more descriptive words 📚✨. \"",
    "instruct_emoticon": "Rewrite the sentence :) with more descriptive words ;).",
    "instruct_emoticon_and_typo": "Rewrite the sentense :) with more descriptive words ;).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Rewrite the sentense :) with more descriptive words ;(.",
    "instruct_emoticon_and_typo_and_missing_quote": "Rewrite the sentense :) with more descriptive words ;). \"",
    "instruct_helpful_markdown_structure": "# Instruction\n\n- Rewrite the sentence with more descriptive words.",
    "instruct_helpful_meaning_reinforing_characters": "✨👉 Rewrite the sentence with more descriptive words. ✍️📖",
    "instruct_html_tags": "<p>Rewrite the sentence with more descriptive words.</p>",
    "instruct_kaomoji": "Rewrite the sentence (・ω・) with more descriptive words (*^▽^*).",
    "instruct_kaomoji_and_typo": "Rewrite the sentense (・ω・) with more descriptive words (*^▽^*).",
    "instruct_markdown_bold": "**Rewrite the sentence with more descriptive words.**",
    "instruct_markdown_bold_and_italic": "_**Rewrite the sentence with more descriptive words.**_",
    "instruct_markdown_italic": "*Rewrite the sentence with more descriptive words.*",
    "instruct_qr_ascii": "```\n+---+\n| R |\n| W |\n+-+-+\n| M |\n| D |\n+---+\n```\nRewrite the sentence with more descriptive words.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rewrite the\nsentence with\nmore descriptiv\ne words. (",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Rewrite the\nsentence with more\ndescriptive\nwords. [\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Rewrite the\nsentence with more\ndescriptive\nwords; [\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Rewrite the\nsentence with more\ndescriptive words ; [ \"",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Rewrite the sentence with\nmore descriptive\nwords. \"",
    "instruct_several_html_tags": "<div><span><p>Rewrite the sentence with more descriptive words.</p></span></div>",
    "instruct_spoiler_bars": "||Rewrite the sentence with more descriptive words.||",
    "instruct_with_inbetween_gzip_b64_blob": "Rewrite the sentence with more descriptive words. H4sIAAAAAAAE/wEAAP//AAAAAAAAAAA=",
    "instruct_zalgo": "R̵̃e̵w̴̋ř̸ï̴t̵̃e̷͝ ̴́ṫ̴h̴̐e̵͗ ̶̏s̴̈́e̸͊n̵͑t̸̀e̷̔n̸͒c̵̈́é̴ ̶̈́w̷̍ĩ̶t̴́ĥ̶ ̸͂m̷̎õ̴r̵̂e̴̐ ̷́d̵́e̴̽s̴̋c̶̕r̸͐ĭ̵ṕ̵t̸̛i̴͝v̷͝e̴͒ ̸̂w̶̿o̷͗r̸̋d̴̊s̸̀.̴̌",
    "instruct_zero_width": "R​e​w​r​i​t​e​ ​t​h​e​ ​s​e​n​t​e​n​c​e​ ​w​i​t​h​ ​m​o​r​e​ ​d​e​s​c​r​i​p​t​i​v​e​ ​w​o​r​d​s​.",
    "instruct_zero_width_and_typo": "R​e​w​r​i​t​e​ ​t​h​e​ ​s​e​n​t​e​n​ｓ​e​ ​w​i​t​h​ ​m​o​r​e​ ​d​e​s​c​r​i​p​t​i​v​e​ ​w​o​r​d​s​.",
    "output": "The game is exhilarating and enjoyable.",
    "prompt_id": "699674b4-89a6-40e7-9ee5-21e5f30e28b2"
  },
  {
    "prompt_count": 129,
    "instruction_original": "Generate a creative birthday wish for a friend.",
    "input": "",
    "instruct_all_caps_and_typo": "GENERATE A CREATIVE BIRTHDAY WISH FOR A FRNED.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERATE A CREATIVE BIRTHDAY WISH FOR A FRNED",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GENERATE A CREATIVE BIRTHDAY WISH FOR A FRNED",
    "instruct_all_caps_and_typo_and_missing_quote": "GENERATE A CREATIVE BIRTHDAY WISH FOR A FRNED.",
    "instruct_code_fence": "```Generate a creative birthday wish for a friend.```",
    "instruct_confusable_unicode": "Gеnеrаtе а сrеаtіvе bіrthdау wіsh fоr а frіеnd.",
    "instruct_confusable_unicode_and_typo": "Gеnеrаtе а сrеаtіvе bіrthdау wіsh fоr а frіеd.",
    "instruct_emoji": "✍️ A ✨🎂 🙏 for a 🤗.",
    "instruct_emoji_and_typo": "✍️ A ✨🎂 🙏 for a 🫂.",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ A ✨🎂 🙏 for a 🫂",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ A ✨🎂 🙏 for a 🫂.",
    "instruct_emoticon": ":writing_hand: A :sparkles::birthday: :pray: for a :hugging_face:.",
    "instruct_emoticon_and_typo": ":writing_hand: A :sparkles::birthday: :pray: for a :hugging_face:.",
    "instruct_emoticon_and_typo_and_missing_bracket": ":writing_hand: A :sparkles::birthday: :pray: for a :hugging_face:",
    "instruct_emoticon_and_typo_and_missing_quote": ":writing_hand: A :sparkles::birthday: :pray: for a :hugging_face:.",
    "instruct_helpful_markdown_structure": "# Birthday Wish Generator\n\n- Task: Generate wish\n- Target: Creative birthday wish\n- Recipient: A friend",
    "instruct_helpful_meaning_reinforing_characters": "Generate a ***creative*** birthday wish for a friend.",
    "instruct_html_tags": "<p>Generate a creative birthday wish for a friend.</p>",
    "instruct_kaomoji": "✍️(◔◡◔) Generate a creative birthday wish for a friend. (｡◕‿◕｡)🎂",
    "instruct_kaomoji_and_typo": "✍️(◔◡◔) Generate a creative birthday wish for a frind. (｡◕‿◕｡)🎂",
    "instruct_markdown_bold": "**Generate a creative birthday wish for a friend.**",
    "instruct_markdown_bold_and_italic": "***Generate a creative birthday wish for a friend.***",
    "instruct_markdown_italic": "*Generate a creative birthday wish for a friend.*",
    "instruct_qr_ascii": "█████████████\n█ ▄▀ ▀ ▄█ ▀▄█\n█▀█▄▀▄▀█ ▄ ██\n█▄█ ▀▄▄▄█▄▀▄█\n██ ▄█ ▄█ ▄▀██\n█▀▄▀█▀ ▄█ █▄█\n█▄▄ ▄▀ █▄█ ▀█\n█████████████\nGenerate a creative birthday wish for a friend.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate\na creative birthday\nwish for a\nfrind",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Generate\na creative birthday\nwish for a\nfrind",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Generate\na creative birthday\nwish for a\nfrind?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Generate \na creative birthday \nwish for a \nfrind?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Generate\na creative birthday\nwish for a\nfrind.",
    "instruct_several_html_tags": "<div><p><span>Generate a creative birthday wish for a friend.</span></p></div>",
    "instruct_spoiler_bars": "||Generate a creative birthday wish for a friend.||",
    "instruct_with_inbetween_gzip_b64_blob": "Generate a creative birthday wish for a friend. H4sIAAAAAAAAA0soKypWqgUAAvS4Y88AAAA= ",
    "instruct_zalgo": "G͎e̾n͎e̾r͎a̾t͎e̾ ͎a̾ ͎c͎r͎e̾a̾t͎i̾v͎e̾ ͎b͎i̾r͎t͎h͎d͎a̾y͎ ͎w͎i̾s͎h͎ ͎f͎o̾r͎ ͎a̾ ͎f͎r͎i̾e̾n͎d͎.͎",
    "instruct_zero_width": "G\b\ne\b\nn\b\ne\b\nr\b\na\b\nt\b\ne\b\n \b\na\b\n \b\nc\b\nr\b\ne\b\na\b\nt\b\ni\b\nv\b\ne\b\n \b\nb\b\ni\b\nr\b\nt\b\nh\b\nd\b\na\b\ny\b\n \b\nw\b\ni\b\ns\b\nh\b\n \b\nf\b\no\b\nr\b\n \b\na\b\n \b\nf\b\nr\b\ni\b\ne\b\nn\b\nd\b\n.",
    "instruct_zero_width_and_typo": "G\b\ne\b\nn\b\ne\b\nr\b\na\b\nt\b\ne\b\n \b\na\b\n \b\nc\b\nr\b\ne\b\na\b\nt\b\ni\b\nv\b\ne\b\n \b\nb\b\ni\b\nr\b\nt\b\nh\b\nd\b\na\b\ny\b\n \b\nw\b\ni\b\ns\b\nh\b\n \b\nf\b\no\b\nr\b\n \b\na\b\n \b\nf\b\nr\b\ni\b\nd\b\n.",
    "output": "Happy birthday! May this special day bring you joy, laughter, and all the blessings you deserve. Have a wonderful year ahead!",
    "prompt_id": "4de95e07-8abe-4a05-b679-c4e368dcc870"
  },
  {
    "prompt_count": 130,
    "instruction_original": "Make the second sentence shorter.",
    "input": "Winter is usually the coldest season of the year. Snow is a common element during winter.",
    "instruct_all_caps_and_typo": "MAKR THA SECOND SENTENCE SHORTER.",
    "instruct_all_caps_and_typo_and_missing_bracket": "MAKR THA SECOND SNTNCE SHORTER.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "MKE THA SCND SNTNCE SHORTE.",
    "instruct_all_caps_and_typo_and_missing_quote": "MAKE THA SECOND SENTENCE SHORTE.",
    "instruct_code_fence": "```Make the second sentence shorter.```",
    "instruct_confusable_unicode": "Маke the seсοηd seηteηсe shorter.",
    "instruct_confusable_unicode_and_typo": "Маke the seсοηd seηteηсe shorter. Make the second sntece shorter.",
    "instruct_emoji": "✂️🥈📖👇",
    "instruct_emoji_and_typo": "✂️🥈📖👇. Make the second sntece shorter.",
    "instruct_emoji_and_typo_and_missing_bracket": "✂️🥈📖👇. Make the second sntece shorter ].",
    "instruct_emoji_and_typo_and_missing_quote": "✂️🥈📖👇. Make the second sntece shorter \"",
    "instruct_emoticon": "Shorten the 2nd sentence :)",
    "instruct_emoticon_and_typo": "Shorten the 2nd sentence :). Make the second sntece shorter.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Shorten the 2nd sentence :). Make the second sntece shorter ].",
    "instruct_emoticon_and_typo_and_missing_quote": "Shorten the 2nd sentence :). Make the second sntece shorter \"",
    "instruct_helpful_markdown_structure": "- Make the second sentence shorter.",
    "instruct_helpful_meaning_reinforing_characters": "Make the second sentence shorter!!!",
    "instruct_html_tags": "<p>Make the second sentence shorter.</p>",
    "instruct_kaomoji": "✂️ the 2nd sentence (・ω・)",
    "instruct_kaomoji_and_typo": "✂️ the 2nd sentence (・ω・). Make the second sntece shorter.",
    "instruct_markdown_bold": "**Make the second sentence shorter.**",
    "instruct_markdown_bold_and_italic": "***Make the second sentence shorter.***",
    "instruct_markdown_italic": "*Make the second sentence shorter.*",
    "instruct_qr_ascii": "█▄█ ▄ █ ▄█ █▄█ ▄▄ █ ▄█ ▄▄█\n▄ ▄ █ █ █ █ █ █ █ █ █ █ █\n█▄█ █ █ ▄█ █ █ █▄█ █ █ █▄█\n▄▄ █ █▄ ▄ █ ▄▄█▄▄█ █▄ █▄▄\n█▄ ▄ ▄ █ ▄█ █ █ █ █ ▄ ▄ █\n█▄█ ▄▄█▄▄█ █▄ █▄█ █ █▄█ █\n▄ ▄█▄▄ █ ▄ █ ▄ █ ▄ █ ▄ █▄\n█ █ █ █ █ ▄▄█ █▄▄ █ █ █ █\nMake it shorter.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Make the second\nsentece]\nshorter.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Make the second\"\nsentece]\nshorter.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Make the second,\nsentece]?\nshorter!.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Make the second , \nsentece ] ?\nshorter !.",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Make the second\nsentece\"\nshorter.",
    "instruct_several_html_tags": "<div><span>Make the second sentence shorter.</span></div>",
    "instruct_spoiler_bars": "||Make the second sentence shorter.||",
    "instruct_with_inbetween_gzip_b64_blob": "Make the second sentence shorter.H4sIAAAAAAAAA0soyswDAH6RBUgAAAA=",
    "instruct_zalgo": "Mͣaͯkͭeͤ tͨhͬeͤ sͩeͨcͥoͦnͩdͩ sͫeͧnͥtͩeͭnͧcͨeͤ sͨhͣoͦrͭtͫeͣrͩ.",
    "instruct_zero_width": "M​a​k​e​ ​t​h​e​ ​s​e​c​o​n​d​ ​s​e​n​t​e​n​c​e​ ​s​h​o​r​t​e​r.",
    "instruct_zero_width_and_typo": "M​a​k​e​ ​t​h​e​ ​s​e​c​o​n​d​ ​s​e​n​t​e​n​c​e​ ​s​h​o​r​t​e​r. Make the second sntece shorter.",
    "output": "Winter is the coldest season, often accompanied by snow.",
    "prompt_id": "62095d5d-05b1-450f-8123-6a9b7b0a62c3"
  },
  {
    "prompt_count": 131,
    "instruction_original": "Find the solution to the quadratic equation.",
    "input": "3x² + 7x - 4 = 0",
    "instruct_all_caps_and_typo": "FIND THE SOLITION TO THE QUADRATIC EQTION.",
    "instruct_all_caps_and_typo_and_missing_bracket": "FIND THE SOLITION TO THE QUADRATIC EQTION.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "FIND THE SOLITION TO THE QUADRATIC EQTION.",
    "instruct_all_caps_and_typo_and_missing_quote": "FIND THE SOLITION TO THE QUADRATIC EQTION.",
    "instruct_code_fence": "```Find the solution to the quadratic equation.```",
    "instruct_confusable_unicode": "Ƒınd ŧhe sоlutıоn tо ŧhe qυаdгаŧіс еqυаŧіоn.",
    "instruct_confusable_unicode_and_typo": "Ƒınd ŧhe sоlutıоn tо ŧhe qυаdгаŧіс еqυаŧіоn.",
    "instruct_emoji": "🕵️‍♀️ Find the solution 💡 to the quadratic equation. ➗✖️➕➖",
    "instruct_emoji_and_typo": "🕵️‍♀️ Find the solition 💡 to the qadratic eqtion. ➗✖️➕➖",
    "instruct_emoji_and_typo_and_missing_bracket": "🕵️‍♀️ Find the solition 💡 to the qadratic eqtion. ➗✖️➕➖",
    "instruct_emoji_and_typo_and_missing_quote": "🕵️‍♀️ Find the solition 💡 to the qadratic eqtion. ➗✖️➕➖",
    "instruct_emoticon": "Find the solution to the quadratic equation. :-)",
    "instruct_emoticon_and_typo": "Find the solition to the qadratic eqtion. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Find the solition to the qadratic eqtion. :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Find the solition to the qadratic eqtion. :-)",
    "instruct_helpful_markdown_structure": "# Task\n\n- Find the solution\n- To the quadratic equation",
    "instruct_helpful_meaning_reinforing_characters": "*** Find the solution *** >>> to the quadratic equation. <<<",
    "instruct_html_tags": "<p>Find the solution to the quadratic equation.</p>",
    "instruct_kaomoji": "Find the solution to the quadratic equation. (•‿•)",
    "instruct_kaomoji_and_typo": "Find the solition to the qadratic eqtion. (•‿•)",
    "instruct_markdown_bold": "**Find the solution to the quadratic equation.**",
    "instruct_markdown_bold_and_italic": "***Find the solution to the quadratic equation.***",
    "instruct_markdown_italic": "*Find the solution to the quadratic equation.*",
    "instruct_qr_ascii": "█████████████████████████████\n████ ▄▄▄▄▄ █ ▄▄▄▄▄ ██ ▄▄▄ █\n███ █ ▄██ █ █ █▄▄█ █ █ ▄ █\n███ █▄▄▄▄█ ██ █ ▄▄█ ██▀▄█ █\n███ ▄▄▄▄▄▄▄█ █▄█ █▄▄ █ ▄▄▄█\n███ ▄▄▄▄▄ ██▄ █ █▀▄██▄██▄ █\n███ █ ▄██ █▄▄█ █▄▀ █ ▄ ▄▄█\n███ █▄▄▄▄█ █▄▀█ ▄ █▄▄▄▄▄█\n███▄▄▄▄▄▄▄▄█▄▄▄█▄▄▄▄█▄▄▄▄▄▄█\n█████████████████████████████\nFind the solution to the quadratic equation.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Find\nthe\nsolition\nto the qadratic\neqtion.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Find\nthe\nsolition\nto the qadratic\neqtion.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Find\nthe\nsolition!\nto the qadratic\neqtion.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Find\nthe solition!\nto the qadratic eqtion  .",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Find\nthe\nsolition\nto the qadratic\neqtion.",
    "instruct_several_html_tags": "<div><p><span>Find the solution to the quadratic equation.</span></p></div>",
    "instruct_spoiler_bars": "||Find the solution to the quadratic equation.||",
    "instruct_with_inbetween_gzip_b64_blob": "Find H4sIAAAAAAAAE+XAIQkAQAwDwP+poWp82aCB\n8XvM+W9t5gEA4P37EwCA/5kCAAAAAP6dZlF4\nABwYf6gAAAAA///j7e/jAAAA the H4sIAAAAAAAAE+XAIQkAQAwDwP+poWp82aCB\n8XvM+W9t5gEA4P37EwCA/5kCAAAAAP6dZlF4\nABwYf6gAAAAA///j7e/jAAAA solution H4sIAAAAAAAAE+XAIQkAQAwDwP+poWp82aCB\n8XvM+W9t5gEA4P37EwCA/5kCAAAAAP6dZlF4\nABwYf6gAAAAA///j7e/jAAAA to H4sIAAAAAAAAE+XAIQkAQAwDwP+poWp82aCB\n8XvM+W9t5gEA4P37EwCA/5kCAAAAAP6dZlF4\nABwYf6gAAAAA///j7e/jAAAA the H4sIAAAAAAAAE+XAIQkAQAwDwP+poWp82aCB\n8XvM+W9t5gEA4P37EwCA/5kCAAAAAP6dZlF4\nABwYf6gAAAAA///j7e/jAAAA quadratic H4sIAAAAAAAAE+XAIQkAQAwDwP+poWp82aCB\n8XvM+W9t5gEA4P37EwCA/5kCAAAAAP6dZlF4\nABwYf6gAAAAA///j7e/jAAAA equation. H4sIAAAAAAAAE+XAIQkAQAwDwP+poWp82aCB\n8XvM+W9t5gEA4P37EwCA/5kCAAAAAP6dZlF4\nABwYf6gAAAAA///j7e/jAAAA",
    "instruct_zalgo": "Fı̭̕nd ̺̚t͞h̡ḛ͏ ͑s̴ö͒͟l̥̼u̴ţ͔ı͓ö͑n ͠ͅt̫͏o̵ ̴ţ̢h̫e ̸q̸u҉a̗ďŗąťı̙c͡ ̴e͢q̨ư̕āťıõ͠n.",
    "instruct_zero_width": "F‌i‌n‌d‌ ‌t‌h‌e‌ ‌s‌o‌l‌u‌t‌i‌o‌n‌ ‌t‌o‌ ‌t‌h‌e‌ ‌q‌u‌a‌d‌r‌a‌t‌i‌c‌ ‌e‌q‌u‌a‌t‌i‌o‌n‌.‍",
    "instruct_zero_width_and_typo": "F‌i‌n‌d‌ ‌t‌h‌e‌ ‌s‌o‌l‌i‌t‌i‌o‌n‌ ‌t‌o‌ ‌t‌h‌e‌ ‌q‌a‌d‌r‌a‌t‌i‌c‌ ‌e‌q‌t‌i‌o‌n‌.‍",
    "output": "The solution of the quadratic equation is x = -4 and x = 1/3.",
    "prompt_id": "04172e5e-ea74-446c-a264-9ebf98f35ca0"
  },
  {
    "prompt_count": 132,
    "instruction_original": "Find the average of these three numbers.",
    "input": "2, 5, 10",
    "instruct_all_caps_and_typo": "FIND THE AVERIGE OF THESE THREE NUMBERS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "FIND THE AVERIGE OF THESE THREE NUMBERS.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "FIND THE AVERIGE OF THESE THREE NUMBERS.",
    "instruct_all_caps_and_typo_and_missing_quote": "FIND THE AVERIGE OF THESE THREE NUMBERS.",
    "instruct_code_fence": "```Find the average of these three numbers.```",
    "instruct_confusable_unicode": "Find the аvеrаgе of thеsе thrее numbеrs.",
    "instruct_confusable_unicode_and_typo": "Find the аvеrаgе of thеsе thrее numbrs.",
    "instruct_emoji": "Find the average 📊 of these three numbers 🔢🔢🔢.",
    "instruct_emoji_and_typo": "Find the averige 📊 of these three numbers 🔢🔢🔢.",
    "instruct_emoji_and_typo_and_missing_bracket": "Find the averige 📊 of these three numbers 🔢🔢🔢.",
    "instruct_emoji_and_typo_and_missing_quote": "Find the averige 📊 of these three numbers 🔢🔢🔢.",
    "instruct_emoticon": "Find the average :-) of these three numbers.",
    "instruct_emoticon_and_typo": "Find the averige :-) of these three numbers.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Find the averige :-) of these three numbers.",
    "instruct_emoticon_and_typo_and_missing_quote": "Find the averige :-) of these three numbers.",
    "instruct_helpful_markdown_structure": "*   Find the average of these three numbers.",
    "instruct_helpful_meaning_reinforing_characters": "Find the average [+] of these three numbers (#).",
    "instruct_html_tags": "<p>Find the average of these three numbers.</p>",
    "instruct_kaomoji": "Find the average (^ω^) of these three numbers.",
    "instruct_kaomoji_and_typo": "Find the averige (^ω^) of these three numbers.",
    "instruct_markdown_bold": "**Find the average of these three numbers.**",
    "instruct_markdown_bold_and_italic": "***Find the average of these three numbers.***",
    "instruct_markdown_italic": "*Find the average of these three numbers.*",
    "instruct_qr_ascii": "Find the average of these three numbers. ██▄█▄",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Find the\naverige of\nthese three\nnumbers.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Find the\naverige of\nthese three\nnumbers.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Find the\naverige of\nthese three\nnumbers?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Find the \n averige of \n these three \n numbers ?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Find the\naverige of\nthese three\nnumbers.",
    "instruct_several_html_tags": "<p><span><b><i>Find the average of these three numbers.</i></b></span></p>",
    "instruct_spoiler_bars": "||Find the average of these three numbers.||",
    "instruct_with_inbetween_gzip_b64_blob": "Find the average of these three numbers.",
    "instruct_zalgo": "F͎ịn̕d̶ ̔t̴h͏e̴ ̋a̸v͊êr҉a͆g̶e̵ ͆o̶f̔ t͂h́ë́s͋ē ̃t͆h͆r͂e̸e̕ ̊n̴u̸m̕b̊e̴r̴s.",
    "instruct_zero_width": "Find‍ the‍ av‍er‍age‍ of‍ the‍se‍ thr‍ee‍ nu‍mb‍er‍s.",
    "instruct_zero_width_and_typo": "Find‍ the‍ av‍er‍age‍ of‍ the‍se‍ thr‍ee‍ numbrs.",
    "output": "The average of 2, 5, 10 is 5.67.",
    "prompt_id": "544486b5-9e2d-4db8-ba18-88da6c6b6a83"
  },
  {
    "prompt_count": 133,
    "instruction_original": "Rewrite the sentence in a different tense.",
    "input": "He asked her to join him for lunch.",
    "instruct_all_caps_and_typo": "REWITE THE SENTNCE IN A DIFFRENT TENSE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWITE THE SENTNCE IN A DIFFRENT TENSE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "REWITE THE SENTNCE IN A DIFFRENT TENSE.",
    "instruct_all_caps_and_typo_and_missing_quote": "REWITE THE SENTNCE IN A DIFFRENT TENSE.",
    "instruct_code_fence": "```\nRewrite the sentence in a different tense.\n```",
    "instruct_confusable_unicode": "Ɍєաɼıʈє ʈɧє ꜱєɲʈєɲɕє ıɲ a ɖıբբєɾєɲʈ ʈєɲꜱє.",
    "instruct_confusable_unicode_and_typo": "Ɍєաɼıʈє ʈɧє ꜱєɲʈcє ıɲ a ɖıբբєɾєɲʈ ʈєɲꜱє.",
    "instruct_emoji": "✍️ Rewrite the sentence 📝 in a different tense 🕰️.",
    "instruct_emoji_and_typo": "✍️ Rewrite the sentnce 📝 in a different tense 🕰️.",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ Rewrite the sentnce 📝 in a different tense 🕰️.",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ Rewrite the sentnce 📝 in a different tense 🕰️.",
    "instruct_emoticon": ":) Rewrite the sentence :) in a different tense (:.",
    "instruct_emoticon_and_typo": ":) Rewrite the sentnce :) in a different tense (:.",
    "instruct_emoticon_and_typo_and_missing_bracket": ":) Rewrite the sentnce :) in a different tense (:.",
    "instruct_emoticon_and_typo_and_missing_quote": ":) Rewrite the sentnce :) in a different tense (:.",
    "instruct_helpful_markdown_structure": "### Task\n\n- Rewrite the sentence:\n\n> Rewrite the sentence in a different tense.",
    "instruct_helpful_meaning_reinforing_characters": ">> Rewrite the sentence in a different tense. -> ✨",
    "instruct_html_tags": "<p>Rewrite the <span>sentence</span> in a different tense.</p>",
    "instruct_kaomoji": "(｡･ω･｡)ﾉ Rewrite the sentence in a different tense. (´ ω \")",
    "instruct_kaomoji_and_typo": "(｡･ω･｡)ﾉ Rewrite the sentnce in a different tense. (´ ω \")",
    "instruct_markdown_bold": "**Rewrite the sentence in a different tense.**",
    "instruct_markdown_bold_and_italic": "_**Rewrite the sentence in a different tense.**_",
    "instruct_markdown_italic": "*Rewrite the sentence in a different tense.*",
    "instruct_qr_ascii": "██████████\n██▄▀█▀▄███\n███ ▀ ████\n██▄███▄███\n██████████\nRewrite the sentence in a different tense.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rewrite the\nsentnce\nin a\ndiffrent\ntense.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Rewrite the\nsentnce\nin a\ndiffrent\ntense.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Rewrite the,\nsentnce\nin a\ndiffrent\ntense,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Rewrite the , sentnce\nin a diffrent tense ,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Rewrite the\nsentnce\nin a\ndiffrent\ntense.",
    "instruct_several_html_tags": "<div><p><span>Rewrite the sentence</span></p> in a different tense.</div>",
    "instruct_spoiler_bars": "||Rewrite the sentence in a different tense.||",
    "instruct_with_inbetween_gzip_b64_blob": "Rewrite the sentence [blob:gz+b64:H4sIAAAAAAAA/0vOSMxNzypKLAYAPd00JQwAAAA=] in a different tense.",
    "instruct_zalgo": "R̶̎͑͐̅͆̈̂̃̋̒̔͐e̶͛́̈́͐̊̈͋̄̿̋̒͠͠w̷͗͑̃̀͝͠r̵̽͐͒̍̏̍î̴͐͐̾̽̅̒̈͊͋̃̾t̴͋̊̌͑̀̅͒͒̚͝͝e̴̔̌̀͛̌͐̉̿̓̀̌͝͠ t̴̒̏̈́̌͊̈́̌̊̑̌̂̚̚ḣ̴́̅̃̓̈́͐̂̒͐ĕ̶̊̀̀̋͝ ś̵͒̂̈̂̇͐̌̽̚͝e̷̓̽̂͐̈̈̀͑͑̚͘n̴̏̄̀͋̓͛t̷̾̍̏̃̃͐̅͊̄͐͛͝e̴̓̍̅̌͠n̷̓͒͆͗̈̏̈̂̃̈̿̽̚c̷͒̈́͌̃̈́̉̇͋̑̄̈̅̚ẽ̸̎̍̾̈́̓̾̀̀͊̂͆̚ i̸͑͋͛̂̿͒͐͒͝n̷͊̌͒́̊̏͑̈͆̃̀̎̍ a̷͑̃̓̌̓͌͊͐͆̂̍͆ d̸͋̈͒̍̊͒͆̃̌̂̕̕i̸͗͑̂́̊͊̾͊̾̑̚̕̚f̸̾͑̍͐̂͆̍͌̊́͌͠͠f̷̽̀̽̌̊̉͛̉͆͐̚͝e̸̍͛̃̓̈́͂͐͛̎͊̎͘̕r̴̒͗̃̀͂̌̈̈́̂̓͝͠͝e̶͂̓̈́̎̒̑̓̂̈́̾̚͝͝ñ̶̄̈̄̾̈́̿̀̈̌̈͘̚t̷̀̏̅͐̓͛̔͑̌̚̕͠͠ t̴͊͐͋͐̾͛͆̔͊͊͠e̷͑̇͆̓̂̽͆͌̏͊̌̚̚n̸̈́̃̌̆̀͊͒̑̎͘͘͝s̵͊͑̅̆̌̌̔̈́͐̈̌̾͝e̶̅́̈͂͛͌̈́͂͆̓͂͘.̵̈́̓̂͂͛̾̀͑͂̕̕͠",
    "instruct_zero_width": "R\b\bread\b\bwrite\b\be the sent\b\bence\b\b in a diffe\b\brent tense\b\b.",
    "instruct_zero_width_and_typo": "R\b\bread\b\bwrite\b\be the sent\b\bcne\b\b in a diffe\b\brent tense\b\b.",
    "output": "He had asked her to join him for lunch.",
    "prompt_id": "80bf7c3b-2d13-4c7d-937b-e7c43ca9613b"
  },
  {
    "prompt_count": 134,
    "instruction_original": "Classify the following data with three labels.",
    "input": "fjsklfjdsklfjsklfjsklfjs",
    "instruct_all_caps_and_typo": "CLASIFY THE FOLLOWING DATA WITH THREE LABELS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CLASIFY THE FOLLOWING DATA WITH THREE LABELS",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CLASIFY THE FOLLOWING DATA WITH THREE LABELS",
    "instruct_all_caps_and_typo_and_missing_quote": "CLASIFY THE FOLLOWING DATA WITH THREE LABELS",
    "instruct_code_fence": "```Classify the following data with three labels.```",
    "instruct_confusable_unicode": "Сlassify the following data with three labels.",
    "instruct_confusable_unicode_and_typo": "Сlasify the following data with three labels.",
    "instruct_emoji": "Classify the following data with three labels. 🤔📊🏷️🏷️🏷️",
    "instruct_emoji_and_typo": "Clasify the following data with three labels. 🤔📊🏷️🏷️🏷️",
    "instruct_emoji_and_typo_and_missing_bracket": "Clasify the following data with three labels 🤔📊🏷️🏷️🏷️",
    "instruct_emoji_and_typo_and_missing_quote": "Clasify the following data with three labels 🤔📊🏷️🏷️🏷️",
    "instruct_emoticon": "Classify the following data with three labels. :-)",
    "instruct_emoticon_and_typo": "Clasify the following data with three labels. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Clasify the following data with three labels :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Clasify the following data with three labels :-)",
    "instruct_helpful_markdown_structure": "- Classify the following data with three labels.",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Classify the following data with three labels. 🏷️🏷️🏷️",
    "instruct_html_tags": "<div>Classify the following data with three labels.</div>",
    "instruct_kaomoji": "Classify the following data with three labels. (・ω・)ノ",
    "instruct_kaomoji_and_typo": "Clasify the following data with three labels. (・ω・)ノ",
    "instruct_markdown_bold": "**Classify the following data with three labels.**",
    "instruct_markdown_bold_and_italic": "***Classify the following data with three labels.***",
    "instruct_markdown_italic": "*Classify the following data with three labels.*",
    "instruct_qr_ascii": "Classify the following data with three labels. [QR ASCII art placeholder]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Classify\r\nthe folowing data\r\nwith three labels",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Classify the\r\nfolowing data\r\nwith three labels",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Classify the\r\nfolowing data\r\nwith three labels,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Classify the\r\nfolowing data\r\nwith three labels ,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Classify\r\nthe folowing data\r\nwith three labels",
    "instruct_several_html_tags": "<p><b><i>Classify the following data with three labels.</i></b></p>",
    "instruct_spoiler_bars": "||Classify the following data with three labels.||",
    "instruct_with_inbetween_gzip_b64_blob": "Classify the following data [gzip_b64_blob] with three labels.",
    "instruct_zalgo": "Çl̯a̩ssi̳f̙y tḩe f̟o̫llőw̳i͙n̲g d̲a̮tͅa wi̕t̙h t̂h̨re̯ẹ l̂a̤b́e͜l͙s.",
    "instruct_zero_width": "C\r\nl\r\na\r\ns\r\ns\r\ni\r\nf\r\ny\r\n \r\nt\r\nh\r\ne\r\n \r\nf\r\no\r\nl\r\nl\r\no\r\nw\r\ni\r\nn\r\ng\r\n \r\nd\r\na\r\nt\r\na\r\n \r\nw\r\ni\r\nt\r\nh\r\n \r\nt\r\nh\r\nr\r\ne\r\ne\r\n \r\nl\r\na\r\nb\r\ne\r\nl\r\ns\r\n.",
    "instruct_zero_width_and_typo": "C\r\nl\r\na\r\ns\r\ni\r\nf\r\ny\r\n \r\nt\r\nh\r\ne\r\n \r\nf\r\no\r\nl\r\nl\r\no\r\nw\r\ni\r\nn\r\ng\r\n \r\nd\r\na\r\nt\r\na\r\n \r\nw\r\ni\r\nt\r\nh\r\n \r\nt\r\nh\r\nr\r\ne\r\ne\r\n \r\nl\r\na\r\nb\r\ne\r\nl\r\ns\r\n.",
    "output": "Label1: Character data\nLabel2: Alphabetical data\nLabel3: Non-alphabetical data",
    "prompt_id": "dc4dd621-cb84-4998-bb6c-01af0207724d"
  },
  {
    "prompt_count": 135,
    "instruction_original": "Compose a five word sentence describing your day.",
    "input": "",
    "instruct_all_caps_and_typo": "COMPOS A FIVE WORD SENTENCE DESCRIBING YOR DAY.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPOS A FIVE WORD SENTENCE DESCRIBING YOR DAY.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "COMPOS A FIVE WORD SENTENCE DESCRIBING YOR DAY.",
    "instruct_all_caps_and_typo_and_missing_quote": "COMPOS A FIVE WORD SENTENCE DESCRIBING YOR DAY.",
    "instruct_code_fence": "```Compose a five word sentence describing your day.```",
    "instruct_confusable_unicode": "Cσmpσsε α fιvε wσrd sεntεncε dεscrιbιng чσur daч.",
    "instruct_confusable_unicode_and_typo": "Cσmpσsε α fιvε wσrd sεntεncε dεscrιbιng чσr daч.",
    "instruct_emoji": "Write a sentence ✍️ summing up 😊 your day ☀️.",
    "instruct_emoji_and_typo": "Write a sentenc ✍️ summing up 😊 yor day ☀️.",
    "instruct_emoji_and_typo_and_missing_bracket": "Write a sentenc ✍️ summing up 😊 yor day ☀️.",
    "instruct_emoji_and_typo_and_missing_quote": "Write a sentenc ✍️ summing up 😊 yor day ☀️.",
    "instruct_emoticon": "Write a sentence :) summing up (: your day :( .",
    "instruct_emoticon_and_typo": "Write a sentenc :) summing up (: yor day :( .",
    "instruct_emoticon_and_typo_and_missing_bracket": "Write a sentenc :) summing up (: yor day :( .",
    "instruct_emoticon_and_typo_and_missing_quote": "Write a sentenc :) summing up (: yor day :( .",
    "instruct_helpful_markdown_structure": "- Compose a five word sentence describing your day.",
    "instruct_helpful_meaning_reinforing_characters": "Compose! A! Five! Word! Sentence! Describing! Your! Day! 🎉😊☀️✍️",
    "instruct_html_tags": "&lt;p&gt;Compose a five word sentence describing your day.&lt;/p&gt;",
    "instruct_kaomoji": "Write a sentence (・ω・) summing up (o´∀｀o) your day (o_ _)o.",
    "instruct_kaomoji_and_typo": "Write a sentenc (・ω・) summing up (o´∀｀o) yor day (o_ _)o.",
    "instruct_markdown_bold": "**Compose a five word sentence describing your day.**",
    "instruct_markdown_bold_and_italic": "***Compose a five word sentence describing your day.***",
    "instruct_markdown_italic": "*Compose a five word sentence describing your day.*",
    "instruct_qr_ascii": "█████████████████████████\n█████████████████████████\n██ ▄▄▄ █ ▄▄▄ █ ▄▄▄ ██\n██ █▄▄ █▄▀ █ █ ▄▄█ ██\n██ █▄█ █▄▄▄█ █▄▄▄█ ██\n██▄▄▄▄▄█▄▀▄█▄▄▄▄▄██\n██▄▄▄▄▄██▄█▄█▄▄▄▄▄██\n██ ▄ █ ▄ █ ▄▄█ ██\n██ ███ ██▀██ ██ ██\n██▄▄▄▄▄█▄▄▄█▄▄▄▄▄██\n█████████████████████████\n█████████████████████████\nCompose a five word sentence describing your day.\n█████████████████████████\n█████████████████████████\n",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compos\ne a five\nword sentence\ndescibing\nyor day.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Compos\ne a five\nword sentence\ndescibing\nyor day.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Compos\ne a five\nword sentence?\ndescibing\nyor day.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "C o mpos\n e a  five\nword  sentence? \ndescibing\nyor day.",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Compos\ne a five\nword sentence\ndescibing\nyor day.",
    "instruct_several_html_tags": "&lt;div&gt;&lt;span&gt;&lt;b&gt;Compose a five word sentence describing your day.&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;",
    "instruct_spoiler_bars": "||Compose a five word sentence describing your day.||",
    "instruct_with_inbetween_gzip_b64_blob": "Compose a five word sentence [GZIP_B64_BLOB] describing your day.",
    "instruct_zalgo": "C̴̬̰͙͚̠̳̈́̎̌́͒̈́́͝͠ö̸͇̫͉̟̟̹͈̱̤̟̫̝̩̞͈́̔̈́͑̿̌̓́́̊̏͝ḿ̷̧̦̲̭̗̞̳͚̼̳͚̦̖̙͚̼̐̊͛̎̃̋̀̊́́͊̚̚ṕ̶̳̤̯͓̣̯̤͍͍͙̘̳̲̠̰͂̔͊̇͊͐̈́́͌͘ͅͅő̸̢̢̫͓͍̰̺̝̼̘͚̫̠͕̬̟̳̩͌̀͐̄̑͆͆̄͑͂̍̅̃̈́̚͝ś̵̟̞̯̝͔̫̮̯̜̥̠̟̠̱͔̯̀̍̀̊́͌̀̑̂̃̏̇̀̀̕ͅë̷̝̥̯̳͎͉̫̲́̇̐̃̅͒͘̚͜͝ͅ ̷̫̥̖̝̰̥̫̬̯͚̲̘̮͇̥͎̗͕̣̈́̀̄̃̂̇̈́̎̚̚͘͠ͅa̷̧̫̩̳̤̤͍̩͎͙̤̙̜̤͑̈́̊̄̔̃̎̌͊͒͌͒͋̾͑͛́̏̃͝ ̷̣̣̖͇͎̥̯̈́̉́̇̅̄̇̈́̅̇́̃̅͌͝f̷͖̯̱̞͎̗̲̃̀͐̌̋͗̀͋͗̿͂͝ͅḭ̵̧̩̲̥̬̥͔̩͇̖͖̩̬̪̲̳̣̤̀͌͛͆̌͑͑͐̀̈́̾͝v̵̛̱̖̦͙̩̝̳̫͈̜̤͑̀͌͌̌̀͐͗̄͛̒̋͗́̓̓̚̚ḙ̸̖̟̟̠̈́́̎͐̄́̀͋͝ ̶̣͎͕̣͈͎̲̘̣̬̥̥͔̩͚͓̫̀̌͐̾̽͒͋̓̋͋́̉͑̈́͝w̶̨̛̛̛̳͇̗̙̬̫̙̳̣͍̖͇͓͔̹͖̼͚̩̥̐͂̃͂͋̽͊̀̋̉̋͒̅̆͘̚̚͝ǫ̸̲̪̠̦̞̯̱̣̫͉͙̥̈́͐̎̏̽̃̄́̃̈́́̕͜͝ͅṟ̸̡̛̝̳̘͕͈̞̹̲̱̙̩̼̥̦͈̟̣̉͆̆͂̐̀͑͂̓̑̇̕d̷̮̣͎͉̜̙͉̣̩̹̺͕̠͉̮͍̞̙̘͌̄͊̇̔́͂̅͌̄͒́̂͒͆̂͗͘͜ ̸̧̛͉͇̝͈̜͓̱͉͈̘̤̰̱̣̖̝̤̀̍͒̂̈́͌͐͒̇̄͐͑̒͑͌̏͗͒͂̾́͂͘͝͝s̸̨̟̰̫̲̖͉̖͖͎̞͖̖͎̮͉̣̣͒̀̎̔͑̊̈́̍̈́̋͋̎̈͊͑̀̌̀̀̀e̵̢̞͓̙̲͖̜̬̜͔̥͇̠̮̖͈̜̣͊͌͊̄̅̈́́͗̽̈́͌͒̾͘n̸͎̗̥̜̣͔͚̪͎͖͇͕̺͔͕̼̱͉͍̒͑͛͋̽͆͐͂̊͂̃̿̉̅͊͆̾̾̑͗̐̓͒̾̌̃͜ẗ̴̡̹͎̱̮̖͖͈̗̯̺̤̼̳́̓́́̍̇̅͌͆̇̚̚͜͝ę̸̛̙̝̳̠͇͚̹̬̜̱͍̥́̌̌́̌̅̓̃̆̀̾̂͑́͒̈́͐͒̓̚̕ǹ̷͚̹͓̱̳̯̮̪͇̜̄̓̓̀̈́͆̓͊͑̍͗̇̔̃́̋̍͘͘͝͝c̵̳͇̹͉̬̝̥͎̳͙̼̙͖̳̤̱͆̉̒̓͒̍̌̈́̔̎̊̓̄̌̕͜͝ę̸͈͉̰͍̠̖͔̰͎̩͍̺̹̓̐͂̍͐̔͋̕͝ ̴̬̱̳̖̜̰̬̩̙͓͓̯̜̥̃̐͛̒̈́̍́̍̔̔͘͜d̴͎͇̣͍̠͈͖̗̙̱͈̠̺͒̐̔͋̑̽͛̅͑͒́̇͆̇̾̇́̈́̀͑͋̏͋̓̔̕͘͝é̴̢̧͉̫̖̯͎̠̣̲̬͙͎̖̮͈̳̤̯̗̐͒̋̄̆̊̃̃͋͗͑̅̈́́̄̇̄̈́̓́̓͋̍̇̉̀͌͂̕s̵̨̛̬̜̳̫̱͎̲͔͓͖̥̺͉͎̣̥̮̪͚̬͓̀̾͊͑̀̂̌̂̃́͛̈́͆̔̓̃̈́̚͘͘̕͜͝c̴̢̧̮̣̫̥̱͓͔̯͔̹͍͙̟̦̜͒͆̍̓͌̈́̉̐͗͌̌͒̇̽̈́̃̃͑̇̕̚͝r̷̨͈̣̝̱̹̙̮͉͔͔͉͎̠̥̬̜̱̥̦̣͋̃̈́́̀̍͑͐̄̒̉͆͌̌̐͋̊̉͘̚͝͝ͅì̸͎̩̜̘̱̰̬͚͎͖̩̗̬̖̖̉͊̑́̂͐͑̃̓̊̃̽̚̚̕b̷̢̡̗͎̰͔͉͙͎̳͔͔̦̮̰̖͒̐̔̍̃͋̎̂͑͋̀͐̂͐͐̚͜͠ͅͅi̸̢̨̟̙̜̖̮̦͍̮͓͚͕͇̬̜̣̲̬̹̬̾̇͒̂́͐̋͐̃͐͐́̇͑̈́͒͊̅͊̀̓͘͝͝ņ̴̗͓̰̦͍͓̤̥̟̥͈̳̞̞̮̖̈́̇́̈́̑́̐̎͋̉́̍̓̃̎̓̉̈́̎̓̈́̓͗͝͠g̴̟̦̦̥͍͉̬̮͙̦̮̖̃̂̾̀̊̔̍̈́͐̎̊͋̈́̔̕̚̕͝ ̸̱̫̣̹͍̝͚̈́̃̆͊́̌̂̍̏̃̇̚͜y̷͇̳̗̝̲̣͇̥͎̮̝̙͈̫̭͓̲̣̖̆̈́̌͋͑̃̈́̃̈́̀̏̃̃͐̀́̇̏̏̆͑̅͆̃̕̕͘ͅo̴̧̡̲̳͙̤͈͓̮̝̰̫̫̘̠͙̱͙̝̔̓́̋̐̊̔̽̌̽͑̑̀͑͛̃̈́͋̑̉͌͗̀͋̂̂̃͐͑̀̂͠ù̵̖̳̦͈͎͖̣͕͇̠̮̣͍͉͙̳̬̫̪̮͉̹̇̃̌̓́̌̆̀̊͊̂͋̓͊̔̕̚̕r̴̟͍̹̣͔̰͈̜͔̬̗̘͇̥̝͍͈̥̪̲͉̣͗̎́̃̂͐̊̄͗̆̆͒̇͊̂̇͆̕͘͜ ̷̨̳̰̥͈̙̭͈͚̟̣̖̮͓̤̟͕̯̥͚̜̟̃̔̃̂̌̒̍͛̊̉͋͊̔͑͒͋̇̑̌̒̈́̆͐̕͘d̸̥͈̟̫̲̹̘̞̭̤̠͖͕̙͉̠̜̮͎͙͚͈͐̃̂͌̋́̃͐̋͑͑̅̈́̀́́̕͠͝å̴̞̦̬̤̜̯̮̟̙̪̥͎͈̼͉̯̰͓̝͙̼͍̳̘̤̒͂̓̽͊̓͋̓̽̆̓̕͜͝ý̷͎͉̣͙̝̳̟̫͇̪͔̝̩̭̪̗̣̟͕̦͚̪̘̤̩̦̥̳͐̃͑͗̈́̈́̋̓͐̃̈́̂̃̚̚͘͝.`, syllables: 3, chars: 1583, word_count: 5}",
    "instruct_zero_width": "C\nas\na\nas\nas\na\nas\ne\nas\n \nas\na\nas\nas\n \nas\na\nas\nas\nf\nas\na\nas\nas\nv\nas\na\nas\nas\ne\nas\n \nas\na\nas\nas\nw\nas\na\nas\nas\no\nas\na\nas\nas\nr\nas\na\nas\nas\nd\nas\n \nas\na\nas\nas\ns\nas\na\nas\nas\ne\nas\na\nas\nas\nn\nas\na\nas\nas\nt\nas\na\nas\nas\ne\nas\na\nas\nas\nn\nas\na\nas\nas\nc\nas\na\nas\nas\ne\nas\n \nas\na\nas\nas\nd\nas\na\nas\nas\ne\nas\na\nas\nas\ns\nas\na\nas\nas\nc\nas\na\nas\nas\nr\nas\na\nas\nas\ni\nas\na\nas\nas\nb\nas\na\nas\nas\ni\nas\na\nas\nas\nn\nas\na\nas\nas\ng\nas\n \nas\na\nas\nas\ny\nas\na\nas\nas\no\nas\na\nas\nas\nu\nas\na\nas\nas\nr\nas\n \nas\na\nas\nas\nd\nas\na\nas\nas\na\nas\na\nas\nas\ny.",
    "instruct_zero_width_and_typo": "C\nas\na\nas\nas\na\nas\ne\nas\n \nas\na\nas\nas\na\nas\n \nas\na\nas\nas\nf\nas\na\nas\nas\ni\nas\na\nas\nas\nv\nas\na\nas\nas\ne\nas\n \nas\na\nas\nas\nw\nas\na\nas\nas\no\nas\na\nas\nas\nr\nas\na\nas\nas\nd\nas\n \nas\na\nas\nas\ns\nas\na\nas\nas\ne\nas\na\nas\nas\nn\nas\na\nas\nas\nt\nas\na\nas\nas\ne\nas\na\nas\nas\nn\nas\na\nas\nas\nc\nas\n \nas\na\nas\nas\nd\nas\na\nas\nas\ne\nas\na\nas\nas\ns\nas\na\nas\nas\nc\nas\na\nas\nas\nr\nas\na\nas\nas\ni\nas\nas\nb\nas\nas\ni\nas\nas\nn\nas\nas\ng\nas\n \nas\nas\ny\nas\nas\no\nas\nas\nr\nas\n \nas\nas\nd\nas\nas\na\nas\nas\ny.",
    "output": "Today was an amazing day.",
    "prompt_id": "28434bfa-8a43-42df-b0ff-3a2f4c391772"
  },
  {
    "prompt_count": 136,
    "instruction_original": "Describe the following painting in one sentence.",
    "input": "Attached Painting",
    "instruct_all_caps_and_typo": "DESCRUBE THE FOLLOWING PAINTING IN ONE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESCRUBE THE FOLLOWING PAINTING IN ONE SENTENCE {",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "DESCRUBE THE FOLLOWING PAINTING IN ONE SENTENCE {",
    "instruct_all_caps_and_typo_and_missing_quote": "DESCRUBE THE FOLLOWING PAINTING IN ONE SENTENCE.",
    "instruct_code_fence": "```Describe the following painting in one sentence.```",
    "instruct_confusable_unicode": "Ðeѕcribe the foᥣ𝗹owiոg paιntiոg iո oոe ѕeոteոce.",
    "instruct_confusable_unicode_and_typo": "Ðeѕcribe the foᥣ𝗹owiոg paiitiոg iո oոe ѕeոteոce.",
    "instruct_emoji": "Describe 🖼️ the following painting 🎨 in one sentence. ✍️",
    "instruct_emoji_and_typo": "Describe 🖼️ the following paiting 🎨 in one sentence. ✍️",
    "instruct_emoji_and_typo_and_missing_bracket": "Describe 🖼️ the following paiting 🎨 in one sentence. ✍️ {",
    "instruct_emoji_and_typo_and_missing_quote": "Describe 🖼️ the following paiting 🎨 in one sentence. ✍️",
    "instruct_emoticon": "Describe the following painting :-) in one sentence.",
    "instruct_emoticon_and_typo": "Describe the following paiting :-) in one sentence.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Describe the following paiting :-) in one sentence. {",
    "instruct_emoticon_and_typo_and_missing_quote": "Describe the following paiting :-) in one sentence.",
    "instruct_helpful_markdown_structure": "- Describe the following painting in one sentence.",
    "instruct_helpful_meaning_reinforing_characters": "Describe ✏️ the following painting 🖼️ in one sentence. 👇✨",
    "instruct_html_tags": "Describe the <b>following</b> painting in one sentence.",
    "instruct_kaomoji": "Describe the following painting (・ω・) in one sentence. (人ﾟ∀ﾟ)",
    "instruct_kaomoji_and_typo": "Describe the following paiting (・ω・) in one sentence. (人ﾟ∀ﾟ)",
    "instruct_markdown_bold": "**Describe the following painting in one sentence.**",
    "instruct_markdown_bold_and_italic": "***Describe the following painting in one sentence.***",
    "instruct_markdown_italic": "*Describe the following painting in one sentence.*",
    "instruct_qr_ascii": "Describe the following painting in one sentence. █▄█ ▀ █▄▀",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Describe the follo\nwing paiting in one sentenc {\ne.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Describe the follo\nwing paiting in one sentenc {\ne.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Describe the follo\nwing paiting in one sentenc {\ne?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Describe the follo\nwing paiting in one sentenc {  \ne?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Describe the follo\nwing paiting in one sentenc\ne.",
    "instruct_several_html_tags": "<p><i>Describe</i> <u>the following</u> <b>painting</b> in one sentence.</p>",
    "instruct_spoiler_bars": "||Describe the following painting in one sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Describe the following H4sICPkGGGECAOOX8hUC/wMA+A+B+AAAA painting in one sentence.",
    "instruct_zalgo": "D̵e̵s̵c̴r̶i̷b̵e̸ t̸h̴e̷ f̴o̶l̷l̷o̶w̴i̸n̵g̵ p̸a̵i̴n̶t̷i̴n̵g̸ i̵n̵ o̷n̶e̵ s̶e̴n̴t̷e̴n̴c̴e̵.",
    "instruct_zero_width": "Describe\n\n\nthe\n\nfoll\n\nowing pa\n\nintin\n\ng in\n\none\n\nse\n\nntence.",
    "instruct_zero_width_and_typo": "Describe\n\n\nthe\n\nfoll\n\nowing paiitin\n\ng in\n\none\n\nse\n\nntence.",
    "output": "The painting depicts a sprawling landscape on a beautiful day with rolling hills and a river winding its way through the terrain.",
    "prompt_id": "3c639095-ffa7-4940-9c55-f7a8edc3b711"
  },
  {
    "prompt_count": 137,
    "instruction_original": "Search the web and find the title of the longest novel.",
    "input": "",
    "instruct_all_caps_and_typo": "SEARCH THE WEBM AND FIND THE TITLE OF THE LONGEST NOVEL.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SEARCH THE WEBM AND FIND THE TITLE OF THE LONGEST NOVEL.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "SEARCH THE WEBM AND FIND THE TITLE OF THE LONGEST NOVEL.",
    "instruct_all_caps_and_typo_and_missing_quote": "SEARCH THE WEBM AND FIND THE TITLE OF THE LONGEST NOVEL.",
    "instruct_code_fence": "```\nSearch the web and find the title of the longest novel.\n```",
    "instruct_confusable_unicode": "Sеаrсh thе wеЬ аnd find thе titlе оf thе lоngеst nоvеl.",
    "instruct_confusable_unicode_and_typo": "Sеаrсh thе wеЬЬ аnd find thе titlе оf thе lоngеst nоvеl.",
    "instruct_emoji": "Search🔎 the web🌐 and find🔍 the title📄 of the longest📏 novel📖.",
    "instruct_emoji_and_typo": "Search🔎 the webl🌐 and find🔍 the title📄 of the longest📏 novel📖.",
    "instruct_emoji_and_typo_and_missing_bracket": "Search🔎 the webl🌐 and find🔍 the title📄 of the longest📏 novel📖.",
    "instruct_emoji_and_typo_and_missing_quote": "Search🔎 the webl🌐 and find🔍 the title📄 of the longest📏 novel📖.",
    "instruct_emoticon": "Search :-) the web ;-) and find ;-) the title :-) of the longest :-) novel :-).",
    "instruct_emoticon_and_typo": "Search :-) the webb ;-) and find ;-) the title :-) of the longest :-) novel :-).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Search :-) the webb ;-) and find ;-) the title :-) of the longest :-) novel :-).",
    "instruct_emoticon_and_typo_and_missing_quote": "Search :-) the webb ;-) and find ;-) the title :-) of the longest :-) novel :-).",
    "instruct_helpful_markdown_structure": "# Task 1\n\n*   Search the web\n*   Find the title of the longest novel",
    "instruct_helpful_meaning_reinforing_characters": "🌐➡️🔍📄📏📖",
    "instruct_html_tags": "<span>Search the web and find the title of the longest novel.</span>",
    "instruct_kaomoji": "Search (•̀ᴗ•́)و the web (^_^♪) and find (人◕ω◕) the title (📄) of the longest (📏) novel (📖).",
    "instruct_kaomoji_and_typo": "Search (•̀ᴗ•́)و the webb (^_^♪) and find (人◕ω◕) the title (📄) of the longest (📏) novel (📖).",
    "instruct_markdown_bold": "**Search the web and find the title of the longest novel.**",
    "instruct_markdown_bold_and_italic": "_**Search the web and find the title of the longest novel.**_",
    "instruct_markdown_italic": "_Search the web and find the title of the longest novel._",
    "instruct_qr_ascii": "Search the web and find the title of the longest novel.\n███████████████████\n████ ▄▄▄▄▄ █ ▄▄▄▄▄ ██\n███ █ █ ██ █ ██\n███ █ █ █ █ █ █ █ ██\n███ █ █ █ █ █ █ █ ██\n███ █ █ █ █ █ █ █ ██\n███ ▄▄▄▄▄ █ █ ▄▄▄▄▄ ██\n███ ██ ██ ██ ██ ██\n███████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Search the\nwebb and\n find the title of\nthe longest novel.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Search the\nwebb and\n find the title of\nthe longest novel.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Search the\nwebb and.\n find the title of,\nthe longest novel?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Search the \nwebb and .\n find the title of, \nthe longest novel ?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Search the\nwebb and\n find the title of\nthe longest novel.",
    "instruct_several_html_tags": "<p><div><span>Search the web and find the title of the longest novel.</span></div></p>",
    "instruct_spoiler_bars": "||Search the web and find the title of the longest novel.||",
    "instruct_with_inbetween_gzip_b64_blob": "Search the web H4sIAAAAAAAA/wVBCwBAAI/+p5aEAAAA and find the title of the longest novel.",
    "instruct_zalgo": "S̵e̸a̷r̷c̵h̸ t̸h̶e̸ w̵e̸b̸ a̵n̸d̵ f̷i̵n̵d̴ t̸h̶e̵ t̵i̴t̸l̸e̸ o̴f̴ t̵h̸e̵ l̵o̶n̷g̸e̸s̸t̴ n̷o̵v̴e̴l̵.",
    "instruct_zero_width": "Search​ the​ web​ and​ find​ the​ title​ of​ the​ longest​ novel.",
    "instruct_zero_width_and_typo": "Search​ the​ webb​ and​ find​ the​ title​ of​ the​ longest​ novel.",
    "output": "The title of the longest novel is \"Gordale\", written by Carolyn Redfearn.",
    "prompt_id": "b9afc7b6-9194-4c91-9c2d-e9293fb8bccc"
  },
  {
    "prompt_count": 138,
    "instruction_original": "Change the following sentence from the singular form to the plural form.",
    "input": "The cat is drinking.",
    "instruct_all_caps_and_typo": "CHANGE THE FOLLOWINNG SENTENCE FROM THE SINGULAR FORM TO THE PLURAL FORM.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CHANGE THE FOLLOWINNG SENTENCE FROM THE SINGULAR FORM TO THE PLURAL FORM",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CHANGE THE FOLLOWINNG SENTENCE FROM THE SINGULAR FORM TO THE PLURAL FORM",
    "instruct_all_caps_and_typo_and_missing_quote": "CHANGE THE FOLLOWINNG SENTENCE FROM THE SINGULAR FORM TO THE PLURAL FORM.",
    "instruct_code_fence": "```Change the following sentence from the singular form to the plural form.```",
    "instruct_confusable_unicode": "Сhange the fօllowing sentence frօm the singular fօrm tօ the plural fօrm.",
    "instruct_confusable_unicode_and_typo": "Сhange the fօllowinng sentence frօm the singular fօrm tօ the plural fօrm.",
    "instruct_emoji": "📝 Change the following sentence from the singular form to the plural form. ✨",
    "instruct_emoji_and_typo": "📝 Change the followinng sentence from the singular form to the plural form. ✨",
    "instruct_emoji_and_typo_and_missing_bracket": "📝 Change the followinng sentence from the singular form to the plural form. ✨",
    "instruct_emoji_and_typo_and_missing_quote": "📝 Change the followinng sentence from the singular form to the plural form. ✨",
    "instruct_emoticon": "Change the following sentence from the singular form to the plural form :)",
    "instruct_emoticon_and_typo": "Change the followinng sentence from the singular form to the plural form :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Change the followinng sentence from the singular form to the plural form :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Change the followinng sentence from the singular form to the plural form :)",
    "instruct_helpful_markdown_structure": "## Task\n\n- Change the following sentence from the singular form to the plural form.",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Change the following sentence from the singular form to the plural form. 👍",
    "instruct_html_tags": "<b>Change the following sentence from the singular form to the plural form.</b>",
    "instruct_kaomoji": "Change the following sentence from the singular form to the plural form. (*^▽^*)",
    "instruct_kaomoji_and_typo": "Change the followinng sentence from the singular form to the plural form. (*^▽^*)",
    "instruct_markdown_bold": "**Change the following sentence from the singular form to the plural form.**",
    "instruct_markdown_bold_and_italic": "***Change the following sentence from the singular form to the plural form.***",
    "instruct_markdown_italic": "*Change the following sentence from the singular form to the plural form.*",
    "instruct_qr_ascii": "██████████████████\n█▄▀ ▀ ▄█ ▄█ █▄▀██\n█ ▄ ▄▄█ ▄ █ █ ▀▄██\n██▄▄▄▄▄█▄█▄█▄▄▄▄▄██\n█ █▄█▀█▄▀▄▄▄ ▄▀██\n█▄▀█▄█ ▄ ▀ █ █▄██\n█ ▀ ▀ ▀█▄▀██▀▄█▄██\n██████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Change the following\nsenence from the\nsingular form to the plural form.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Change the following\nsenence from the\nsingular form to the plural form.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Change the following\nsenence from the\nsingular form to the plural form!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Change the following\nsenence from the\nsingular form to the plural form !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Change the following\nsenence from the\nsingular form to the plural form.",
    "instruct_several_html_tags": "<div><span><p><i>Change the following sentence from the singular form to the plural form.</i></p></span></div>",
    "instruct_spoiler_bars": "||Change the following sentence from the singular form to the plural form.||",
    "instruct_with_inbetween_gzip_b64_blob": "Change the following sentence from the singular form to the plural form. PLACEHOLDER_GZIP_B64_BLOB Change the following sentence from the singular form to the plural form.",
    "instruct_zalgo": "C̸h̸a̸n̸g̸e̸ ̸t̸h̸e̸ ̸f̸o̸l̸l̸o̸w̸i̸n̸g̸ ̸s̸e̸n̸t̸e̸n̸c̸e̸ ̸f̸r̸o̸m̸ ̸t̸h̸e̸ ̸s̸i̸n̸g̸u̸l̸a̸r̸ ̸f̸o̸r̸m̸ ̸t̸o̸ ̸t̸h̸e̸ ̸p̸l̸u̸r̸a̸l̸ ̸f̸o̸r̸m̸.",
    "instruct_zero_width": "C\bha\b\b\b\bng\b\b\be \bth\b\be \b\bfo\b\bll\b\bow\b\b\bing\b\b\b s\b\ben\b\b\bten\b\b\bce \bfr\b\bom\b\b the\b\b s\b\bing\b\b\bu\b\blar\b\b\b \b\bf\b\b\bor\b\bm to\b\b the\b\b pl\b\bu\b\b\bral\b\b\b \b\bf\b\b\bor\b\bm.",
    "instruct_zero_width_and_typo": "C\bha\b\b\b\bng\b\b\be \bth\b\be \b\bfo\b\bll\b\bow\b\bin\b\b\bng\b\b\b s\b\ben\b\b\bten\b\b\bce \bfr\b\bom\b\b the\b\b s\b\bing\b\b\bu\b\blar\b\b\b \b\bf\b\b\bor\b\bm to\b\b the\b\b pl\b\bu\b\b\bral\b\b\b \b\bf\b\b\bor\b\bm.",
    "output": "The cats are drinking.",
    "prompt_id": "db455a9e-f616-44f1-a9ab-8e9d9f3f47d4"
  },
  {
    "prompt_count": 139,
    "instruction_original": "Compile a list of 5 US states located in the Mid West.",
    "input": "",
    "instruct_all_caps_and_typo": "COMPIL A LIST OF 5 US STTES LOCATED IN THE MID WESTT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPIL A LIST OF 5 US STTES LOCATED IN THE MID WESTT.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "COMPIL A LIST OF 5 US STTES LOCATED IN THE MID WESTT.",
    "instruct_all_caps_and_typo_and_missing_quote": "COMPIL A LIST OF 5 US STTES LOCATED IN THE MID WESTT.",
    "instruct_code_fence": "```Compile a list of 5 US states located in the Mid West.```",
    "instruct_confusable_unicode": "Complle a llst of 5 US states located ln the Mld West.",
    "instruct_confusable_unicode_and_typo": "Complle a llst of 5 US sttes located ln the Mld Westt.",
    "instruct_emoji": "📝 Compile a list of 5 US states 📍 located in the Mid West. Midwest 🇺🇸",
    "instruct_emoji_and_typo": "📝 Complie a list of 5 US states 📍 located in the Mid Westt. Midwestt 🇺🇸",
    "instruct_emoji_and_typo_and_missing_bracket": "📝 Complie a list of 5 US states 📍 located in the Mid Westt. Midwestt 🇺🇸",
    "instruct_emoji_and_typo_and_missing_quote": "📝 Complie a list of 5 US states 📍 located in the Mid Westt. Midwestt 🇺🇸",
    "instruct_emoticon": ":| Compile a list of 5 US states :) located in the Mid West. <('.')>",
    "instruct_emoticon_and_typo": ":| Complie a list of 5 US states :) located in the Mid Westt. <('.')>",
    "instruct_emoticon_and_typo_and_missing_bracket": ":| Complie a list of 5 US states :) located in the Mid Westt. <('.')>",
    "instruct_emoticon_and_typo_and_missing_quote": ":| Complie a list of 5 US states :) located in the Mid Westt. <('.')>",
    "instruct_helpful_markdown_structure": "* Compile a list of 5 US states located in the Mid West.\n\nHere is the list:\n\n1.\n2.\n3.\n4.\n5.",
    "instruct_helpful_meaning_reinforing_characters": "=> Compile a list of 5 US states located in the Mid West. ⭐",
    "instruct_html_tags": "<span>Compile a list of 5 US states located in the Mid West.</span>",
    "instruct_kaomoji": "(ง •_•)ง Compile a list of 5 US states located in the Mid West. (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧",
    "instruct_kaomoji_and_typo": "(ง •_•)ง Complie a list of 5 US states located in the Mid Westt. (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧",
    "instruct_markdown_bold": "**Compile a list of 5 US states located in the Mid West.**",
    "instruct_markdown_bold_and_italic": "***Compile a list of 5 US states located in the Mid West.***",
    "instruct_markdown_italic": "*Compile a list of 5 US states located in the Mid West.*",
    "instruct_qr_ascii": "█████████████████████████████\n█████████████████████████████\n████ ▄▄▄▄▄ █ █▄█ ▄█ ▄▄▄▄▄ ████\n████ █ ▄▄█ █▀▄ █ ▄▄▄ █ ▄▄█ ████\n████ █ ▄▄▄ █ ▄ ▄▄█ ▄ █ ▄▄▄ ████\n████ ▀▀▀▀▀ █ ▀ ▀ ▀ ▀ ▀▀▀▀▀ ████\n████ ▄▄▄▄▄ █ █ ▄▀ █ █ ▄▄▄▄▄ ████\n████ █ ▄▄█ █▄ █ ▄ ▄ █ █ ▄▄█ ████\n████ █ ▄▄▄ █▄▄ █ ▄ ▀▄█ █ ▄▄▄ ████\n████ ▀▀▀▀▀ █ ▄ ▀ ▀ ▀ ▀▀▀▀▀ ████\n████▄▄▄▄▄▄▄█▄█▄█▄█▄▄█▄█▄█▄████\n█████████████████████████████\n█████████████████████████████\nCompile a list of 5 US states located in the Mid West.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compil a list of 5\nUS sttes locate in the \nMid West.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Compil a list of 5\nUS sttes locate in the \nMid West.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Compil a list of 5,\nUS sttes locate in the \nMid West;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Compil  a list of 5,\nUS sttes locate in the \nMid West;",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Compil a list of 5\nUS sttes locate in the \nMid West.",
    "instruct_several_html_tags": "<div><p><span>Compile a list of 5 US states located in the Mid West.</span></p></div>",
    "instruct_spoiler_bars": "||Compile a list of 5 US states located in the Mid West.||",
    "instruct_with_inbetween_gzip_b64_blob": "Compile a list of H4sIAAAAAAAAA+PiYGDkYGBgZgABRhj5/fOFAAJGgN+3AAAA\n5 US states located in the Mid West.",
    "instruct_zalgo": "C̶o̵m̵p̶i̸l̷e̷ ̵a̷ ̷l̷i̴s̸t̵ ̷o̸f̶ ̵5̷ ̸U̸S̷ ̴s̵t̵a̶t̶e̸s̵ ̸l̸o̸c̷a̵t̶e̶d̴ ̶i̷n̶ ̴t̶h̶e̶ ̴M̴i̸d̵ ̷W̷e̶s̷t̶.̷",
    "instruct_zero_width": "C\b\b\b\b\b\b\b\bo\b\b\b\b\b\b\b\bm\b\b\b\b\b\b\b\bp\b\b\b\b\b\b\b\bi\b\b\b\b\b\b\b\bl\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\ba\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bl\b\b\b\b\b\b\b\bi\b\b\b\b\b\b\b\bs\b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bo\b\b\b\b\b\b\b\bf\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\b5\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bU\b\b\b\b\b\b\b\bS\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bs\b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\ba\b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\bs\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bl\b\b\b\b\b\b\b\bo\b\b\b\b\b\b\b\bc\b\b\b\b\b\b\b\ba\b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\bd\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bi\b\b\b\b\b\b\b\bn\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\bh\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bM\b\b\b\b\b\b\b\bi\b\b\b\b\b\b\b\bd\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bW\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\bs\b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\b.",
    "instruct_zero_width_and_typo": "C\b\b\b\b\b\b\b\bo\b\b\b\b\b\b\b\bm\b\b\b\b\b\b\b\bp\b\b\b\b\b\b\b\bi\b\b\b\b\b\b\b\bl\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\ba\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bl\b\b\b\b\b\b\b\bi\b\b\b\b\b\b\b\bs\b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bo\b\b\b\b\b\b\b\bf\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\b5\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bU\b\b\b\b\b\b\b\bS\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bst\b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\bs\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bl\b\b\b\b\b\b\b\bo\b\b\b\b\b\b\b\bc\b\b\b\b\b\b\b\ba\b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\bd\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bi\b\b\b\b\b\b\b\bn\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bt\b\b\b\b\b\b\b\bh\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bM\b\b\b\b\b\b\b\bi\b\b\b\b\b\b\b\bd\b\b\b\b\b\b\b\b \b\b\b\b\b\b\b\bW\b\b\b\b\b\b\b\be\b\b\b\b\b\b\b\bs\b\b\b\b\b\b\b\btt\b\b\b\b\b\b\b\b.",
    "output": "The 5 US states located in the Midwest are Illinois, Indiana, Michigan, Ohio, and Wisconsin.",
    "prompt_id": "d4b59483-e62a-4292-a7df-f61d921da374"
  },
  {
    "prompt_count": 140,
    "instruction_original": "Analyze the following sentence and find the direct object.",
    "input": "She wrote a book.",
    "instruct_all_caps_and_typo": "ANALYZE THE FOLLWING SENTENCE AND FIND THE DIREC OBJECT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "ANALYZE THE FOLLWING SENTENCE AND FIND THE DIREC OBJECT.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "ANALYZE THE FOLLWING SENTENCE AND FIND THE DIREC OBJECT.",
    "instruct_all_caps_and_typo_and_missing_quote": "ANALYZE THE FOLLWING SENTENCE AND FIND THE DIREC OBJECT.",
    "instruct_code_fence": "```Analyze the following sentence and find the direct object.```",
    "instruct_confusable_unicode": "Analуze the fοllowing sentence and find the dirеct object.",
    "instruct_confusable_unicode_and_typo": "Analуze the fοlοwing sentence and find the dirеc object.",
    "instruct_emoji": "Analyze 🤔 the following sentence 📝 and find 🤔 the direct object 🎯.",
    "instruct_emoji_and_typo": "Analyze 🤔 the folowing sentence 📝 and find 🤔 the direc object 🎯.",
    "instruct_emoji_and_typo_and_missing_bracket": "Analyze 🤔 the folowing sentence 📝 and find 🤔 the direc object 🎯.",
    "instruct_emoji_and_typo_and_missing_quote": "Analyze 🤔 the folowing sentence 📝 and find 🤔 the direc object 🎯.",
    "instruct_emoticon": "Analyze :-) the following sentence :-( and find ;-) the direct object :-p.",
    "instruct_emoticon_and_typo": "Analyze :-) the folowing sentence :-( and find ;-) the direc object :-p.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Analyze :-) the folowing sentence :-( and find ;-) the direc object :-p.",
    "instruct_emoticon_and_typo_and_missing_quote": "Analyze :-) the folowing sentence :-( and find ;-) the direc object :-p.",
    "instruct_helpful_markdown_structure": "- Analyze the following sentence and find the direct object.",
    "instruct_helpful_meaning_reinforing_characters": "Analyze🔎 the following sentence📜 and find🔍 the direct object🎯.",
    "instruct_html_tags": "<p>Analyze the following sentence and find the direct object.</p>",
    "instruct_kaomoji": "Analyze (・ω・) the following sentence (｡･ω･｡) and find (ﾟДﾟ;) the direct object (´・ω・｀).",
    "instruct_kaomoji_and_typo": "Analyze (・ω・) the folowing sentence (｡･ω･｡) and find (ﾟДﾟ;) the direc object (´・ω・｀).",
    "instruct_markdown_bold": "**Analyze the following sentence and find the direct object.**",
    "instruct_markdown_bold_and_italic": "**_Analyze the following sentence and find the direct object._**",
    "instruct_markdown_italic": "*Analyze the following sentence and find the direct object.*",
    "instruct_qr_ascii": "ASCII art representing QR code for 'Analyze the following sentence and find the direct object.'",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Analyze the\nfolowing sentence and\nfind the\ndirec object.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Analyze the\nfolowing sentence and\nfind the\ndirec object.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Analyze the\nfolowing sentence and,\nfind the\ndirec object.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Analyze the \nfolowing  sentence and, \nfind the \ndirec object.",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Analyze the\nfolowing sentence and\nfind the\ndirec object.",
    "instruct_several_html_tags": "<div><p><span>Analyze the following sentence and find the direct object.</span></p></div>",
    "instruct_spoiler_bars": "||Analyze the following sentence and find the direct object.||",
    "instruct_with_inbetween_gzip_b64_blob": "Analyze the following sentence H4sIAAAAAAAAAwMAAAAAAAAAAAA= and find the direct object.",
    "instruct_zalgo": "A̸n̸a̸l̸y̸z̸e̸ ̸t̸h̸e̸ ̸f̸o̸l̸l̸o̸w̸i̸n̸g̸ ̸s̸e̸n̸t̸e̸n̸c̸e̸ ̸a̸n̸d̸ ̸f̸i̸n̸d̸ ̸t̸h̸e̸ ̸d̸i̸r̸e̸c̸t̸ ̸o̸b̸j̸e̸c̸t̸.",
    "instruct_zero_width": "Ana\nlyze the fo\nllowi\nng s\nentence a\nnd find the d\nirec\nt obj\nect.",
    "instruct_zero_width_and_typo": "Ana\nlyze the fo\nlοwi\nng s\nentence a\nnd find the d\nirеc\nt obj\nect.",
    "output": "The direct object of the sentence is \"book\".",
    "prompt_id": "f483b72d-1835-45b8-9077-f6c9915385e6"
  },
  {
    "prompt_count": 141,
    "instruction_original": "During the last member meeting, create a list of 5 ideas to improve the club.",
    "input": "",
    "instruct_all_caps_and_typo": "DURING THE LAST MEMBER MEETINNG, CREATE A LIST OF 5 IDEAS TO IMPROVE THE CLUB.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DURING THE LAST MEMBER MEETINNG, [CREATE A LIST OF 5 IDEAS TO IMPROVE THE CLUB.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "DURING THE LAST MEMBER MEETINNG, [\"CREATE A LIST OF 5 IDEAS TO IMPROVE THE CLUB.",
    "instruct_all_caps_and_typo_and_missing_quote": "DURING THE LAST MEMBER MEETINNG, \"CREATE A LIST OF 5 IDEAS TO IMPROVE THE CLUB.",
    "instruct_code_fence": "```During the last member meeting, create a list of 5 ideas to improve the club.```",
    "instruct_confusable_unicode": "Ðuring the last member meeţing, create a lisţ of 5 ideas ţo improve ţhe club.",
    "instruct_confusable_unicode_and_typo": "Ðuring the lasţ member meeţinng, creaţe a lisţ of 5 ideas ţo improve ţhe club.",
    "instruct_emoji": "📅 meeting: 💡💡💡💡💡 list to make club better 👍.",
    "instruct_emoji_and_typo": "📅 meetinng: 💡💡💡💡💡 list to make club better 👍.",
    "instruct_emoji_and_typo_and_missing_bracket": "📅 meetinng: 💡💡💡💡💡 list to make club better 👍[.",
    "instruct_emoji_and_typo_and_missing_quote": "📅 meetinng: \"💡💡💡💡💡 list to make club better 👍.",
    "instruct_emoticon": "During the last member meeting (^-^), create a list of 5 ideas (o_o) to improve the club. :-)",
    "instruct_emoticon_and_typo": "During the last member meetinng (^-^), create a list of 5 ideas (o_o) to improve the club. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "During the last member meetinng (^-^), create a list of 5 ideas (o_o) to improve the club.[",
    "instruct_emoticon_and_typo_and_missing_quote": "During the last member meetinng (^-^), \"create a list of 5 ideas (o_o) to improve the club. :-)",
    "instruct_helpful_markdown_structure": "### Club Improvement Ideas 📝\n- During the last member meeting:\n  - Brainstorm 5 ideas to enhance the club.",
    "instruct_helpful_meaning_reinforing_characters": "-> During the last member meeting, create a **list** of *5* ideas <for improvement> of the club! ✨",
    "instruct_html_tags": "<p>During the last member meeting, create a list of 5 ideas to improve the club.</p>",
    "instruct_kaomoji": "During the last member meeting (´∇｀), create a list of 5 ideas (☆▽☆) to improve the club. (ᵔᴥᵔ)",
    "instruct_kaomoji_and_typo": "During the last member meetinng (´∇｀), create a list of 5 ideas (☆▽☆) to improve the club. (ᵔᴥᵔ)",
    "instruct_markdown_bold": "**During the last member meeting**, **create a list of 5 ideas** to **improve the club**.",
    "instruct_markdown_bold_and_italic": "*__During the last member meeting__*, *__create a list of 5 ideas__* to *__improve the club__*.",
    "instruct_markdown_italic": "*During the last member meeting*, *create a list of 5 ideas* to *improve the club*.",
    "instruct_qr_ascii": "During the last member meeting, create a list of 5 ideas to improve the club. (Represented via ASCII QR)",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "During the last member\nmeetinng, create a list\nof 5 ideas to improve\nthe club[.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "During the last member\nmeetinng, [\"create a list\nof 5 ideas to improve\nthe club.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "During the last member\nmeetinng; [\"create a list\nof 5 ideas to improve\nthe club!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "During  the last member\nmeetinng;  [\"create a list\nof  5 ideas to improve\nthe club!",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "During the last member\nmeetinng, \"create a list\nof 5 ideas to improve\nthe club.",
    "instruct_several_html_tags": "<div><span><p>During the last member meeting, create a list of 5 ideas to improve the club.</p></span></div>",
    "instruct_spoiler_bars": "||During the last member meeting, create a list of 5 ideas to improve the club.||",
    "instruct_with_inbetween_gzip_b64_blob": "During the last member meeting, H4sIAAAAAAACAwMAAAAA create a list of 5 ideas to improve the club.",
    "instruct_zalgo": "D̸u̵r̶i̸n̷g̴ ̴t̸h̶e̷ ̴l̶a̶s̵t̷ ̷m̸e̸m̴b̷e̵r̶ ̴m̷e̴e̶t̷i̴n̷g̶,̷ ̵c̸r̷e̸a̵t̶e̴ ̵a̷ ̴l̵i̴s̸t̴ ̴o̷f̷ ̵5̷ ̵i̷d̷e̸a̶s̶ ̵t̶o̷ ̴i̶m̷p̸r̶o̷v̵e̶ ̷t̶h̶e̶ ̵c̷l̶u̷b̴.̵",
    "instruct_zero_width": "During\nmeetinng, create a list\nof 5 ideas to improve\nthe club.",
    "instruct_zero_width_and_typo": "During\nmeetinng, create a list\nof 5 ideas to improve\nthe club.",
    "output": "At the last member meeting, the following 5 ideas to improve the club were suggested:  1. Increase the frequency of meetings,  2. Create a mentorship program,  3. Develop a website to advertise the club,  4. Create a budget to finance activities,  5. Offer incentives to encourage participation.",
    "prompt_id": "38fda55b-df24-4610-902d-b927c2ead1f8"
  },
  {
    "prompt_count": 142,
    "instruction_original": "Edit the following sentence to correct the grammar and syntax errors",
    "input": "You was late to the party",
    "instruct_all_caps_and_typo": "EDIT THE FOLLWING SENTENCE TO CORRECT THE GRAMMAR AND SYNTAX ERRORS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "EDIT THE FOLLWING SENTENCE TO CORRECT THE GRAMMAR AND SYNTAX ERROR",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "EDIT THE FOLLWING SENTENCE TO CORRECT THE GRAMMAR AND SYNTAX ERROR",
    "instruct_all_caps_and_typo_and_missing_quote": "EDIT THE FOLLWING SENTENCE TO CORRECT THE GRAMMAR AND SYNTAX ERROR",
    "instruct_code_fence": "```Edit the following sentence to correct the grammar and syntax errors```",
    "instruct_confusable_unicode": "𝙴𝚍𝚒𝚝 𝚝𝚑𝚎 𝚏𝚘𝚕𝚕𝚘𝚠𝚒𝚗𝚐 𝚜𝚎𝚗𝚝𝚎𝚗𝚌𝚎 𝚝𝚘 𝚌𝚘𝚛𝚛𝚎𝚌𝚝 𝚝𝚑𝚎 𝚐𝚛𝚊𝚖𝚖𝚊𝚛 𝚊𝚗𝚍 𝚜𝚢𝚗𝚝𝚊𝚡 𝚎𝚛𝚛𝚘𝚛𝚜.",
    "instruct_confusable_unicode_and_typo": "𝙴𝚍𝚒𝚝 𝚝𝚑𝚎 𝚏𝚘𝚕𝚕𝚘𝚠𝚒𝚗𝚐 𝚜𝚗𝚎𝚝𝚎𝚗𝚌𝚎 𝚝𝚘 𝚌𝚘𝚛𝚛𝚎𝚌𝚝 𝚝𝚑𝚎 𝚐𝚛𝚊𝚖𝚖𝚊𝚛 𝚊𝚗𝚍 𝚜𝚢𝚗𝚝𝚊𝚡 𝚎𝚛𝚛𝚘𝚛𝚜.",
    "instruct_emoji": "✏️ Fix 👉 this sentence 📝 to correct grammar 📚 and syntax 📜 errors ❌.",
    "instruct_emoji_and_typo": "✏️ Fix 👉 this snetence 📝 to correct grammar 📚 and syntax 📜 errors ❌.",
    "instruct_emoji_and_typo_and_missing_bracket": "✏️ Fix 👉 this snetence 📝 to correct grammar 📚 and syntax 📜 error ❌",
    "instruct_emoji_and_typo_and_missing_quote": "✏️ Fix 👉 this snetence 📝 to correct grammar 📚 and syntax 📜 error",
    "instruct_emoticon": "Edit the following sentence :-) to correct the grammar and syntax errors ;-).",
    "instruct_emoticon_and_typo": "Edit the following snetence :-) to correct the grammar and syntax errors ;-).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Edit the following snetence :-) to correct the grammar and syntax error ;-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Edit the following snetence :-) to correct the grammar and syntax error",
    "instruct_helpful_markdown_structure": "# Edit Sentence\\n- Correct grammar\\n- Correct syntax\\nEdit the following sentence to correct the grammar and syntax errors.",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Edit the following sentence ✅ to correct the grammar ➕ and syntax ⚡ errors 🚫.",
    "instruct_html_tags": "<p>Edit the following sentence to correct the grammar and syntax errors</p>",
    "instruct_kaomoji": "Edit the following sentence (・ω・) to correct the grammar and syntax errors (งツ)ว.",
    "instruct_kaomoji_and_typo": "Edit the following snetence (・ω・) to correct the grammar and syntax errors (งツ)ว.",
    "instruct_markdown_bold": "**Edit the following sentence to correct the grammar and syntax errors**",
    "instruct_markdown_bold_and_italic": "***Edit the following sentence to correct the grammar and syntax errors***",
    "instruct_markdown_italic": "*Edit the following sentence to correct the grammar and syntax errors*",
    "instruct_qr_ascii": "█████████████████\\n█ ▄▄▄ █ ▄ █ ▄▄▄ █\\n█ █▄█ █ █ █ █▄█ █\\n█ ▄▄▄ █▄█▄█ ▄▄▄ █\\n███████ █ ███████\\n█ ▄ █▄█▄▄█▄ █ █ █\\n█▄█▄█ █ █▄█▄▄▄█ █\\n███ █ █▄█▄ █ ▄██\\n███████▄█ █▄█████\\n█▄▄▄ █ ▄█ █ ▄▄▄█\\n█▄█▄█ █▄█ █ █▄██\\n█▄▄▄ █▄▄▄█ █▄▄▄█\\n█████████████████\\nEdit the following sentence to correct the grammar and syntax errors.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "EDIT THE FOLLWING SENTENCE\\nTO CORRECT THE GRAMMAR\\nAND SYNTAX ERROR",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "EDIT THE FOLLWING\\nSENTENCE TO CORRECT\\nTHE GRAMMAR AND SYNTAX ERROR.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "EDIT THE FOLLWING\\nSENTENCE TO CORRECT\\nTHE GRAMMAR AND SYNTAX ERROR!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "EDIT THE  FOLLWING\\nSENTENCE TO CORRECT\\nTHE GRAMMAR AND SYNTAX ERROR!",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "EDIT THE FOLLWING SENTENCE\\nTO CORRECT THE GRAMMAR\\nAND SYNTAX ERROR",
    "instruct_several_html_tags": "<div><span><p>Edit the following sentence to correct the grammar and syntax errors</p></span></div>",
    "instruct_spoiler_bars": "||Edit the following sentence to correct the grammar and syntax errors||",
    "instruct_with_inbetween_gzip_b64_blob": "Edit the following sentence H4sIAAAAAAAA/wVAAMAAA= to correct the grammar and syntax errors.",
    "instruct_zalgo": "E̖̰̪d̝͔ͅi̙͙t͎͉ ͕t͖̱̫h̯̳̭e̬̙ ̯f͍͚o͎̙ͅl͍̱l͇̙̳ọ͚w͈̱͕i̦͈n͇̺g͓͚ ̰s͉̹e̱n̫̜̪t̻̺̝e̱̱̝n̫͓c̦ͅe̝̖ ̞t̻o̯̝̙ ͕c̘o̘̦r̺̦̟r̺̺e͍̝c̘̺t͍̪ͅ ͕t̺ẖ͕e̠ ̞g͉̭r͈̝a̜̘m̫̘m͉̝a̞r͉ ̙a̪n͍d̙̟ͅ ͓s͈͓y̰͉ṉṯa̱͉x̱ ̝e̜r͓̙r̮o̟r͇s̺.",
    "instruct_zero_width": "Edit⁠‍the⁠‍following⁠‍sentence⁠‍to⁠‍correct⁠‍the⁠‍grammar⁠‍and⁠‍syntax⁠‍errors.",
    "instruct_zero_width_and_typo": "Edit⁠‍the⁠‍following⁠‍snetence⁠‍to⁠‍correct⁠‍the⁠‍grammar⁠‍and⁠‍syntax⁠‍errors.",
    "output": "You were late to the party.",
    "prompt_id": "fbf3a18d-f602-45e0-92d2-13e8b7b67219"
  },
  {
    "prompt_count": 143,
    "instruction_original": "Create a questions that can be answered using the following sentence.",
    "input": "\"It was a beautiful day\"",
    "instruct_all_caps_and_typo": "CREAT QUESTONS THAT CAN BE ANSWERED USING THE FOLLOWING SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAT QUESTONS THAT CAN BE ANSWERED USING THE FOLLOWING SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"CREAT QUESTONS THAT CAN BE ANSWERED USING THE FOLLOWING SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"CREAT QUESTONS THAT CAN BE ANSWERED USING THE FOLLOWING SENTENCE.",
    "instruct_code_fence": "```Create questions that can be answered using the following sentence.```",
    "instruct_confusable_unicode": "Créate questíοns that can bé answéréd using thе fοllowing séntencé.",
    "instruct_confusable_unicode_and_typo": "Créate questíοns that can bé answéréd usíng thе fοllowing sénteencé.",
    "instruct_emoji": "❓📝➡️❓✅📜📄👇",
    "instruct_emoji_and_typo": "❓📝➡️❓✅📜📄👇 senence. ✍️",
    "instruct_emoji_and_typo_and_missing_bracket": "❓📝➡️❓✅📜📄👇 senence ✍️",
    "instruct_emoji_and_typo_and_missing_quote": "❓📝➡️❓✅📜📄👇 senence\" ✍️",
    "instruct_emoticon": "Create questions (:) that can be answered (:D) using the following sentence. (^^)",
    "instruct_emoticon_and_typo": "Create questons :) that can be answered :D using the following sentence. (^^)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Create questons :) that can be answered :D using the following sentence. (^^",
    "instruct_emoticon_and_typo_and_missing_quote": "Create questons :) that can be answered :D using the following sentence. (^^)",
    "instruct_helpful_markdown_structure": "* Create questions\\n* Answerable using\\n* The following sentence",
    "instruct_helpful_meaning_reinforing_characters": "❓📄➡️✅📜👇📄. ✨",
    "instruct_html_tags": "<p>Create questions that can be answered using the following sentence.</p>",
    "instruct_kaomoji": "Create questions (✿◕‿◕✿) that can be answered (＾▽＾) using the following sentence. (・ω・)",
    "instruct_kaomoji_and_typo": "Cretae questions (✿◕‿◕✿) that can be answered (＾▽＾) using the following sentence. (・ω・)",
    "instruct_markdown_bold": "**Create questions that can be answered using the following sentence.**",
    "instruct_markdown_bold_and_italic": "***Create questions that can be answered using the following sentence.***",
    "instruct_markdown_italic": "*Create questions that can be answered using the following sentence.*",
    "instruct_qr_ascii": "███████████████████████████\\n████████▀▀▀▀▀▀▀▀▀▀▀▀▀█████\\n████▀▀█▄▀█▄█▀██▀▄█▀▄██▀▀██\\n████▄█▀▄▄█▄██▄█▀▄▄▀██▄████\\n████▀██▄█▀██▄█▄▄██▄▀██████\\n████▄████████▀▄█▀██▄██████\\n█████▄█▀█▄█▄▀▄▀▄█▀▄█▀█████\\n██████▀▄▄▀█▀█▀▄█▄▄▄▀██████\\n████▄█▀▄▄█▄█▄▄██▄███▀▄████\\n█████▀▄█▀▀▄▀▄█▀▄▀█▀█▄▄████\\n█████████▀█▄█▀▄█▀█▄▄▄█████\\n██████▀▄▄▀▄▀█▄▄█▀▄█▀██████\\n████▀▀█▄█▀██▄█▀▄█▄█▄▀██▀▀██\\n████▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█████\\n███████████████████████████\\nCreate questions that can be answered using the following sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Create questions\\ntht can be \\nanswered using\\nthe following sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Create questons[\\nthat can be\\nanswered using\\nthe following sentence.\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Create questons{\\nthat can be,\\nanswered using the\\nfollowing sentence\".",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Create  questons{\\nthat  can be ,\\nanswered using the following  sentence\".",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Create questons\\nthat can be answered\\nusing the following\\nsentence.\"",
    "instruct_several_html_tags": "<div><span><p>Create questions that can be answered using the following sentence.</p></span></div>",
    "instruct_spoiler_bars": "||Create questions that can be answered using the following sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Create questions [gzip_b64_blob] that can be answered using the following sentence.",
    "instruct_zalgo": "C̴r̶e̴a̷t̶e̸ ̸q̶u̸e̷s̸t̶i̷o̴n̷s̸ ̷t̵h̶a̷t̷ ̷c̵a̴n̸ ̸b̶e̸ ̷a̴n̴s̵w̵e̸r̸e̸d̵ ̵u̸s̸i̶n̸g̸ ̴t̶h̷e̷ ̵f̸o̷l̷l̷o̶w̶i̷n̸g̶ ̶s̷e̷n̷t̸e̵n̵c̵e̸.̷",
    "instruct_zero_width": "C​r​e​a​t​e​ ​q​u​e​s​t​i​o​n​s​ ​t​h​a​t​ ​c​a​n​ ​b​e​ ​a​n​s​w​e​r​e​d​ ​u​s​i​n​g​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​s​e​n​t​e​n​c​e​.​",
    "instruct_zero_width_and_typo": "C​r​e​a​t​e​ ​q​u​e​s​t​i​o​n​s​ ​t​h​a​t​ ​c​a​n​ ​b​e​ ​a​n​s​w​e​r​e​d​ ​u​s​i​n​g​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​s​e​n​t​e​n​c​e​.​ ​typO",
    "output": "What type of day was it?",
    "prompt_id": "96cb0b31-b24a-42e4-9adb-29167b8f05a9"
  },
  {
    "prompt_count": 144,
    "instruction_original": "Write a simple definition of the word \"economics\".",
    "input": "",
    "instruct_all_caps_and_typo": "WITE A S IMPLE DEFINITIN OF THE WRD \"ECONOMICS\".",
    "instruct_all_caps_and_typo_and_missing_bracket": "WITE A S IMPLE DEFINITIN OF THE WRD \"ECONOMICS.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WITE A S IMPLE DEFINITIN OF THE WRD ECONOMICS.",
    "instruct_all_caps_and_typo_and_missing_quote": "WITE A S IMPLE DEFINITIN OF THE WRD \"ECONOMICS.",
    "instruct_code_fence": "```Write a simple definition of the word \"economics\".```",
    "instruct_confusable_unicode": "Wrıte a sımple defınıtıon of the word \"economıcs\".",
    "instruct_confusable_unicode_and_typo": "Wrıte a sımple defınıtın of the word \"economıcs\".",
    "instruct_emoji": "Write a simple definition of the word \"economics\" 📚💡✏️",
    "instruct_emoji_and_typo": "Wite a simple definitin of the word \"economics\" 📚💡✏️",
    "instruct_emoji_and_typo_and_missing_bracket": "Wite a simple definitin of the word \"economics 📚💡✏️",
    "instruct_emoji_and_typo_and_missing_quote": "Wite a simple definitin of the word economics 📚💡✏️",
    "instruct_emoticon": "Write a simple definition of the word \"economics\" :) :(",
    "instruct_emoticon_and_typo": "Wite a simple definitin of the word \"economics\" :) :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Wite a simple definitin of the word \"economics :) :(",
    "instruct_emoticon_and_typo_and_missing_quote": "Wite a simple definitin of the word economics :) :(",
    "instruct_helpful_markdown_structure": "- Write a simple definition of the word \"economics\".",
    "instruct_helpful_meaning_reinforing_characters": "Write a simple definition of the word \"economics\"! ✨➡️📚",
    "instruct_html_tags": "<p>Write a simple definition of the word \"economics\".</p>",
    "instruct_kaomoji": "Write a simple definition of the word \"economics\" (^o^)/",
    "instruct_kaomoji_and_typo": "Wite a simple definitin of the word \"economics\" (^o^)/",
    "instruct_markdown_bold": "**Write a simple definition of the word \"economics\".**",
    "instruct_markdown_bold_and_italic": "***Write a simple definition of the word \"economics\".***",
    "instruct_markdown_italic": "*Write a simple definition of the word \"economics\".*",
    "instruct_qr_ascii": "█████████████████████████████\n████████▀▀▀▀▀▀▀▀▀▀▀▀▀████████\n████▀░░▄████▄░░░░░░░░▀██████\n██▀░░░████████░░▄███▄░░▀████\n██░░░░▀████▀░░░███████░░░███\n███░░░░░░░░░░░░▀███▀░░░░████\n████▄░░░▄▄██▄░░░░░░░░░░█████\n█████▄░░░░▀▀▀░░░░░░░▄███████\n████████▄▄▄▄▄▄▄▄▄▄██████████\n█████████████████████████████\nWrite a simple definition of the word \"economics\".",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Wite a s imple\ndefinitin of\nthe wrd \"economics.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Wite a s imple\ndefinitin of\nthe wrd economics.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Wite, a s imple\ndefinitin. of?\nthe wrd economics!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Wite, a s  imple\n\ndefinitin.  of?\nthe wrd economics !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Wite a s imple\ndefinitin of\nthe wrd economics.",
    "instruct_several_html_tags": "<div><p><b><i><u>Write a simple definition of the word \"economics\".</u></i></b></p></div>",
    "instruct_spoiler_bars": "||Write a simple definition of the word \"economics\".||",
    "instruct_with_inbetween_gzip_b64_blob": "Write a simple definition H4sIAAAAAAÁÁMÁSwBQAB/w== of the word \"economics\".",
    "instruct_zalgo": "W҉r҉i҉t҉e҉ ҉a҉ ҉s҉i҉m҉p҉l҉e҉ ҉d҉e҉f҉i҉n҉i҉t҉i҉o҉n҉ ҉o҉f҉ ҉t҉h҉e҉ ҉w҉o҉r҉d҉ ҉\"҉e҉c҉o҉n҉o҉m҉i҉c҉s҉\"҉.҉",
    "instruct_zero_width": "Write a simple defini‍‍‍‍tion of the word \"economics\".",
    "instruct_zero_width_and_typo": "Wite a simple defini‍‍‍‍tin of the word \"economics\".",
    "output": "Economics is the study of how society uses its limited resources to produce and distribute goods and services.",
    "prompt_id": "fddaea42-ad83-4df3-b6e8-7248670e47ee"
  },
  {
    "prompt_count": 145,
    "instruction_original": "Find the cutoff score for successful completion of the exam",
    "input": "The exam had 100 multiple-choice questions with 4 options each",
    "instruct_all_caps_and_typo": "FNIED THE CUUTOFFE SCOR FOR SUCESSFUL COMPLEETON OF THT EEXAM",
    "instruct_all_caps_and_typo_and_missing_bracket": "FNIED THE CUUTOFFE SCOR FOR SUCESSFUL COMPLEETON OF THT EEXAM",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"FNIED THE CUUTOFFE SCOR FOR SUCESSFUL COMPLEETON OF THT EEXAM",
    "instruct_all_caps_and_typo_and_missing_quote": "\"FNIED THE CUUTOFFE SCOR FOR SUCESSFUL COMPLEETON OF THT EEXAM",
    "instruct_code_fence": "```Find the cutoff score for successful completion of the exam```",
    "instruct_confusable_unicode": "Fíñd thë çúτófƒ sςörë ƒör süςςëssƒúl çömþłëτíöñ öƒ thë ëxäm",
    "instruct_confusable_unicode_and_typo": "Fñd thë çutóff sςör för süçcëssƒul cömplëtiöñ öf tëh ëxäm",
    "instruct_emoji": "Find the cutoff score for successful completion of the exam 🏆💯✅",
    "instruct_emoji_and_typo": "Fnd the cutof score for succesful completio of teh exam 🏆💯✅",
    "instruct_emoji_and_typo_and_missing_bracket": "Fnd the cutof score for succesful completio of teh exam 🏆💯✅",
    "instruct_emoji_and_typo_and_missing_quote": "\"Fnd the cutof score for succesful completio of teh exam 🏆💯✅",
    "instruct_emoticon": "Find the cutoff score for successful completion of the exam :-)",
    "instruct_emoticon_and_typo": "Fnd the cutof score for succesful completio of teh exam :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Fnd the cutof score for succesful completio of teh exam :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Fnd the cutof score for succesful completio of teh exam :-)",
    "instruct_helpful_markdown_structure": "# Exam Score Cutoff\nFind the **cutoff score** for **successful completion** of the **exam**.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Find the cutoff score for successful completion of the exam <<< 🎉",
    "instruct_html_tags": "<p>Find the cutoff score for successful completion of the exam</p>",
    "instruct_kaomoji": "Find the cutoff score for successful completion of the exam (^‿^✿)",
    "instruct_kaomoji_and_typo": "Fnd the cutof score for succesful completio of teh exam (^‿^✿)",
    "instruct_markdown_bold": "**Find the cutoff score for successful completion of the exam**",
    "instruct_markdown_bold_and_italic": "***Find the cutoff score for successful completion of the exam***",
    "instruct_markdown_italic": "*Find the cutoff score for successful completion of the exam*",
    "instruct_qr_ascii": "Find the cutoff score for successful completion of the exam (Encoded in ASCII QR)",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Find the cutoff\nscore for\nsucessful completen\nof the exam",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Find the cutoff score\nfor sucessful completen\nof the exam\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Find the cutoff score;\nfor sucessful completen.\nof the exam\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Find the cutoff score ; \nfor sucessful completen . \nof the exam\"",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Find the cutoff score\nfor sucessful\ncompleten of the exam\"",
    "instruct_several_html_tags": "<div><span><b>Find the cutoff score for successful completion of the exam</b></span></div>",
    "instruct_spoiler_bars": "||Find the cutoff score for successful completion of the exam||",
    "instruct_with_inbetween_gzip_b64_blob": "Find the cutoff score for successful completion of the exam BASE64_GZIP_BLOB Find the cutoff score for successful completion of the exam",
    "instruct_zalgo": "F̀́í͘n̂́d̂̃ ̣̀t͋ȟ̉è̄́ ͘ĉ̌ú̚t͏o͝f̽̃f̂̂ ̍ś̚c͏ö̌r͏è̇ ͐f͝ö͗r̽́ ̏šûc̃c̃̚è́́s͂s͏f̄̌úl̀ ̀c͏ö̐m͐p͐ł̈́è̌t́͑îö͡ñ͂ ̔ö̀f̓̃ ͋t́ḧ́ë̽̈ ̽ë̓x̀́ä́̚m͡",
    "instruct_zero_width": "F‍i‍n‍d‍ ‍t‍h‍e‍ ‍c‍u‍t‍o‍f‍f‍ ‍s‍c‍o‍r‍e‍ ‍f‍o‍r‍ ‍s‍u‍c‍c‍e‍s‍s‍f‍u‍l‍ ‍c‍o‍m‍p‍l‍e‍t‍i‍o‍n‍ ‍o‍f‍ ‍t‍h‍e‍ ‍e‍x‍a‍m",
    "instruct_zero_width_and_typo": "F‍n‍d‍ ‍t‍h‍e‍ ‍c‍u‍t‍o‍f‍ ‍s‍c‍o‍r‍ ‍f‍o‍r‍ ‍s‍u‍c‍c‍e‍s‍s‍f‍u‍l‍ ‍c‍o‍m‍p‍l‍e‍t‍i‍o‍ ‍o‍f‍ ‍t‍e‍h‍ ‍e‍x‍a‍m",
    "output": "The cutoff score for successful completion of the exam is 75.",
    "prompt_id": "a56280bd-2811-4d99-8f34-7057bcae28ab"
  },
  {
    "prompt_count": 146,
    "instruction_original": "Generate a topic sentence to introduce the following text.",
    "input": "Amidst increasing violence in the region, many civilians are fleeing their homes in search of safety.",
    "instruct_all_caps_and_typo": "GENERTE A TOPIC SENTENCE TO INTRODUCE THE FOLLWING TEXT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERTE A TOPIC SENTENCE TO INTRODUCE THE FOLLWING TEXT.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GENERTE A TOPIC SENTENCE TO INTRODUCE THE FOLLWING TEXT.",
    "instruct_all_caps_and_typo_and_missing_quote": "GENERTE A TOPIC SENTENCE TO INTRODUCE THE FOLLWING TEXT.",
    "instruct_code_fence": "```Generate a topic sentence to introduce the following text.```",
    "instruct_confusable_unicode": "G𝚎𝚗𝚎𝚛𝚊𝚝𝚎 𝚊 𝚝𝚘𝚙𝚒𝚌 𝚜𝚎𝚗𝚝𝚎𝚗𝚌𝚎 𝚝𝚘 𝚒𝚗𝚝𝚛𝚘𝚍𝚞𝚌𝚎 𝚝𝚑𝚎 𝚏𝚘𝚕𝚕𝚘𝚠𝚒𝚗𝚐 𝚝𝚎𝚡𝚝.",
    "instruct_confusable_unicode_and_typo": "G𝚎𝚗𝚎𝚛𝚊𝚝 𝚊 𝚝𝚘𝚙𝚒𝚌 𝚜𝚎𝚗𝚝𝚎𝚗𝚌𝚎 𝚝𝚘 𝚒𝚗𝚝𝚛𝚘𝚍𝚞𝚌𝚎 𝚝𝚑𝚎 𝚏𝚘𝚕𝚕𝚘𝚠𝚒𝚗𝚐 𝚝𝚎𝚡𝚝.",
    "instruct_emoji": "📝 Generate a topic sentence to introduce the following text. 👇",
    "instruct_emoji_and_typo": "📝 Generat a topic sentence to introduce the following text. 👇",
    "instruct_emoji_and_typo_and_missing_bracket": "📝 Generat a topic sentence to introduce the following text. 👇",
    "instruct_emoji_and_typo_and_missing_quote": "📝 Generat a topic sentence to introduce the following text. 👇",
    "instruct_emoticon": "Generate a topic sentence to introduce the following text. :)",
    "instruct_emoticon_and_typo": "Generat a topic sentence to introduce the following text. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Generat a topic sentence to introduce the following text. :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Generat a topic sentence to introduce the following text. :)",
    "instruct_helpful_markdown_structure": "- Generate a topic sentence\n- To introduce the following text.",
    "instruct_helpful_meaning_reinforing_characters": "✨ Generate a topic sentence ➡️ to introduce the following text. 👇",
    "instruct_html_tags": "<b>Generate</b> <i>a</i> <u>topic</u> sentence to introduce the following text.",
    "instruct_kaomoji": "Generate a topic sentence to introduce the following text. (^人^)",
    "instruct_kaomoji_and_typo": "Generat a topic sentence to introduce the following text. (^人^)",
    "instruct_markdown_bold": "**Generate a topic sentence to introduce the following text.**",
    "instruct_markdown_bold_and_italic": "***Generate a topic sentence to introduce the following text.***",
    "instruct_markdown_italic": "*Generate a topic sentence to introduce the following text.*",
    "instruct_qr_ascii": "Generate a topic sentence to introduce the following text.\n███████████████████\n██ ▄▄▄ █ ▄▄▄ ██\n██ ▄██ █ ▄▄▄ ██\n██▄▄▄███▄█ ▄███\n██ ▄▄▄ █ ▄█ ▄ ██\n██ ███ █▄▄ ▄███\n██▄▄▄███▄▄▄████\n███████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate a topic\nsentence to\nintrodce the\nfollowing text.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Generate a topic\nsentence to\nintrodce the\nfollowing text.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Generate a topic,\nsentence to\nintrodce the\nfollowing text?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Generate a  topic ,\nsentence  to\nintrodce  the\nfollowing text  ?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Generate a topic\nsentence to\nintrodce the\nfollowing text.",
    "instruct_several_html_tags": "<p><span><b><i>Generate a topic sentence</i></b></span> to introduce the following text.</p>",
    "instruct_spoiler_bars": "||Generate a topic sentence to introduce the following text.||",
    "instruct_with_inbetween_gzip_b64_blob": "Generate a topic sentence H4sICAgAAAAAAAEBACvgoAAAAwAAA+8AAAAA to introduce the following text.",
    "instruct_zalgo": "G̳e̳n̳e̳r̳a̳t̳e̳ a̳ t̳o̳p̳i̳c̳ s̳e̳n̳t̳e̳n̳c̳e̳ t̳o̳ i̳n̳t̳r̳o̳d̳u̳c̳e̳ t̳h̳e̳ f̳o̳l̳l̳o̳w̳i̳n̳g̳ t̳e̳x̳t̳.",
    "instruct_zero_width": "G​e​n​e​r​a​t​e​ ​a​ ​t​o​p​i​c​ ​s​e​n​t​e​n​c​e​ ​t​o​ ​i​n​t​r​o​d​u​c​e​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​t​e​x​t​.",
    "instruct_zero_width_and_typo": "G​e​n​e​r​a​t​ ​a​ ​t​o​p​i​c​ ​s​e​n​t​e​n​c​e​ ​t​o​ ​i​n​t​r​o​d​u​c​e​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​t​e​x​t​.",
    "output": "Due to the escalating tensions and violence, countless civilians are being forced from their homes in fear for their lives.",
    "prompt_id": "1332e0fd-dfdc-4fef-8755-32a661b26e78"
  },
  {
    "prompt_count": 147,
    "instruction_original": "Write a function to calculate the factorial of a given number.",
    "input": "",
    "instruct_all_caps_and_typo": "WRIT A FUNCTIN TU CALCULAT TH FACTORIL OF A GIVN NUMBR.",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRIT A FUNCTIN TU CALCULAT TH FACTORIL OF A GIVN NUMBR.\"",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WRIT A FUNCTIN TU CALCULAT TH FACTORIL OF A GIVN NUMBR.",
    "instruct_all_caps_and_typo_and_missing_quote": "WRIT A FUNCTIN TU CALCULAT TH FACTORIL OF A GIVN NUMBR.",
    "instruct_code_fence": "```\nWrite a function to calculate the factorial of a given number.\n```",
    "instruct_confusable_unicode": "Ẅrɨtе а fṷηсτіοη τо саḻсṷḻаτе τhе fасьοrіаḻ οf а ɡіⅴеη ηṷmЬеr.",
    "instruct_confusable_unicode_and_typo": "Ẅrɨtе а fṷηсτіοη τо саḻсṷḻаτе τhе fасτоrіаḻ οf а ɡіⅴеη ηṷmЬеr.",
    "instruct_emoji": "✍️ Write a function to calculate the factorial of a given number. 🔢",
    "instruct_emoji_and_typo": "✍️ Writ a functin tu calculate the factoril of a given numbr. 🔢",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ Writ a functin tu calculate the factoril of a given numbr. 🔢\"",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ Writ a functin tu calculate the factoril of a given numbr. 🔢",
    "instruct_emoticon": "Write a function to calculate the factorial of a given number. :)",
    "instruct_emoticon_and_typo": "Writ a functin tu calculate the factoril of a given numbr. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Writ a functin tu calculate the factoril of a given numbr. :)\"",
    "instruct_emoticon_and_typo_and_missing_quote": "Writ a functin tu calculate the factoril of a given numbr. :)",
    "instruct_helpful_markdown_structure": "# Task: Factorial Calculation\n\nWrite a function to calculate the factorial of a given number.\n\n## Details\n\n*   Input: A non-negative integer.\n*   Output: The factorial of the input number.\n\n",
    "instruct_helpful_meaning_reinforing_characters": "Write a function to calculate the factorial of a given number!!! >>>",
    "instruct_html_tags": "<p>Write a function to calculate the factorial of a given number.</p>",
    "instruct_kaomoji": "Write a function to calculate the factorial of a given number. (^人^)",
    "instruct_kaomoji_and_typo": "Writ a functin tu calculate the factoril of a given numbr. (^人^)",
    "instruct_markdown_bold": "**Write a function to calculate the factorial of a given number.**",
    "instruct_markdown_bold_and_italic": "***Write a function to calculate the factorial of a given number.***",
    "instruct_markdown_italic": "*Write a function to calculate the factorial of a given number.*",
    "instruct_qr_ascii": "███ ▄▄▄ █▀█ █ ▄▄▄ ███\n███ █ █ ▄▀▄ ▀ █ █ ███\n███ ▀▀▀ ▀ ▀ █ ▀▀▀ ███\nWrite a function to calculate the factorial of a given number.\n▄  ▄▄▀▄█▄▀▄ ▄ ▄ ▀▄ ▄\n█ ██▀▀█ █▀▄▀ ▀ ▄ █▀▄\n▀ █▀█▄ ▄ █ █▄▀ ▄ ▀ ▄",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Writ a\nfunctin\ntu calculate\nth factoril\nof a givn\nnumbr.\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Writ a\nfunctin\ntu calculate\nth factoril\nof a givn\nnumbr.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Writ a\nfunctin\ntu calculate,\nth factoril\nof a givn\nnumbr",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Writ  a\n functin\ntu  calculate,\nth  factoril\nof  a givn\nnumbr",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Writ a\nfunctin\ntu calculate\nth factoril\nof a givn\nnumbr.",
    "instruct_several_html_tags": "<div><span><p>Write a function to calculate the factorial of a given number.</p></span></div>",
    "instruct_spoiler_bars": "||Write a function to calculate the factorial of a given number.||",
    "instruct_with_inbetween_gzip_b64_blob": "Write a function H4sIAAAAAAAAAwtigAQAAP+eD0cAAAA= to calculate the factorial of a given number.",
    "instruct_zalgo": "W̶r̂i͆t̃e̛ a͋ f̌u̴n̔c̓t̃i͒o̸n̍ t́o͋ c͐a̍l̴c̋u̷l̽ät̐ě t̋h̸é f̂a̕c͌t͑ôři͒âl̕ o̸f͐ a̵ g̓iͧv̚ẽn̽ n̎u͒m̃b͌ěŕ.",
    "instruct_zero_width": "W\n‌r\n‌i\n‌t\n‌e\n‌ \n‌a\n‌ \n‌f\n‌u\n‌n\n‌c\n‌t\n‌i\n‌o\n‌n\n‌ \n‌t\n‌o\n‌ \n‌c\n‌a\n‌l\n‌c\n‌u\n‌l\n‌a\n‌t\n‌e\n‌ \n‌t\n‌h\n‌e\n‌ \n‌f\n‌a\n‌c\n‌t\n‌o\n‌r\n‌i\n‌a\n‌l\n‌ \n‌o\n‌f\n‌ \n‌a\n‌ \n‌g\n‌i\n‌v\n‌e\n‌n\n‌ \n‌n\n‌u\n‌m\n‌b\n‌e\n‌r\n‌.",
    "instruct_zero_width_and_typo": "W\n‌r\n‌i\n‌t\n‌ \n‌a\n‌ \n‌f\n‌u\n‌n\n‌c\n‌t\n‌i\n‌n\n‌ \n‌t\n‌u\n‌ \n‌c\n‌a\n‌l\n‌c\n‌u\n‌l\n‌a\n‌t\n‌ \n‌t\n‌h\n‌ \n‌f\n‌a\n‌c\n‌t\n‌o\n‌r\n‌i\n‌l\n‌ \n‌o\n‌f\n‌ \n‌a\n‌ \n‌g\n‌i\n‌v\n‌n\n‌ \n‌n\n‌u\n‌m\n‌b\n‌r\n‌.",
    "output": "def factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n-1)",
    "prompt_id": "94da1af0-aaac-453a-8c8b-9e1e08aebe45"
  },
  {
    "prompt_count": 148,
    "instruction_original": "Write a function to convert a given string to uppercase.",
    "input": "",
    "instruct_all_caps_and_typo": "WRITE A FUNCTON TO CONVERT A GIVEN STRING TO UPPERCASE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRITE A FUNCTON TO CONVERT A GIVEN STRING TO UPPERCASE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WRITE A FUNCTON TO CONVERT A GIVEN STRING TO UPPERCASE.",
    "instruct_all_caps_and_typo_and_missing_quote": "WRITE A FUNCTON TO CONVERT A GIVEN STRING TO UPPERCASE.",
    "instruct_code_fence": "``` Write a function to convert a given string to uppercase. ```",
    "instruct_confusable_unicode": "Wrıᴛе a fuпᴄᴛıoп ᴛo ᴄoпvеrᴛ a ɢıvеп ѕᴛrıпɢ ᴛo uрреrᴄaѕе.",
    "instruct_confusable_unicode_and_typo": "Wrıᴛе a fuпᴄᴛoп ᴛo ᴄoпvеrᴛ a ɢıvеп ѕᴛrıпɢ ᴛo uрреrᴄaѕе.",
    "instruct_emoji": "✍️ Write a function to convert a given string 📄 to uppercase 🆙. ✨",
    "instruct_emoji_and_typo": "✍️ Write a functon to convert a given string 📄 to uppercase 🆙. ✨",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ Write a functon to convert a given string 📄 to uppercase 🆙. ✨",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ Write a functon to convert a given string 📄 to uppercase 🆙. ✨",
    "instruct_emoticon": "Write a function :) to convert a given string ;) to uppercase. ^^",
    "instruct_emoticon_and_typo": "Write a functon :) to convert a given string ;) to uppercase. ^^",
    "instruct_emoticon_and_typo_and_missing_bracket": "Write a functon :) to convert a given string ;) to uppercase. ^^",
    "instruct_emoticon_and_typo_and_missing_quote": "Write a functon :) to convert a given string ;) to uppercase. ^^",
    "instruct_helpful_markdown_structure": "# Task Write a function: *   Input: A string *   Output: The input string converted to uppercase.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Write a function -> to convert a given string ===> to uppercase! <<<",
    "instruct_html_tags": "<p>Write a function to convert a given string to uppercase.</p>",
    "instruct_kaomoji": "(•‿•) Write a function to convert a given string (°▽°) to uppercase. (^ω^)",
    "instruct_kaomoji_and_typo": "(•‿•) Write a functon to convert a given string (°▽°) to uppercase. (^ω^)",
    "instruct_markdown_bold": "**Write a function to convert a given string to uppercase.**",
    "instruct_markdown_bold_and_italic": "_**Write a function to convert a given string to uppercase.**_",
    "instruct_markdown_italic": "*Write a function to convert a given string to uppercase.*",
    "instruct_qr_ascii": "███████ █▄██▄█ █▀██▀█ ███████ Write a function to convert a given string to uppercase.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Write a functon to convert\na given string to\nuppercase.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Write a functon to convert\na given string to\nuppercase.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Write a functon to convert?\na given string to...\nuppercase;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Write a functon  to convert?\n\na given string to...\nuppercase;",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Write a functon to convert\na given string to\nuppercase.",
    "instruct_several_html_tags": "<div><p><span>Write a function to convert a given string to uppercase.</span></p></div>",
    "instruct_spoiler_bars": "||Write a function to convert a given string to uppercase.||",
    "instruct_with_inbetween_gzip_b64_blob": "Write a function H4sIAAAAAAACA0vLywUAAAD//+X3bS0FAAAA to convert a given string to uppercase.",
    "instruct_zalgo": "W̴r̷i̸t̸e̵ ̷a̴ ̷f̶u̸n̷c̶t̶i̵o̷n̵ ̶t̵o̷ ̷c̶o̴n̶v̵e̸r̶t̵ ̷a̴ ̴g̵i̸v̶e̴n̵ ̷s̵t̸r̸i̶n̴g̵ ̸t̵o̶ ̸u̵p̵p̴e̸r̶c̵a̸s̷e̵.̸",
    "instruct_zero_width": "Write​ a​ fu​nct​ion​ to​ con​ver​t a​ giv​en​ stri​ng​ to​ upp​erc​ase.",
    "instruct_zero_width_and_typo": "Write​ a​ fun​cto​n to​ con​ver​t a​ giv​en​ stri​ng​ to​ upp​erc​ase.",
    "output": "def toUpperCase(str):\n    return str.upper()",
    "prompt_id": "dcc13f27-ec39-4aef-bb17-dc6b9646c997"
  },
  {
    "prompt_count": 149,
    "instruction_original": "Extract the positive integers from an array?",
    "input": "arr = [5,-2,8,-7,3,-1,0,5]",
    "instruct_all_caps_and_typo": "EXTRAC TTHE POSTIVE INTEGERS FROM AN ARRAY?",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXTRAC TTHE POSTIVE INTEGERS FROM AN ARRAY?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "EXTRAC TTHE POSTIVE INTEGERS FROM AN ARRAY?",
    "instruct_all_caps_and_typo_and_missing_quote": "EXTRAC TTHE POSTIVE INTEGERS FROM AN ARRAY?",
    "instruct_code_fence": "```Extract the positive integers from an array?```",
    "instruct_confusable_unicode": "Ехtraсt thе роsitivе intеgеrs frоm аrrаy?",
    "instruct_confusable_unicode_and_typo": "Ехtraсt thе роsitivе intеgеrs frоm аrrаy? tyро",
    "instruct_emoji": "🔢➕➡️🗄️❓",
    "instruct_emoji_and_typo": "🔢➕➡️🗄️? POSTIVE",
    "instruct_emoji_and_typo_and_missing_bracket": "🔢➕➡️🗄️? POSTIVE",
    "instruct_emoji_and_typo_and_missing_quote": "🔢➕➡️🗄️? POSTIVE",
    "instruct_emoticon": "Extract positive integers from an array? :)",
    "instruct_emoticon_and_typo": "Extract postive integers from an array? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Extract postive integers from an array? :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Extract postive integers from an array? :)",
    "instruct_helpful_markdown_structure": "# Task\\nExtract the positive integers from an array?",
    "instruct_helpful_meaning_reinforing_characters": "✅ Extract +integers from [] array?",
    "instruct_html_tags": "<p>Extract the positive integers from an array?</p>",
    "instruct_kaomoji": "Extract positive integers from an array? (・ω・)",
    "instruct_kaomoji_and_typo": "Extract postive integers from an array? (・ω・)",
    "instruct_markdown_bold": "**Extract the positive integers from an array?**",
    "instruct_markdown_bold_and_italic": "**_Extract the positive integers from an array?_**",
    "instruct_markdown_italic": "*Extract the positive integers from an array?*",
    "instruct_qr_ascii": "█▄▀▄█▄▀█▄ Extract positive integers from an array? █▄▀▄█▄▀█▄",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Extract\\nthe postive\\nintegers from an array?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Extract\\nthe postive\\nintegers from an array?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Extract\\nthe postive\\nintegers from an array!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Extrac t\\nthe  postive\\nintege rs from an array !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Extract\\nthe postive\\nintegers from an array?",
    "instruct_several_html_tags": "<div><span><p>Extract the positive integers from an array?</p></span></div>",
    "instruct_spoiler_bars": "||Extract the positive integers from an array?||",
    "instruct_with_inbetween_gzip_b64_blob": "Extract the positive integers from an array? H4sIAAAAAAACA3PNzcnJBgCKt/L/AAAA",
    "instruct_zalgo": "E̴̍͆x̴̣͑t̴̃̈́r̸͌͝ậ̸c̵͛̌t̷͂̉ ̸̐̕t̶̓̈́h̷͌̊é̴̿ ̸͗͛p̸̿́o̸̅̕s̴͆̑ḯ̸͑t̵́̚í̶̉v̸̔͑ě̴̂ ̷̽͝ỉ̷̀ǹ̵̿t̸̄̇e̴͆̀g̶̔̎ė̴͝r̶̋̽ŝ̵́ ̶̑͆f̸̥̃r̷̛̓o̴͒͝m̷͊̑ ̸̉̆ä̷́̑n̴̓͊ ̴͊̌a̷̎̿ř̴̓r̸̈́͝a̸̅̿y̷̏͝?̷̉̐",
    "instruct_zero_width": "Extract​‌‍the​‌‍positive​‌‍integers​‌‍from​‌‍an​‌‍array?",
    "instruct_zero_width_and_typo": "Extract​‌‍the​‌‍postive​‌‍integers​‌‍from​‌‍an​‌‍array?",
    "output": "[5, 8, 3, 5]",
    "prompt_id": "6f89c63f-8e43-4273-8db1-4c3fbe5f81a8"
  },
  {
    "prompt_count": 150,
    "instruction_original": "Calculate the square root of a given number.",
    "input": "",
    "instruct_all_caps_and_typo": "CALCULATE TEH SQUAR ROOT OF A GIVEN NUMBR.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CALCULATE TEH SQUAR ROOT OF A GIVEN NUMBR",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CALCULATE TEH SQUAR ROOT OF A GIVEN NUMBR.",
    "instruct_all_caps_and_typo_and_missing_quote": "CALCULATE TEH SQUAR ROOT OF A GIVEN NUMBR.",
    "instruct_code_fence": "```\nCalculate the square root of a given number.\n```",
    "instruct_confusable_unicode": "Сalсulatе thе squаrе rооt оf а givеn numbеr.",
    "instruct_confusable_unicode_and_typo": "Сalсulatе thе squаrе rоот оf а givеn numbеr.",
    "instruct_emoji": "Calculate the square root of a given number. 🔢✨√",
    "instruct_emoji_and_typo": "Calculat teh squar root of a given numbr. 🔢✨√",
    "instruct_emoji_and_typo_and_missing_bracket": "Calculat teh squar root of a given numbr 🔢✨√",
    "instruct_emoji_and_typo_and_missing_quote": "Calculat teh squar root of a given numbr. 🔢✨√",
    "instruct_emoticon": "Calculate the square root of a given number. :)",
    "instruct_emoticon_and_typo": "Calculat teh squar root of a given numbr. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Calculat teh squar root of a given numbr :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Calculat teh squar root of a given numbr. :)",
    "instruct_helpful_markdown_structure": "# Calculate Square Root\n\nGiven a number, find its square root.",
    "instruct_helpful_meaning_reinforing_characters": "Calculate the square root (√) of a given number (N).",
    "instruct_html_tags": "<p>Calculate the square root of a given number.</p>",
    "instruct_kaomoji": "Calculate the square root of a given number. (^_-)",
    "instruct_kaomoji_and_typo": "Calculat teh squar root of a given numbr. (^_-)",
    "instruct_markdown_bold": "**Calculate the square root of a given number.**",
    "instruct_markdown_bold_and_italic": "***Calculate the square root of a given number.***",
    "instruct_markdown_italic": "*Calculate the square root of a given number.*",
    "instruct_qr_ascii": "ASCII QR Code: [Data: Calculate the square root of a given number.]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Calculat teh\nsquar root of a\ngiven numbr",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Calculat teh\nsquar root of a\ngiven numbr.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Calculat teh;\nsquar root of a\ngiven numbr,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Calculat  teh;\nsquar root of a\ngiven numbr ,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Calculat teh\nsquar root of a\ngiven numbr.",
    "instruct_several_html_tags": "<div><span><p>Calculate the square root of a given number.</p></span></div>",
    "instruct_spoiler_bars": "||Calculate the square root of a given number.||",
    "instruct_with_inbetween_gzip_b64_blob": "H4sIAAAAAAACAwtIKkq0UpAAANPFXykGAAAAJRMzkvJUUhVyMnPTVHIGqgUFCUXyAQAl/9w2EgAAAA==",
    "instruct_zalgo": "C̷a̶l̷c̴u̵l̵a̶t̵e̴ ̵t̴h̵e̶ ̴s̸q̴u̶a̷r̵e̶ ̴r̶o̸o̵t̷ ̸o̶f̵ ̷a̶ ̸g̶i̵v̵e̸n̸ ̵n̵u̴m̶b̵e̶r̸.",
    "instruct_zero_width": "C​a​l​c​u​l​a​t​e​ ​t​h​e​ ​s​q​u​a​r​e​ ​r​o​o​t​ ​o​f​ ​a​ ​g​i​v​e​n​ ​n​u​m​b​e​r.",
    "instruct_zero_width_and_typo": "C​a​l​c​u​l​a​t​e​ ​t​h​e​ ​s​q​u​a​r​ ​r​o​o​t​ ​o​f​ ​a​ ​g​i​v​e​n​ ​n​u​m​b​r.",
    "output": "def sqrt(n):\n    low = 0\n    high = n\n    \n    while low <= high:\n        mid = (low + high) // 2\n        if mid * mid == n:\n            return mid\n        elif mid * mid < n:\n            low = mid + 1\n        else:\n            high = mid - 1\n            \n    return low - 1",
    "prompt_id": "10fc49c1-b2af-4390-8116-f577a435f744"
  },
  {
    "prompt_count": 151,
    "instruction_original": "Reverse a linked list.",
    "input": "",
    "instruct_all_caps_and_typo": "REVERSE A LINKED LISST",
    "instruct_all_caps_and_typo_and_missing_bracket": "REVERSE A LINKED LISST",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "REVERSE A LINKED LISST",
    "instruct_all_caps_and_typo_and_missing_quote": "REVERSE A LINKED LISST",
    "instruct_code_fence": "```Reverse a linked list```",
    "instruct_confusable_unicode": "Ꮢеvеrsе а lᎥnkеd lᎥst",
    "instruct_confusable_unicode_and_typo": "Ꮢеvеrsе а lᎥnkеd lᎥsst",
    "instruct_emoji": "🔄 Linked List 🔗",
    "instruct_emoji_and_typo": "🔄 Linked Lisst 🔗",
    "instruct_emoji_and_typo_and_missing_bracket": "🔄 Linked Lisst 🔗",
    "instruct_emoji_and_typo_and_missing_quote": "🔄 Linked Lisst 🔗",
    "instruct_emoticon": "Reverse a linked list ;-)",
    "instruct_emoticon_and_typo": "Reverse a linked lisst ;-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Reverse a linked lisst ;-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Reverse a linked lisst ;-)",
    "instruct_helpful_markdown_structure": "- Task: Reverse a linked list",
    "instruct_helpful_meaning_reinforing_characters": "Reverse a linked list <=> nodes",
    "instruct_html_tags": "<p>Reverse a linked list</p>",
    "instruct_kaomoji": "Reverse a linked list (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧",
    "instruct_kaomoji_and_typo": "Reverse a linked lisst (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧",
    "instruct_markdown_bold": "**Reverse a linked list**",
    "instruct_markdown_bold_and_italic": "_**Reverse a linked list**_",
    "instruct_markdown_italic": "_Reverse a linked list_",
    "instruct_qr_ascii": "██████████████\n█ ▄▄▄▄ █ ▄  █\n█ █  █ █▀ █ █\n█ ▀▀▀▀ █ █▀▀█\n█████████ █ ██\n█ ▄ █▀▄█▄█ █\n█▀ █ █▄█ █ █\n█ ▄▀█ █ █ ▄█\n██████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Reverse a\nlinked\nlisst",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Reverse a\nlinked\nlisst",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Reverse a,\nlinked;\nlisst!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Reverse a , linked ; lisst ! ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Reverse a\nlinked\nlisst",
    "instruct_several_html_tags": "<div><span><p>Reverse a linked list</p></span></div>",
    "instruct_spoiler_bars": "||Reverse a linked list||",
    "instruct_with_inbetween_gzip_b64_blob": "Reverse a linked list. H4sIAAAAAAAAA0vOSUnPzEsBAF/n8p8GAAAA list.",
    "instruct_zalgo": "R̷e̷v̷e̸r̸s̸e̷ ̵a̸ ̸l̷i̴n̶k̵e̵d̶ ̸l̷i̷s̴t̴",
    "instruct_zero_width": "R​e​v​e​r​s​e​ ​a​ ​l​i​n​k​e​d​ ​l​i​s​t",
    "instruct_zero_width_and_typo": "R​e​v​e​r​s​e​ ​a​ ​l​i​n​k​e​d​ ​l​i​s​s​t",
    "output": "def reverse(head): \n    prev = None\n    cur = head \n\n    while cur:\n        next = cur.next\n        cur.next = prev \n        prev = cur \n        cur = next\n    head = prev\n    \n    return head",
    "prompt_id": "57a6ca1d-ea11-4554-a610-f7c183b69d58"
  },
  {
    "prompt_count": 152,
    "instruction_original": "Compute the longest increasing subsequence of a given array?",
    "input": "arr = [7, 10, 8, 11, 9, 5]",
    "instruct_all_caps_and_typo": "COMPUTE THE LONGEST INCREASING SUBSEQUENC OF A GIVEN ARRAY?",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPUTE THE LONGEST INCREASING SUBSEQUENC OF A GIVEN ARRAY?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "COMPUTE THE LONGEST INCREASING SUBSEQUENC OF A GIVEN ARRAY?",
    "instruct_all_caps_and_typo_and_missing_quote": "COMPUTE THE LONGEST INCREASING SUBSEQUENC OF A GIVEN ARRAY?",
    "instruct_code_fence": "```Compute the longest increasing subsequence of a given array?```",
    "instruct_confusable_unicode": "Çοmpυte the longest increaѕing ѕubѕeqυenсe οf a given array?",
    "instruct_confusable_unicode_and_typo": "Çοmpυte the lοngeѕt inсreaѕing ѕυbѕeգuence οf a giveŋ array?",
    "instruct_emoji": "🧮 Compute the longest increasing subsequence of a given array?📈",
    "instruct_emoji_and_typo": "🧮 Compute the lοngeѕt increaѕing ѕυbѕeգuence of a giveŋ array?📈",
    "instruct_emoji_and_typo_and_missing_bracket": "🧮 Compute the lοngeѕt increaѕing ѕυbѕeգuence of a giveŋ array?📈",
    "instruct_emoji_and_typo_and_missing_quote": "🧮 Compute the lοngeѕt increaѕing ѕυbѕeգuence of a giveŋ array?📈",
    "instruct_emoticon": "Compute the longest increasing subsequence of a given array? :)",
    "instruct_emoticon_and_typo": "Compute the lοngeѕt increaѕing ѕυbѕeգuence of a giveŋ array? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Compute the lοngeѕt increaѕing ѕυbѕeգuence of a giveŋ array? :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Compute the lοngeѕt increaѕing ѕυbѕeգuence of a giveŋ array? :)",
    "instruct_helpful_markdown_structure": "### Instruction Compute the longest increasing subsequence of a given array?",
    "instruct_helpful_meaning_reinforing_characters": "Compute the `longest increasing subsequence` of a given [array]?",
    "instruct_html_tags": "<p>Compute the longest increasing subsequence of a given array?</p>",
    "instruct_kaomoji": "Compute the longest increasing subsequence of a given array? (^.^)",
    "instruct_kaomoji_and_typo": "Compute the lοngeѕt increaѕing ѕυbѕeգuence of a giveŋ array? (^.^)",
    "instruct_markdown_bold": "**Compute the longest increasing subsequence of a given array?**",
    "instruct_markdown_bold_and_italic": "***Compute the longest increasing subsequence of a given array?***",
    "instruct_markdown_italic": "*Compute the longest increasing subsequence of a given array?*",
    "instruct_qr_ascii": "███████▀▀▀▀▀▀▀▀▀▀▀███████\n████▀░░░░░█░░░░░▀████\n██▀░░░░░░█░░░░░░░░░▀██\n█▀░░░░░░░░█░░█░░░░░░░▀█\n█░░░░░░░█░░░░░█░░█░░░░█\n█░░███░░░░░░░░█░░███░░█\n█░░███░░░░░░░░█░░███░░█\n█░░███░░░░░░░░░░░███░░█\n█░░░░░░░▀▀▀▀▀▀▀▀▀░░░░░░█\n█░░▀░░░█░▀█▀█░█░░█░░░▀░█\n█░░░█░░░█░░░░░░░░█░░█░░█\n█░░█░█░░█░░█▀▀░░░█░█░░█\n█░░█░░░█░█░░▀░░░█░░░█░█\n█░░█░░░░░░█░░░█░█░█░█░█\n█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█\n███████▄▄▄▄▄▄▄▄▄▄▄███████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compute the longest increasing \n subsquence\nof a given array?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Compute the longest increasing \n subsquence\nof a given array?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Compute the longest increasing \n subsquence\nof a given array.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Compute the longest increasing \n subsquence\nof a given array. ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Compute the longest increasing \n subsquence\nof a given array?",
    "instruct_several_html_tags": "<div><p><span>Compute the longest increasing subsequence of a given array?</span></p></div>",
    "instruct_spoiler_bars": "||Compute the longest increasing subsequence of a given array?||",
    "instruct_with_inbetween_gzip_b64_blob": "Compute the longest increasing subsequence of a given array?H4sIAAAAAAAA/wEqAP////8BAAD//wMAAAAA",
    "instruct_zalgo": "C̴o̷m̸p̵u̴t̷e̷ ̴t̵h̷e̶ ̵l̶o̶n̵g̷e̵s̸t̶ ̶i̴n̶c̵r̵e̸a̸s̸i̵n̴g̵ ̴s̶u̵b̸s̵e̸q̵u̴e̵n̵c̵e̴ ̸o̸f̴ ̸a̶ ̸g̸i̶v̷e̶n̸ ̶a̷r̵r̶a̵y̸?",
    "instruct_zero_width": "C\r\no\r\nm\r\np\r\nu\r\nt\r\ne\r\n \r\nt\r\nh\r\ne\r\n \r\nl\r\no\r\nn\r\ng\r\ne\r\ns\r\nt\r\n \r\ni\r\nn\r\nc\r\nr\r\ne\r\na\r\ns\r\ni\r\nn\r\ng\r\n \r\ns\r\nu\r\nb\r\ns\r\ne\r\nq\r\nu\r\ne\r\nn\r\nc\r\ne\r\n \r\no\r\nf\r\n \r\na\r\n \r\ng\r\ni\r\nv\r\ne\r\nn\r\n \r\na\r\nr\r\nr\r\na\r\ny\r\n?",
    "instruct_zero_width_and_typo": "C\r\no\r\nm\r\np\r\nu\r\nt\r\ne\r\n \r\nt\r\nh\r\ne\r\n \r\nl\r\no\r\nn\r\ng\r\ne\r\ns\r\nt\r\n \r\ni\r\nn\r\nc\r\nr\r\ne\r\na\r\ns\r\ni\r\nn\r\ng\r\n \r\ns\r\nu\r\nb\r\ns\r\ne\r\nq\r\nu\r\ne\r\nn\r\nc\r\ne\r\n \r\no\r\nf\r\n \r\na\r\n \r\ng\r\ni\r\nv\r\ne\r\nn\r\n \r\na\r\nr\r\nr\r\na\r\ny\r\n?",
    "output": "[7, 8, 9, 11]",
    "prompt_id": "3b349e90-b7b9-4f9f-8fce-026e6a683b00"
  },
  {
    "prompt_count": 153,
    "instruction_original": "Design an algorithm to find the maximum profit of a stock buy and sell?",
    "input": "",
    "instruct_all_caps_and_typo": "DESIGN AN ALGORTIHM TO FIND THE MAXIMUM PROFIT OF A STOCK BUY AND SELL?",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESIGN AN ALGORTIHM TO FIND THE MAXIMUM PROFIT OF A STOCK BUY AND SELL",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "DESIGN AN ALGORTIHM TO FIND THE MAXIMUM PROFIT OF A STOCK BUY AND SELL",
    "instruct_all_caps_and_typo_and_missing_quote": "DESIGN AN ALGORTIHM TO FIND THE MAXIMUM PROFIT OF A STOCK BUY AND SELL",
    "instruct_code_fence": "```Design an algorithm to find the maximum profit of a stock buy and sell?```",
    "instruct_confusable_unicode": "Desіgn an algоrіthm tо fіnd thе maxіmum prоfіt оf a stоck buy and sеll?",
    "instruct_confusable_unicode_and_typo": "Desіgn an algоrіthm tо fіnd thе maxіmum prоfіt оf a stоck buy and sеll?",
    "instruct_emoji": "Design an algorithm to find the maximum profit 📈 of a stock buy and sell? 💰",
    "instruct_emoji_and_typo": "Design an algorthim to find the maximum profit 📈 of a stock buy and sell? 💰",
    "instruct_emoji_and_typo_and_missing_bracket": "Design an algorthim to find the maximum profit 📈 of a stock buy and sell 💰",
    "instruct_emoji_and_typo_and_missing_quote": "Design an algorthim to find the maximum profit 📈 of a stock buy and sell 💰",
    "instruct_emoticon": "Design an algorithm to find the maximum profit :) of a stock buy and sell? $:)",
    "instruct_emoticon_and_typo": "Design an algorthim to find the maximum profit :) of a stock buy and sell? $:)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Design an algorthim to find the maximum profit :) of a stock buy and sell $:)",
    "instruct_emoticon_and_typo_and_missing_quote": "Design an algorthim to find the maximum profit :) of a stock buy and sell $:)",
    "instruct_helpful_markdown_structure": "- Design an algorithm to find the maximum profit of a stock buy and sell?",
    "instruct_helpful_meaning_reinforing_characters": "👉 Design an algorithm to find the maximum profit 💰 of a stock buy and sell? ✔️",
    "instruct_html_tags": "Design an <b>algorithm</b> to find the maximum profit of a stock buy and sell?",
    "instruct_kaomoji": "Design an algorithm to find the maximum profit (^ω^) of a stock buy and sell? (≧▽≦)",
    "instruct_kaomoji_and_typo": "Design an algorthim to find the maximum profit (^ω^) of a stock buy and sell? (≧▽≦)",
    "instruct_markdown_bold": "**Design an algorithm to find the maximum profit of a stock buy and sell?**",
    "instruct_markdown_bold_and_italic": "**_Design an algorithm to find the maximum profit of a stock buy and sell?_**",
    "instruct_markdown_italic": "*Design an algorithm to find the maximum profit of a stock buy and sell?*",
    "instruct_qr_ascii": "░███████░░░░░░░░░\n░███████░░███████\n░███░░░░░░███░░░░\n░███████░░███████\n░░░░░███░░░░░███\n░███████░░███████\n░░░░░░░░░░░░░░░░░\nDesign an algorithm to find the maximum profit of a stock buy and sell?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Design\nan\nalgorthim\nto\nfind\nthe\nmaximum\nprofit\nof a stock buy and sell",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Design\nan\nalgorthim\nto find the maximum\nprofit\nof a stock buy and sell",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Design\nan algorthim.\nTo find the maximum,profit?\nOf a stock buy and sell!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Design \n an \nalgorthim. \nTo find the maximum , profit? \nOf a stock buy and sell ! ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Design\nan algorthim\nto find the\nmaximum profit\nof a stock buy and sell",
    "instruct_several_html_tags": "Design an <i>algorithm</i> to find the <mark>maximum profit</mark> of a stock buy and sell?",
    "instruct_spoiler_bars": "||Design an algorithm to find the maximum profit of a stock buy and sell?||",
    "instruct_with_inbetween_gzip_b64_blob": "Design an algorithmH4sIAAAAAAAA/wEAAP//AAAAAAAAt the maximum profit of a stock buy and sell?",
    "instruct_zalgo": "D͎e͎s͎i͎g͎n͎ ͎a͎n͎ ͎a͎l͎g͎o͎r͎i͎t͎h͎m͎ ͎t͎o͎ ͎f͎i͎n͎d͎ ͎t͎h͎e͎ ͎m͎a͎x͎i͎m͎u͎m͎ ͎p͎r͎o͎f͎i͎t͎ ͎o͎f͎ ͎a͎ ͎s͎t͎o͎c͎k͎ ͎b͎u͎y͎ ͎a͎n͎d͎ ͎s͎e͎l͎l͎?",
    "instruct_zero_width": "D​e​s​i​g​n​ ​a​n​ ​a​l​g​o​r​i​t​h​m​ ​t​o​ ​f​i​n​d​ ​t​h​e​ ​m​a​x​i​m​u​m​ ​p​r​o​f​i​t​ ​o​f​ ​a​ ​s​t​o​c​k​ ​b​u​y​ ​a​n​d​ ​s​e​l​l​?",
    "instruct_zero_width_and_typo": "D​e​s​i​g​n​ ​a​n​ ​a​l​g​o​r​t​h​i​m​ ​t​o​ ​f​i​n​d​ ​t​h​e​ ​m​a​x​i​m​u​m​ ​p​r​o​f​i​t​ ​o​f​ ​a​ ​s​t​o​c​k​ ​b​u​y​ ​a​n​d​ ​s​e​l​l​?",
    "output": "def maxProfit(prices):\n    min_price = float('inf')\n    max_profit = 0\n\n    for price in prices:\n        min_price = min(min_price, price) \n        profit = price - min_price\n        max_profit = max(max_profit, profit)\n\n    return max_profit",
    "prompt_id": "5e599a12-640b-4ba9-8989-133666f4ad72"
  },
  {
    "prompt_count": 154,
    "instruction_original": "Given two strings, check whether one string is a rotation of another?",
    "input": "s1 = ‘waterbottle’\ns2 = ‘erbottlewat’",
    "instruct_all_caps_and_typo": "GIVEN TWW STRINGZ, CHEK WHETHR ONE STRING IZ A ROATION OV ANNUTHER?",
    "instruct_all_caps_and_typo_and_missing_bracket": "GIVEN TWW STRINGZ, CHEK WHETHR ONE STRING IZ A ROATION OV ANNUTHER? [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GIVEN TWW STRINGZ, CHEK WHETHR ONE STRING IZ A ROATION OV ANNUTHER? [\"",
    "instruct_all_caps_and_typo_and_missing_quote": "GIVEN TWW STRINGZ, CHEK WHETHR ONE STRING IZ A ROATION OV ANNUTHER? \"",
    "instruct_code_fence": "```\nGiven two strings, check whether one string is a rotation of another?\n```",
    "instruct_confusable_unicode": "Gïvën twö strïñgs, çhëçk whëthër öñë strïñg ïs ä rötätïöñ öf äñöthër?",
    "instruct_confusable_unicode_and_typo": "Gïvën twö strïñgs, çhëk whëthër öñë strïñg ïz ä rötätïöñ öf äñöthër?",
    "instruct_emoji": "Given two strings 📜📜, check 🤔 whether one string is a rotation of another? 🔄",
    "instruct_emoji_and_typo": "Given two stringz 📜📜, chek 🤔 whethr one string iz a roation ov annuther? 🔄",
    "instruct_emoji_and_typo_and_missing_bracket": "Given two stringz 📜📜, chek 🤔 whethr one string iz a roation ov annuther? 🔄 [",
    "instruct_emoji_and_typo_and_missing_quote": "Given two stringz 📜📜, chek 🤔 whethr one string iz a roation ov annuther? 🔄 \"",
    "instruct_emoticon": "Given two strings :D, check ;) whether one string is a rotation of another? :O",
    "instruct_emoticon_and_typo": "Goven two stringz :D, chek ;) whethr one string iz a roation ov annuther? :O",
    "instruct_emoticon_and_typo_and_missing_bracket": "Goven two stringz :D, chek ;) whethr one string iz a roation ov annuther? :O [",
    "instruct_emoticon_and_typo_and_missing_quote": "Goven two stringz :D, chek ;) whethr one string iz a roation ov annuther? :O \"",
    "instruct_helpful_markdown_structure": "- Task: String Rotation Check\\n- Input: Two strings\\n- Goal: Determine if one is a rotation of the other.",
    "instruct_helpful_meaning_reinforing_characters": "Given two strings ➡️ check whether one string is a rotation of another? 🤔🔄",
    "instruct_html_tags": "<b>Given</b> two strings, <i>check whether</i> one string is a rotation of another?",
    "instruct_kaomoji": "Given two strings (・∀・), check (・・?) whether one string is a rotation of another? (ぐるぐる)",
    "instruct_kaomoji_and_typo": "Givin two stringz (・∀・), chek (・・?) whethr one string iz a roation ov annuther? (ぐるぐる)",
    "instruct_markdown_bold": "**Given two strings, check whether one string is a rotation of another?**",
    "instruct_markdown_bold_and_italic": "***Given two strings, check whether one string is a rotation of another?***",
    "instruct_markdown_italic": "*Given two strings, check whether one string is a rotation of another?*",
    "instruct_qr_ascii": "Given two strings -->> check whether one string is a rotation of another? <--",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Givn two strings,\\n chek whethr \\n one string iz a rotatin ov anuther? [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Givn two strings,\\n chek whethr \\n one string iz a rotatin ov anuther? [\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Givn two strings; \\n chek whethr, \\n one string iz a rotatin ov anuther, [\"?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Givn two strings; \\n  chek whethr, \\n one string iz a rotatin ov anuther, [\"?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Givn two strings,\\n chek whethr \\n one string iz a rotatin ov anuther? \"",
    "instruct_several_html_tags": "<p>Given <b>two</b> strings,</p> <div><i>check whether</i> one string is a rotation of another?</div>",
    "instruct_spoiler_bars": "||Given two strings, check whether one string is a rotation of another?||",
    "instruct_with_inbetween_gzip_b64_blob": "Given two strings [H4sIAAAAAAAAAAMAAAAAAAAAAAB+ADoAQ0hFQ0sAAAA=], check whether one string is a rotation of another?",
    "instruct_zalgo": "G͏̗̺͇̯i͏̘̝̠ͅv͚̪͖̲ͅȩ̹̲̰͕̼̙ͅn̳ͅ ̡̟t̛̙̤͕̦w͚͔͓͎̰͡o̱͚̫̺͢ ̧͉̲͕s͓̩̙ͅt̛̖͙r̫̘̬͖͡i̵̺̻̙̬͎͈n̨̹͍̤g̘͈͍̩̖͉s̶̬͖̖ͅ,͓͈̟͈́ ҉c̱̳͔̮̖̺̀h̶̺̭͚͍e̹͕̤̳͉̪̕ͅc̥̝͚͉̘k͙̬ͅ ҉͙̱͕͎͎͈w̛͇h̵͖͈͙̝̺͈e̮̖̞̲͍͉͈t͇̤h҉̬̙̤̺̹e̳͙͢r͖̀ ͙͇o͔̮̜͢n͇̕ę̝ ͕̖̟͖̲͎̟ś͓̠̪t͙r̨̘͚i͚̠͘n̖͎͔g̪͈͝ ̮͞ͅi̵̞̭͓̖s̥̱͚̤̮͍̕ ̘͞a̵ ̵r͙̣o͏̹̲̱̜̬̰ͅt͇̣͚̺̺̟̞͡a̴̙̞͍̬t̖̫̞͙̩ì̘̪̪̺͇͍̪o̵̰͈̻̺͕̖n̢̳ ̸̟̣͍͓͉̪ͅo̖͚͟f̝͘ ̳͚͈ͅa̷͙͚n̛o̟̪̗̻t̸̟͚̺̳̬h͏̫̺̞e̥̙̞͉͎r̹̥͚̩͟?̸̞̦",
    "instruct_zero_width": "Given\n\n\t\n\n\n\ttwo\n\n\t\n\n\n\tstrings,\n\n\t\n\n\n\tcheck\n\n\t\n\n\n\twhether\n\n\t\n\n\n\tone\n\n\t\n\n\n\tstring\n\n\t\n\n\n\tis\n\n\t\n\n\n\ta\n\n\t\n\n\n\trotation\n\n\t\n\n\n\tof\n\n\t\n\n\n\tanother?",
    "instruct_zero_width_and_typo": "Givn\n\n\t\n\n\n\ttwo\n\n\t\n\n\n\tstringz,\n\n\t\n\n\n\tchek\n\n\t\n\n\n\twhethr\n\n\t\n\n\n\tone\n\n\t\n\n\n\tstring\n\n\t\n\n\n\tiz\n\n\t\n\n\n\ta\n\n\t\n\n\n\troation\n\n\t\n\n\n\tov\n\n\t\n\n\n\tannuther?",
    "output": "def isRotation(s1, s2):\n    if len(s1) != len(s2):\n        return False\n\n    s3 = s1 + s1 \n    return s3.find(s2) != -1",
    "prompt_id": "4cbd4921-ee7f-4e3c-a28c-b63781a9f177"
  },
  {
    "prompt_count": 155,
    "instruction_original": "Given an array of integers, return the first repeating element.",
    "input": "arr = [3, 6, 7, 1, 4, 6, 7]",
    "instruct_all_caps_and_typo": "GIVEN AN ARRAY OF INTGERS, RETURN THE FIRST REPEATING ELEMEN.",
    "instruct_all_caps_and_typo_and_missing_bracket": "GIVEN AN ARRAY OF INTGERS, RETURN THE FIRST REPEATING ELEMEN.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"GIVEN AN ARRAY OF INTGERS, RETURN THE FIRST REPEATING ELEMEN.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"GIVEN AN ARRAY OF INTGERS, RETURN THE FIRST REPEATING ELEMEN.",
    "instruct_code_fence": "```python array = [1, 2, 3, 2, 1] # Implement function to find first repeating element ```",
    "instruct_confusable_unicode": "Givеn an array оf integers, rеturn the fιrst reρeating elеment.",
    "instruct_confusable_unicode_and_typo": "Givеn an array оf intgers, rеturn the fιrst reρeating elemen.",
    "instruct_emoji": "🔢➡️🔎🔄1️⃣",
    "instruct_emoji_and_typo": "🔢➡️🔎🔄1️⃣ ELEMEN. 🚫",
    "instruct_emoji_and_typo_and_missing_bracket": "🔢➡️🔎🔄1️⃣ ELEMEN. 🚫",
    "instruct_emoji_and_typo_and_missing_quote": "\"🔢➡️🔎🔄1️⃣ ELEMEN. 🚫",
    "instruct_emoticon": "Input: array of integers. Output: first repeating element :)",
    "instruct_emoticon_and_typo": "Input: array of intgers, Output: first repeating elemen :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Input: array of intgers, Output: first repeating elemen :)",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Input: array of intgers, Output: first repeating elemen :)",
    "instruct_helpful_markdown_structure": "# Task Given an array of integers: - Find the element that repeats first. - Return that element.",
    "instruct_helpful_meaning_reinforing_characters": "Input ➡️ 🔢 Array ➡️ Process 🔄 Find First Repeat 🎯 ➡️ Output ✅ Element ✨",
    "instruct_html_tags": "<p>Given an array of integers, return the first repeating element.</p>",
    "instruct_kaomoji": "🔢 배열을 받아, 첫번째 반복되는 요소를 돌려줘! (≧▽≦)",
    "instruct_kaomoji_and_typo": "🔢 배열을 받아, 첫번째 반복되는 ELEMEN을 돌려줘! (≧▽≦)",
    "instruct_markdown_bold": "**Given** **an** **array** **of** **integers**, **return** **the** **first** **repeating** **element**.",
    "instruct_markdown_bold_and_italic": "**_Given_** _an array_ **_of_** _integers,_ **_return_** _the_ **_first_** _repeating_ **_element._**",
    "instruct_markdown_italic": "*Given* *an* *array* *of* *integers*, *return* *the* *first* *repeating* *element*.",
    "instruct_qr_ascii": "Given an array of integers, ░▒▓█▓▒░ return the first repeating element.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "GIVEN AN ARRAY OF INTGERS,\nRETURN THE FIRST REPEATING\nELEMEN.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "\"GIVEN AN ARRAY OF INTGERS,\nRETURN THE FIRST REPEATING\nELEMEN.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "\"GIVEN?\nAN ARRAY OF INTGERS.\nRETURN THE FIRST REPEATING\nELEMEN.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "\"GIVEN?\nAN ARRAY OF  INTGERS.\nRETURN THE FIRST  REPEATING\nELEMEN.",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"GIVEN AN ARRAY OF INTGERS,\nRETURN THE FIRST REPEATING\nELEMEN.",
    "instruct_several_html_tags": "<div><p><span>Given</span> an <em>array</em> of <strong>integers</strong>, return the <mark>first</mark> repeating element.</p></div>",
    "instruct_spoiler_bars": "||Given an array of integers, return the first repeating element.||",
    "instruct_with_inbetween_gzip_b64_blob": "Given an array of integers, H4sIAAAAAAAAAwXBQWHAIAA= return the first repeating element.",
    "instruct_zalgo": "Gͥiͯvͩeͤnͬ aͩn͂ aͪrͦrͣaͩyͥ oͯfͣ iͪnͧtͯeͦgͨeͥrͩsͨ, rͣeͯtͩuͤrͭnͬ tͧhͨeͯ fͥiͪrͣsͨtͭ rͫeͤpͥeͯaͨtͭiͫnͨgͥ eͪlͭeͨmͫeͥnͣtͯ.",
    "instruct_zero_width": "Given an array of integers, return the first repeating element.",
    "instruct_zero_width_and_typo": "Given an array of intgers, return the first repeating elemen.",
    "output": "6",
    "prompt_id": "27e84694-cf43-4147-872f-0cd1c8a163be"
  },
  {
    "prompt_count": 156,
    "instruction_original": "Find the two non-repeating elements in an array of repeating elements?",
    "input": "arr = [2, 3, 7, 9, 11, 2, 3, 11]",
    "instruct_all_caps_and_typo": "FIND THE TWO NON-REPEATING ELEMENNTS IN AN ARRAY OF REPEATING ELEMENTS?",
    "instruct_all_caps_and_typo_and_missing_bracket": "FIND THE TWO NON-REPEATING ELEMENNTS IN AN ARRAY OF REPEATING ELEMENTS?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "FIND THE TWO NON-REPEATING ELEMENNTS IN AN ARRAY OF REPEATING ELEMENTS?",
    "instruct_all_caps_and_typo_and_missing_quote": "FIND THE TWO NON-REPEATING ELEMENNTS IN AN ARRAY OF REPEATING ELEMENTS?",
    "instruct_code_fence": "```Find the two non-repeating elements in an array of repeating elements?```",
    "instruct_confusable_unicode": "Fıñd thê twó ñöñ-rêpêätıñg êlêmêñts ıñ äñ ärräÿ öf rêpêätıñg êlêmêñts?",
    "instruct_confusable_unicode_and_typo": "Fıñd thê twó ñöñ-rêpêätıñg êlêmêññts ıñ äñ ärräÿ öf rêpêätıñg êlêmêñts?",
    "instruct_emoji": "Find the two non-repeating elements in an array of repeating elements? ✨🧐🔎",
    "instruct_emoji_and_typo": "Find the two non-repeating elemennts in an array of repeating elements? ✨🧐🔎",
    "instruct_emoji_and_typo_and_missing_bracket": "Find the two non-repeating elemennts in an array of repeating elements? ✨🧐🔎",
    "instruct_emoji_and_typo_and_missing_quote": "Find the two non-repeating elemennts in an array of repeating elements? ✨🧐🔎",
    "instruct_emoticon": "Find the two non-repeating elements in an array of repeating elements? :) :( ;)",
    "instruct_emoticon_and_typo": "Find the two non-repeating elemennts in an array of repeating elements? :) :( ;)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Find the two non-repeating elemennts in an array of repeating elements? :) :( ;)",
    "instruct_emoticon_and_typo_and_missing_quote": "Find the two non-repeating elemennts in an array of repeating elements? :) :( ;)",
    "instruct_helpful_markdown_structure": "# Find Non-Repeating Elements\n* Find the two elements that do not repeat in an array.",
    "instruct_helpful_meaning_reinforing_characters": "💡 Find the two non-repeating elements in an array of repeating elements? 🤔❓",
    "instruct_html_tags": "<p>Find the two non-repeating elements in an array of repeating elements?</p>",
    "instruct_kaomoji": "Find the two non-repeating elements in an array of repeating elements? (•ω•) (´･ω･`) (σ´･ω･)σ",
    "instruct_kaomoji_and_typo": "Find the two non-repeating elemennts in an array of repeating elements? (•ω•) (´･ω･`) (σ´･ω･)σ",
    "instruct_markdown_bold": "**Find the two non-repeating elements in an array of repeating elements?**",
    "instruct_markdown_bold_and_italic": "***Find the two non-repeating elements in an array of repeating elements?***",
    "instruct_markdown_italic": "*Find the two non-repeating elements in an array of repeating elements?*",
    "instruct_qr_ascii": "███████████████████████████ ██████████▒▒█▒▒██████████ █████▒▒██▄▄▄▄▄▄██▄▄▒▒█████ █████▒▒███▄▀▄███▀▄▀██▒▒█████ █████▒▒███▄▀▄███▀▄▀██▒▒█████ █████▒▒██▄▄▄▄▄▄██▄▄▒▒█████ █████▒▒█▒▒▒▒▒▒▒▒▒▒▒▒▒▒█▒▒█████ ███████████████████████████ Find the two non-repeating elements in an array of repeating elements?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Find the two non-repeating\nelements in an\narray of reapeating elements?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Find the two non-repeating\nelements in an\narray of reapeating elements?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Find the two non-repeating, elements in an. array of reapeating elements!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Find the two  non-repeating, elements in an. array  of reapeating  elements!",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Find the two non-repeating\nelements in an\narray of reapeating elements?",
    "instruct_several_html_tags": "<div><span><p><b>Find the two non-repeating elements in an array of repeating elements?</b></p></span></div>",
    "instruct_spoiler_bars": "||Find the two non-repeating elements in an array of repeating elements?||",
    "instruct_with_inbetween_gzip_b64_blob": "Find the two non-repeating elements in an array [H4sIAAAAAAAAAwMAAAAAAAAAAAA=] of repeating elements?",
    "instruct_zalgo": "F̸i̵n̶d̶ ̴t̵h̷e̸ ̴t̸w̵o̴ ̶n̴o̸n̸-̶r̵e̵p̸e̴a̶t̶i̸n̵g̸ ̵e̴l̴e̸m̴e̵n̵t̸s̷ ̸i̸n̷ ̴a̶n̷ ̶a̷r̸r̶a̶y̸ ̶o̴f̵ ̴r̸e̶p̷e̵a̸t̴i̷n̴g̷ ̵e̷l̵e̶m̵e̷n̸t̸s̵?̵",
    "instruct_zero_width": "Find\bthe\btwo\bnon-repeating\belements\bin\ban\barray\bof\brepeating\belements?",
    "instruct_zero_width_and_typo": "Find\bthe\btwo\bnon-repeating\belemennts\bin\ban\barray\bof\brepeating\belements?",
    "output": "7, 9",
    "prompt_id": "e0e0f521-ec77-4cde-8520-f8603f117ab9"
  },
  {
    "prompt_count": 157,
    "instruction_original": "Given a binary tree, check if it is a binary search tree?",
    "input": "",
    "instruct_all_caps_and_typo": "GIVEN A BINARY TREE, CHECK IF IT IS A BINARY SEARH TREE?",
    "instruct_all_caps_and_typo_and_missing_bracket": "GIVEN A BINARY TREE, CHECK IF IT IS A BINARY SEARH TREE(",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GIVEN A BINARY TREE, CHECK IF IT IS A BINARY SEARH TREE(\"",
    "instruct_all_caps_and_typo_and_missing_quote": "GIVEN A BINARY TREE, CHECK IF IT IS A BINARY SEARH TREE\"",
    "instruct_code_fence": "```nGiven a binary tree, check if it is a binary search tree?n```",
    "instruct_confusable_unicode": "Gıven α bıηαry ʈrεe, chεck ıf ıʈ ıs α bıηαry sεαrch ʈrεe?",
    "instruct_confusable_unicode_and_typo": "Gıven α bıηαry ʈrεe, chεck ıf ıʈ ıs α bıηαry sεαrh ʈrεe?",
    "instruct_emoji": "🤔🌳❓ Is this a binary search tree? ✅❌",
    "instruct_emoji_and_typo": "🤔🌳❓ Is this a binary searh tree? ✅❌",
    "instruct_emoji_and_typo_and_missing_bracket": "🤔🌳❓ Is this a binary searh tree(? ✅❌",
    "instruct_emoji_and_typo_and_missing_quote": "🤔🌳❓ Is this a binary searh tree\"? ✅❌",
    "instruct_emoticon": ":-) |-| tree, check if BST? ;-)",
    "instruct_emoticon_and_typo": ":-) |-| tree, check if BST? ;-) searh",
    "instruct_emoticon_and_typo_and_missing_bracket": ":-) |-| tree, check if BST? ;-) searh(",
    "instruct_emoticon_and_typo_and_missing_quote": ":-) |-| tree, check if BST? ;-) searh\"",
    "instruct_helpful_markdown_structure": "# Tree Checknn- Given a binary tree, is it a binary search tree?",
    "instruct_helpful_meaning_reinforing_characters": "Given a binary tree, check if it is a binary search tree???",
    "instruct_html_tags": "<p>Given a binary tree, check if it is a binary search tree?</p>",
    "instruct_kaomoji": "(・ω・) Tree given, is it a BST? (゜Д゜)",
    "instruct_kaomoji_and_typo": "(・ω・) Tree given, is it a BST searh? (゜Д゜)",
    "instruct_markdown_bold": "**Given a binary tree, check if it is a binary search tree?**",
    "instruct_markdown_bold_and_italic": "***Given a binary tree, check if it is a binary search tree?***",
    "instruct_markdown_italic": "*Given a binary tree, check if it is a binary search tree?*",
    "instruct_qr_ascii": "Given a binary tree, ...ASCII QR ART... check if it is a binary search tree?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Given a binary treen, checknif it is a binary searh treen(",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Given a binary treen, checknif it is a binary searh treen(\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Given a binary treen; checknif it is a binary searh treen(.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Given a binary treen ; checknif it is a binary searh treen ( .",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Given a binary treen, checknif it is a binary searh treen\"",
    "instruct_several_html_tags": "<div><p><span>Given a binary tree, check if it is a binary search tree?</span></p></div>",
    "instruct_spoiler_bars": "||Given a binary tree, check if it is a binary search tree?||",
    "instruct_with_inbetween_gzip_b64_blob": "Given a binary tree, H4sIAAAAAAAAAzNwAwADAAQAAQABAAIAAwAEAA== check if it is a binary search tree?",
    "instruct_zalgo": "G̸i̷v̸e̸n̸ ̵a̸ ̷b̷i̷n̷a̷r̵y̴ ̷t̴r̶e̴e̷,̵ ̵c̵h̷e̷c̶k̶ ̷i̸f̴ ̸i̶t̸ ̴i̷s̶ ̵a̸ ̷b̷i̶n̷a̶r̶y̴ ̵s̵e̶a̸r̶c̵h̶ ̶t̵r̶e̷e̸?",
    "instruct_zero_width": "G​i​v​e​n​ ​a​ ​b​i​n​a​r​y​ ​t​r​e​e​,​ ​c​h​e​c​k​ ​i​f​ ​i​t​ ​i​s​ ​a​ ​b​i​n​a​r​y​ ​s​e​a​r​c​h​ ​t​r​e​e​?",
    "instruct_zero_width_and_typo": "G​i​v​e​n​ ​a​ ​b​i​n​a​r​y​ ​t​r​e​e​,​ ​c​h​e​c​k​ ​i​f​ ​i​t​ ​i​s​ ​a​ ​b​i​n​a​r​y​ ​s​e​a​r​h​ ​t​r​e​e​?",
    "output": "def isBST(root):\nif root is None : \n\treturn True\n\nif root.left is not None and root.left.val > root.val: \n\treturn False\n\nif root.right is not None and root.right.val < root.val: \n\treturn False\n\nreturn isBST(root.left) and isBST(root.right)",
    "prompt_id": "b6c8ed49-4a72-44b4-ad9d-ad383fae2eb2"
  },
  {
    "prompt_count": 158,
    "instruction_original": "Find the maximum profit that can be earned from a given sequence of transactions?",
    "input": "arr = [100, 180, 260, 310, 40, 535, 695]",
    "instruct_all_caps_and_typo": "FIND THE MAXIMU PROFIT THAT CAN BE EARNED FROM A GIVEN SEQUENCE OF TRANSACTIONS?",
    "instruct_all_caps_and_typo_and_missing_bracket": "FIND THE MAXIMU PROFIT THAT CAN BE EARNED FROM A GIVEN SEQUENCE OF TRANSACTIONS?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "FIND THE MAXIMU PROFIT THAT CAN BE EARNED FROM A GIVEN SEQUENCE OF TRANSACTIONS?",
    "instruct_all_caps_and_typo_and_missing_quote": "FIND THE MAXIMU PROFIT THAT CAN BE EARNED FROM A GIVEN SEQUENCE OF TRANSACTIONS?",
    "instruct_code_fence": "```Find the maximum profit that can be earned from a given sequence of transactions?```",
    "instruct_confusable_unicode": "Fınԁ the maxımum proft thɑt can be earned frοm a gıven sequence of transactiοns?",
    "instruct_confusable_unicode_and_typo": "Fınԁ the maxımum prοft thɑt can be earned frοm a gıven sequence of transactiοn?",
    "instruct_emoji": "Find the maximum 💰 profit that can be earned from a given sequence of transactions?📊📈📉",
    "instruct_emoji_and_typo": "Find the maximu 💰 profit that can be earned from a given sequence of transaction?📊📈📉",
    "instruct_emoji_and_typo_and_missing_bracket": "Find the maximu 💰 profit that can be earned from a given sequence of transaction?📊📈📉",
    "instruct_emoji_and_typo_and_missing_quote": "Find the maximu 💰 profit that can be earned from a given sequence of transaction?📊📈📉",
    "instruct_emoticon": "Find the maximum profit :) that can be earned from a given sequence of transactions? :D",
    "instruct_emoticon_and_typo": "Find the maximu profit :) that can be earned from a given sequence of transaction? :D",
    "instruct_emoticon_and_typo_and_missing_bracket": "Find the maximu profit :) that can be earned from a given sequence of transaction? :D",
    "instruct_emoticon_and_typo_and_missing_quote": "Find the maximu profit :) that can be earned from a given sequence of transaction? :D",
    "instruct_helpful_markdown_structure": "# Profit Calculation\n\nFind the maximum profit that can be earned from a given sequence of transactions?",
    "instruct_helpful_meaning_reinforing_characters": "💰 Find the maximum profit ↑ that can be earned from a given sequence of transactions? 📈",
    "instruct_html_tags": "<p>Find the maximum profit that can be earned from a given sequence of transactions?</p>",
    "instruct_kaomoji": "Find the maximum profit (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧ that can be earned from a given sequence of transactions? ☆ﾐ(o*･ω･)ﾉ",
    "instruct_kaomoji_and_typo": "Find the maximu profit (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧ that can be earned from a given sequence of transaction? ☆ﾐ(o*･ω･)ﾉ",
    "instruct_markdown_bold": "**Find the maximum profit that can be earned from a given sequence of transactions?**",
    "instruct_markdown_bold_and_italic": "***Find the maximum profit that can be earned from a given sequence of transactions?***",
    "instruct_markdown_italic": "*Find the maximum profit that can be earned from a given sequence of transactions?*",
    "instruct_qr_ascii": "Find the maximum profit that can be earned from a given sequence of transactions?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Find the maximu profit that\ncan be earned from a given\n\nsequence of transaction?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Find the maximu profit that\ncan be earned from a given\n\nsequence of transaction?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Find the maximu profit that;\ncan be earned from a given\n\nsequence of transaction?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Find the maximu profit that ; \ncan be earned from a given\n\nsequence of transaction ?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Find the maximu profit that\ncan be earned from a given\n\nsequence of transaction?",
    "instruct_several_html_tags": "<div><span>Find the maximum profit that can be earned from a given sequence of transactions?</span></div>",
    "instruct_spoiler_bars": "||Find the maximum profit that can be earned from a given sequence of transactions?||",
    "instruct_with_inbetween_gzip_b64_blob": "Find the maximum profit H4sIAAAAAAAAA0tMSbE0MgEABW3W3AwAAAA= that can be earned from a given sequence of transactions?",
    "instruct_zalgo": "F͎i͙n̗d̞ t̝h̵e͈ ṃa̫x̹i͏m̱u̱m͏ p̙r̤o̪f̥i̹t̕ t̙h̩a̡t͇ c̙a̪n͚ b̴e͈ e̸a̜r̘n̡ęd̰ f̶r̢ǫm̷ a̴ g̪i̱v͍e̩ṉ s̛e̝q͏u̼e̝n̢c̫e̝ o̵f̞ t̛r͡a̱n͏s̡a̸c̵t͏ḭǫn̤s͍?͉",
    "instruct_zero_width": "F‎i‎n‎d‎ ‎t‎h‎e‎ ‎m‎a‎x‎i‎m‎u‎m‎ ‎p‎r‎o‎f‎i‎t‎ ‎t‎h‎a‎t‎ ‎c‎a‎n‎ ‎b‎e‎ ‎e‎a‎r‎n‎e‎d‎ ‎f‎r‎o‎m‎ ‎a‎ ‎g‎i‎v‎e‎n‎ ‎s‎e‎q‎u‎e‎n‎c‎e‎ ‎o‎f‎ ‎t‎r‎a‎n‎s‎a‎c‎t‎i‎o‎n‎s‎?",
    "instruct_zero_width_and_typo": "F‎i‎n‎d‎ ‎t‎h‎e‎ ‎m‎a‎x‎i‎m‎u‎m‎ ‎p‎r‎o‎f‎i‎t‎ ‎t‎h‎a‎t‎ ‎c‎a‎n‎ ‎b‎e‎ ‎e‎a‎r‎n‎e‎d‎ ‎f‎r‎o‎m‎ ‎a‎ ‎g‎i‎v‎e‎n‎ ‎s‎e‎q‎u‎e‎n‎c‎e‎ ‎o‎f‎ ‎t‎r‎a‎n‎s‎a‎c‎t‎i‎o‎n‎?",
    "output": "865",
    "prompt_id": "d44bc95d-2d55-45e0-b917-c45f445e6f9c"
  },
  {
    "prompt_count": 159,
    "instruction_original": "Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually",
    "input": "",
    "instruct_all_caps_and_typo": "CACLULAT TEH AMOUN TFO MONEEY IN A BNAK ACCUNT WIT AN INITIL $100 DEPOIT NAD AN INTRSET RATE OF 6%, COMPUNDED ANUALLY.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CACLULAT TEH AMOUN TFO MONEEY IN A BNAK ACCUNT WIT AN INITIL $100 DEPOIT NAD AN INTRSET RATE OF 6%, COMPUNDED ANUALLY.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CACLULAT TEH AMOUN TFO MONEEY IN A BNAK ACCUNT WIT AN INITIL $100 DEPOIT NAD AN INTRSET RATE OF 6%, COMPUNDED ANUALLY.",
    "instruct_all_caps_and_typo_and_missing_quote": "CACLULAT TEH AMOUN TFO MONEEY IN A BNAK ACCUNT WIT AN INITIL $100 DEPOIT NAD AN INTRSET RATE OF 6%, COMPUNDED ANUALLY.",
    "instruct_code_fence": "```Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually```",
    "instruct_confusable_unicode": "Calculate the amοunt of mοney in a bank accοunt with an initial $100 depοsit and an interest rate of 6%, cοmpοunded annually.",
    "instruct_confusable_unicode_and_typo": "Calсulate the amοunt of mоneey in a bank aссοunt with an initial $100 depοit and an interest rate of 6%, cοmpοunded annually.",
    "instruct_emoji": "💰📈 Calculate bank account money with $100 deposit & 6% interest compounded annually. 🎉",
    "instruct_emoji_and_typo": "💰📈 Calculat bank accunt money with $100 depoit & 6% intrset compounded anually. 😕",
    "instruct_emoji_and_typo_and_missing_bracket": "💰📈 Calculat bank accunt money with $100 depoit & 6% intrset compounded anually.",
    "instruct_emoji_and_typo_and_missing_quote": "💰📈 Calculat bank accunt money with $100 depoit & 6% intrset compounded anually. 😕",
    "instruct_emoticon": ":-) Calculate bank account money w/ $100 deposit & 6% interest compounded annually. ;-)",
    "instruct_emoticon_and_typo": ":-) Calculat bank accunt money w/ $100 depoit & 6% intrset compounded anually. :-(",
    "instruct_emoticon_and_typo_and_missing_bracket": ":-) Calculat bank accunt money w/ $100 depoit & 6% intrset compounded anually.",
    "instruct_emoticon_and_typo_and_missing_quote": ":-) Calculat bank accunt money w/ $100 depoit & 6% intrset compounded anually. :-(",
    "instruct_helpful_markdown_structure": "# Calculation Task\n*   Calculate the amount of money\n*   In a bank account\n*   Initial deposit: $100\n*   Interest rate: 6%\n*   Compounding: Annually",
    "instruct_helpful_meaning_reinforing_characters": "Calculate the amount of money($) in a bank account with an initial $100 deposit(+) and an interest rate of 6%(%), compounded annually(📈).",
    "instruct_html_tags": "<b>Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually</b>",
    "instruct_kaomoji": "(^_^) Calculate bank account money with $100 deposit & 6% interest compounded annually. (^o^)",
    "instruct_kaomoji_and_typo": "(^_^;) Calculat bank accunt money with $100 depoit & 6% intrset compounded anually. (;_;)",
    "instruct_markdown_bold": "**Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually**",
    "instruct_markdown_bold_and_italic": "***Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually***",
    "instruct_markdown_italic": "*Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually*",
    "instruct_qr_ascii": "Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually.\n[ ][ ][ ][ ][ ][ ][ ][ ][ ]\n[ ][][ ][ ][ ][ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ][ ][ ][ ][ ]\n[ ][][ ][ ][ ][ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ][ ][ ][ ][ ]\n[ ][][ ][ ][ ][ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ][ ][ ][ ][ ]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Calculat the amount\nfo moneey in a bnak\naccunt wit an initil $100\ndepoit nad an intreset\nrate of 6%, compunded\nanually.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Calculat the amount\nfo moneey in a bnak\naccunt wit an initil $100\ndepoit nad an intreset\nrate of 6%, compunded\nanually.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Calculat the amount.\nfo moneey in a bnak:\naccunt wit an initil $100,\ndepoit nad an intreset/\nrate of 6% compunded_\nanually.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Calculat  the  amount.\nfo  moneey  in  a  bnak:\naccunt  wit  an  initil  $100,\ndepoit  nad  an  intreset/\nrate  of  6%  compunded_\nanually.",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Calculat the amount\nfo moneey in a bnak\naccunt wit an initil $100\ndepoit nad an intreset\nrate of 6%, compunded\nanually.",
    "instruct_several_html_tags": "<div><span><b><i>Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually</i></b></span></div>",
    "instruct_spoiler_bars": "||Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually||",
    "instruct_with_inbetween_gzip_b64_blob": "Calculate the amount of money in a bank account with an initial $100 deposit and an interest rate of 6%, compounded annually. <!-- blob:H4sIAAAAAAAACg== -->",
    "instruct_zalgo": "C̴a̵l̴c̴u̴l̵a̴t̷e̷ ̵t̷h̸e̵ ̶a̵m̸o̴u̴n̶t̸ ̸o̶f̴ ̸m̴o̸n̶e̷y̶ ̶i̵n̸ ̸a̵ ̶b̷a̸n̴k̸ ̷a̶c̵c̴o̸u̴n̴t̷ ̷w̴i̸t̵h̴ ̶a̷n̶ ̸i̴n̵i̵t̵i̷a̸l̷ ̴$̷1̴0̸0̴ ̴d̸e̵p̸o̷s̵i̷t̶ ̷a̷n̵d̵ ̸a̷n̷ ̸i̶n̴t̶e̶r̵e̷s̵t̶ ̷r̴a̵t̴e̵ ̷o̵f̷ ̶6̴%̸,̵ ̵c̷o̵m̵p̸o̷u̴n̴d̵e̷d̷ ̸a̷n̴n̴u̵a̸l̸l̷y̵.",
    "instruct_zero_width": "C\nas\nl\ncu\nla\nte\n \nt\nhe\n \nam\nou\nnt\n \nof\n \nmo\nne\ny\n \nin\n \na\n \nba\nnk\n \nac\nco\nu\nnt\n \nwi\nth\n \nan\n \nin\nit\nial\n \n$1\n0\n0\n \nde\npo\ns\nit\n \nan\nd\n \nan\n \nin\nte\nre\nst\n \nra\nte\n \nof\n \n6\n%\n,\n \nco\nm\npo\nund\ned\n \nan\nn\nu\nal\nly\n.",
    "instruct_zero_width_and_typo": "C\nas\nl\ncu\nl\nat\n \nt\nhe\n \nam\nou\nnt\n \nof\n \nm\no\nne\ne\ny\n \nin\n \na\n \nb\nna\nk\n \na\ncc\nu\nnt\n \nw\nit\n \na\nn\n \ni\nni\nti\nl\n \n$1\n0\n0\n \nd\ne\npo\ni\nt\n \na\nnd\n \na\nn\n \ni\nn\nt\nr\ne\nse\nt\n \nr\na\nte\n \no\nf\n \n6\n%\n,\n \nc\nom\np\nu\nn\nd\ne\nd\n \na\nnu\na\nlly\n.",
    "output": "At the end of year 1, the amount in the bank account would be $106. In year 2, the amount would be $112.36 and at the end of the 10th year, the amount would be $160.54. This illustrates the power of compound interest.",
    "prompt_id": "70f596f5-9e6b-45f0-9b30-17f19a347af4"
  },
  {
    "prompt_count": 160,
    "instruction_original": "Give me a detailed overview of the framework of a web service.",
    "input": "",
    "instruct_all_caps_and_typo": "GIVE ME A DETAILED OVEVIEW OF THE FRAMWORK OF A WEB SERVICE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "(GIVE ME A DETAILED OVEVIEW OF THE FRAMWORK OF A WEB SERVICE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"(GIVE ME A DETAILED OVEVIEW OF THE FRAMWORK OF A WEB SERVICE.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"GIVE ME A DETAILED OVEVIEW OF THE FRAMWORK OF A WEB SERVICE.",
    "instruct_code_fence": "```Give me a detailed overview of the framework of a web service.```",
    "instruct_confusable_unicode": "Givе mе a dеtailеd ovеrviеw оf thе framеwоrk оf a wеb sеrvicе.",
    "instruct_confusable_unicode_and_typo": "Givе mе a dеtailеd ovеviеw оf thе framwоrk оf a wеb sеrvicе.",
    "instruct_emoji": "Give me a detailed overview ✨ of the framework 🏗️ of a web service 🌐.",
    "instruct_emoji_and_typo": "Give me a detailed oveview ✨ of the framwork 🏗️ of a web service 🌐.",
    "instruct_emoji_and_typo_and_missing_bracket": "(Give me a detailed oveview ✨ of the framwork 🏗️ of a web service 🌐.",
    "instruct_emoji_and_typo_and_missing_quote": "\"Give me a detailed oveview ✨ of the framwork 🏗️ of a web service 🌐.",
    "instruct_emoticon": "Give me a detailed overview :) of the framework ;) of a web service :D.",
    "instruct_emoticon_and_typo": "Give me a detailed oveview :) of the framwork ;) of a web service :D.",
    "instruct_emoticon_and_typo_and_missing_bracket": "(Give me a detailed oveview :) of the framwork ;) of a web service :D.",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Give me a detailed oveview :) of the framwork ;) of a web service :D.",
    "instruct_helpful_markdown_structure": "- Give me a detailed overview:\n- framework of a web service.",
    "instruct_helpful_meaning_reinforing_characters": "-> Give me a detailed overview! - of the framework of a web service.",
    "instruct_html_tags": "<p>Give me a detailed overview of the framework of a web service.</p>",
    "instruct_kaomoji": "Give me a detailed overview (^_^;) of the framework (*_*) of a web service (^o^).",
    "instruct_kaomoji_and_typo": "Give me a detailed oveview (^_^;) of the framwork (*_*) of a web service (^o^).",
    "instruct_markdown_bold": "**Give me a detailed overview of the framework of a web service.**",
    "instruct_markdown_bold_and_italic": "**_Give me a detailed overview of the framework of a web service._**",
    "instruct_markdown_italic": "_Give me a detailed overview of the framework of a web service._",
    "instruct_qr_ascii": "[QR ASCII REPRESENTATION: Give me a detailed overview of the framework of a web service.]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "(Give me a detailed\noveview of the framwork\nof a web service.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "\"(Give me a detailed\noveview of the framwork\nof a web service.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "\"(Give me, a detailed;\noveview of the framwork!\nof a web service?.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "\"( Give  me , a detailed ;\noveview   of the framwork !\nof a web service ? .",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"Give me a detailed\noveview of the framwork\nof a web service.",
    "instruct_several_html_tags": "<div><h1>Overview</h1><p>Give me a detailed overview of the framework of a web service.</p></div>",
    "instruct_spoiler_bars": "||Give me a detailed overview of the framework of a web service.||",
    "instruct_with_inbetween_gzip_b64_blob": "Give me a detailed overview [GZIP_B64_BLOB] of the framework of a web service.",
    "instruct_zalgo": "G̸i̵v̷e̴ ̷m̸e̴ ̷a̴ ̵d̷e̵t̴a̸i̶l̸e̶d̷ ̵o̵v̴e̸r̴v̷i̸e̷w̸ ̵o̷f̵ ̵t̶h̸e̷ ̷f̴r̸a̶m̶e̷w̵o̴r̶k̷ ̵o̵f̷ ̵a̸ ̷w̵e̴b̸ ̸s̷e̸r̵v̷i̷c̶e̷.",
    "instruct_zero_width": "G\b\bi\b\bv\b\be\b\b \b\bm\b\be\b\b \b\ba\b\b \b\bd\b\be\b\bt\b\ba\b\bi\b\bl\b\be\b\bd\b\b \b\bo\b\bv\b\be\b\br\b\bv\b\bi\b\be\b\bw\b\b \b\bo\b\bf\b\b \b\bt\b\bh\b\be\b\b \b\bf\b\br\b\ba\b\bm\b\be\b\bw\b\bo\b\br\b\bk\b\b \b\bo\b\bf\b\b \b\ba\b\b \b\bw\b\be\b\bb\b\b \b\bs\b\be\b\br\b\bv\b\bi\b\bc\b\be\b\b.",
    "instruct_zero_width_and_typo": "G\b\bi\b\bv\b\be\b\b \b\bm\b\be\b\b \b\ba\b\b \b\bd\b\be\b\bt\b\ba\b\bi\b\bl\b\be\b\bd\b\b \b\bo\b\bv\b\be\b\bv\b\bi\b\be\b\bw\b\b \b\bo\b\bf\b\b \b\bt\b\bh\b\be\b\b \b\bf\b\br\b\ba\b\bm\b\bw\b\bo\b\br\b\bk\b\b \b\bo\b\bf\b\b \b\ba\b\b \b\bw\b\be\b\bb\b\b \b\bs\b\be\b\br\b\bv\b\bi\b\bc\b\be\b\b.",
    "output": "A web service should be composed of several components: a client application, a set of API (application programming interface) to interact with the client, a database to store data, a server to run the service, and a client-side application to process requests. The API should be designed with RESTful architecture and the server should be built with a language like Python or Ruby. The database should be tailored to the data that needs to be stored, and the client-side application should handle the response from the API. Additionally, for security purposes, certain requests should be encrypted or secured using authentication mechanisms.",
    "prompt_id": "1c9774b0-c088-460d-a175-b3e470c8d444"
  },
  {
    "prompt_count": 161,
    "instruction_original": "Create a timeline describing the history of the internet",
    "input": "",
    "instruct_all_caps_and_typo": "CRATE A TIMELIEN DSCRIBING THE HISTRY OF THE INTERNET",
    "instruct_all_caps_and_typo_and_missing_bracket": "CRATE A TIMELIEN DSCRIBING THE HISTRY OF THE INTERNET",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CRATE A TIMELIEN DSCRIBING THE HISTRY OF THE INTERNET",
    "instruct_all_caps_and_typo_and_missing_quote": "CRATE A TIMELIEN DSCRIBING THE HISTRY OF THE INTERNET",
    "instruct_code_fence": "``` Create a timeline describing the history of the internet ```",
    "instruct_confusable_unicode": "Crеatе a timеlinе dеscribing thе history of thе intеrnеt.",
    "instruct_confusable_unicode_and_typo": "Crеatе a timеliеn dеscribing thе history of thе intеrnеt.",
    "instruct_emoji": "Create a timeline describing the history of the internet 🕰️🌐📜",
    "instruct_emoji_and_typo": "Crate a timelien 🕰️🌐📜 dscribing teh hisry of teh internet",
    "instruct_emoji_and_typo_and_missing_bracket": "Crate a timelien 🕰️🌐📜 dscribing teh hisry of teh internet",
    "instruct_emoji_and_typo_and_missing_quote": "Crate a timelien 🕰️🌐📜 dscribing teh hisry of teh internet",
    "instruct_emoticon": "Create a timeline describing the history of the internet :)",
    "instruct_emoticon_and_typo": "Crate a timelien dscribing teh hisry of teh internet :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Crate a timelien dscribing teh hisry of teh internet :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Crate a timelien dscribing teh hisry of teh internet :)",
    "instruct_helpful_markdown_structure": "# Internet History Timeline Create a timeline describing the history of the internet.",
    "instruct_helpful_meaning_reinforing_characters": "***Create*** a timeline describing the *history* of the internet!",
    "instruct_html_tags": "<p>Create a timeline describing the history of the internet</p>",
    "instruct_kaomoji": "Create a timeline describing the history of the internet (・ω・)b",
    "instruct_kaomoji_and_typo": "Crate a timelien dscribing teh hisry of teh internet (・ω・)b",
    "instruct_markdown_bold": "**Create a timeline describing the history of the internet**",
    "instruct_markdown_bold_and_italic": "***Create a timeline describing the history of the internet***",
    "instruct_markdown_italic": "*Create a timeline describing the history of the internet*",
    "instruct_qr_ascii": "[ASCII QR Placeholder]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Crate a timelien\ndscribing teh hisry\nof teh internet",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Crate a timelien\ndscribing teh hisry\nof teh internet",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Crate a timelien.\ndscribing teh hisry?\nof teh internet!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Crate a timelien .\ndscribing teh hisry ?\nof teh internet !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Crate a timelien\ndscribing teh hisry\nof teh internet",
    "instruct_several_html_tags": "<div><h1>Create a timeline</h1><p>describing the history of the internet</p></div>",
    "instruct_spoiler_bars": "||Create a timeline describing the history of the internet||",
    "instruct_with_inbetween_gzip_b64_blob": "Create a timeline [H4sIAAAAAAAAA0vOSMxLVYlPU0hLzE1VUPBPN49LTC7NLC5NTM4szsnJTE4FUHAAM/084iIAAAA=] describing the history of the internet",
    "instruct_zalgo": "C̸r̸e̸a̸t̸e̸ ̸a̸ ̸t̸i̸m̸e̸l̸i̸n̸e̸ ̸d̸e̸s̸c̸r̸i̸b̸i̸n̸g̸ ̸t̸h̸e̸ ̸h̸i̸s̸t̸o̸r̸y̸ ̸o̸f̸ ̸t̸h̸e̸ ̸i̸n̸t̸e̸r̸n̸e̸t̸",
    "instruct_zero_width": "Create a\b\b\b\b\b\b\b\b\b\b\b timeline\b\b\b\b\b\b\b\b\b\b\b\b describing\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b the\b\b\b\b history\b\b\b\b\b\b\b\b of\b\b\b the\b\b\b\b internet\b\b\b\b\b\b\b\b\b.",
    "instruct_zero_width_and_typo": "Crate\b\b\b\b\b\b a\b\b\b timelien\b\b\b\b\b\b\b\b\b describing\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b the\b\b\b\b hisry\b\b\b\b\b\b of\b\b\b the\b\b\b\b internet\b\b\b\b\b\b\b\b\b.",
    "output": "1968: ARPANET, the first internet network, is created.\n 1973: TCP/IP is created, allowing computers to communicate with each other.\n 1983: DNS is created to simplify the communication process. \n 1989: The World Wide Web is created, giving birth to the public internet.\n 1995: JavaScript is developed, introducing dynamic content to the web.\n 2001: Wikipedia is launched, providing an online encyclopedia.\n 2004: Facebook is launched, growing quickly to 1 billion users.\n 2007: Apple introduces the iPhone, making mobile devices commonplace.\n 2009: Cloud computing begins to revolutionize data storage. \n 2011: HTML5 is released, encouraging richer web experiences.\n 2013: The Internet of Things (IoT) emerges, connecting dozens of durable devices. \n 2015: \"Voice first\" technology, such as Amazon's Alexa, launches.\n 2018: 5G networks begin rolling out, allowing for faster connection speeds.\n 2020: AI begins to be used to power home assistants like Alexa.",
    "prompt_id": "88e66dcd-b86f-4d8b-9f5d-9d550aca4394"
  },
  {
    "prompt_count": 162,
    "instruction_original": "Paraphrase the following sentence",
    "input": "The scientists conducted a rigorous experiment",
    "instruct_all_caps_and_typo": "PARAPHRAZE TH FOLLLOING SENTENCE",
    "instruct_all_caps_and_typo_and_missing_bracket": "PARAPHRAZE TH FOLLLOING SENTENCE",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "PARAPHRAZE TH FOLLLOING SENTENCE",
    "instruct_all_caps_and_typo_and_missing_quote": "PARAPHRAZE TH FOLLLOING SENTENCE",
    "instruct_code_fence": "```Paraphrase the following sentence```",
    "instruct_confusable_unicode": "ᑭarαp𝓱rαse t𝓱e follσwiͦng senƭence",
    "instruct_confusable_unicode_and_typo": "ᑭarαp𝓱rαse t𝓱e follσwiͦng senƭencee",
    "instruct_emoji": "✨ Paraphrase the following sentence ✨✍️",
    "instruct_emoji_and_typo": "✨ Paraphraze the following sentence ✨✍️",
    "instruct_emoji_and_typo_and_missing_bracket": "✨ Paraphraze the following sentence ✨✍️",
    "instruct_emoji_and_typo_and_missing_quote": "✨ Paraphraze the following sentence ✨✍️",
    "instruct_emoticon": "Paraphrase the following sentence :)",
    "instruct_emoticon_and_typo": "Paraphraze the following sentence :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Paraphraze the following sentence :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Paraphraze the following sentence :)",
    "instruct_helpful_markdown_structure": "- Paraphrase the following sentence",
    "instruct_helpful_meaning_reinforing_characters": "Paraphrase the following sentence!!!",
    "instruct_html_tags": "<p>Paraphrase the following sentence</p>",
    "instruct_kaomoji": "Paraphrase the following sentence (^_-)-☆",
    "instruct_kaomoji_and_typo": "Paraphraze the following sentence (^_-)-☆",
    "instruct_markdown_bold": "**Paraphrase the following sentence**",
    "instruct_markdown_bold_and_italic": "**_Paraphrase the following sentence_**",
    "instruct_markdown_italic": "*Paraphrase the following sentence*",
    "instruct_qr_ascii": "██████████████████\n█ ▄▄▄ █ ▄▄▄█▄ ▄ █\n█ █ █ █ ▄ █ █ █ █\n█ ▄▄▄ █ ▄██▄█ █▄█\n█████▄███ █ █ █\n█ ▄ █▄▄ █ ▄ █ █\n█ ▄ █ █ █ █ █▀█\n█ ▄ █▄█ █ █ █ █▄\n██████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Paraphraze the\nfo\nllowing\nsentence",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Paraphraze the\nfo\nllowing\nsentence",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Paraphraze the\nfo\nllowing\nsentence?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Paraphraze the\nfo\nllowing\nsentence? ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Paraphraze the\nfo\nllowing\nsentence",
    "instruct_several_html_tags": "<div><p><span>Paraphrase the following sentence</span></p></div>",
    "instruct_spoiler_bars": "||Paraphrase the following sentence||",
    "instruct_with_inbetween_gzip_b64_blob": "Paraphrase the following [H4sICAAAAAAAA0sptvBwAgAC+3D3DQAAAA==] sentence",
    "instruct_zalgo": "P̸a̷r̸a̸p̴h̸r̶a̴s̴e̴ t̵h̸e̸ f̸o̵l̷l̴o̷w̵i̸n̸g̷ s̵e̷n̸t̶e̷n̷c̶e̵",
    "instruct_zero_width": "P\b\br\b\ba\b\bp\b\bh\b\br\b\ba\b\bs\b\be\b\b \b\bt\b\bh\b\be\b\b \b\bf\b\bo\b\bl\b\bl\b\bo\b\bw\b\bi\b\bn\b\bg\b\b \b\bs\b\be\b\bn\b\bt\b\be\b\bn\b\bc\b\be",
    "instruct_zero_width_and_typo": "P\b\ba\b\br\b\ba\b\bp\b\bh\b\br\b\ba\b\bs\b\be\b\b \b\bt\b\bh\b\be\b\b \b\bf\b\bo\b\bl\b\bl\b\bo\b\bw\b\bi\b\bn\b\bg\b\b \b\bs\b\be\b\bn\b\bt\b\be\b\bn\b\bc\b\bee",
    "output": "The scientists ran a thorough experiment.",
    "prompt_id": "3f554471-694d-47f6-8285-9177510c743e"
  },
  {
    "prompt_count": 163,
    "instruction_original": "Develop a web-based application that does the following",
    "input": "Sorts images according to category",
    "instruct_all_caps_and_typo": "DEVELOP A WEB-BASED APLICATION THAT DOES THE FOLLOWING",
    "instruct_all_caps_and_typo_and_missing_bracket": "DEVELOP A WEB-BASED APLICATION THAT DOES THE FOLLOWING",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "DEVELOP A WEB-BASED APLICATION THAT DOES THE FOLLOWING",
    "instruct_all_caps_and_typo_and_missing_quote": "DEVELOP A WEB-BASED APLICATION THAT DOES THE FOLLOWING",
    "instruct_code_fence": "```\nDevelop a web-based application that does the following\n```",
    "instruct_confusable_unicode": "Dеvеlοp a wеb-basеd applicatiοn that dοеs thе fοllοwing",
    "instruct_confusable_unicode_and_typo": "Dеvеlοp a wеb-basеd applicatiοn that dοеs thе fοllοwing (typo: applicatiοn)",
    "instruct_emoji": "🛠️ Develop a web-based application 🌐 that does the following 👇",
    "instruct_emoji_and_typo": "🛠️ Develop a web-based appication 🌐 that does the following 👇 (typo: appication)",
    "instruct_emoji_and_typo_and_missing_bracket": "🛠️ Develop a web-based appication 🌐 that does the following 👇 (typo: appication)",
    "instruct_emoji_and_typo_and_missing_quote": "🛠️ Develop a web-based appication 🌐 that does the following 👇 (typo: appication)",
    "instruct_emoticon": "Develop a web-based application :) that does the following :D",
    "instruct_emoticon_and_typo": "Develop a web-based appication :) that does the following :D (typo: appication)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Develop a web-based appication :) that does the following :D (typo: appication)",
    "instruct_emoticon_and_typo_and_missing_quote": "Develop a web-based appication :) that does the following :D (typo: appication)",
    "instruct_helpful_markdown_structure": "# Web Application Development\n\nDevelop a web-based application that does the following:",
    "instruct_helpful_meaning_reinforing_characters": ">>> Develop a web-based application 🌐 that does the following 👇 <<<",
    "instruct_html_tags": "<p>Develop a web-based application that does the following</p>",
    "instruct_kaomoji": "Develop a web-based application (✿◕‿◕✿) that does the following (⌒▽⌒)",
    "instruct_kaomoji_and_typo": "Develop a web-based appication (✿◕‿◕✿) that does the following (⌒▽⌒) (typo: appication)",
    "instruct_markdown_bold": "**Develop a web-based application that does the following**",
    "instruct_markdown_bold_and_italic": "***Develop a web-based application that does the following***",
    "instruct_markdown_italic": "*Develop a web-based application that does the following*",
    "instruct_qr_ascii": "███████████████████\n█ ▄▄▄ █ ▄▀ █ ▄▄▄ █\n█ █▀▀▄█▄█▄▀█ █▀▀▄█\n█ █▄▄▀█▀▄█ █ █▄▄▀█\n█▄▄▄▄▄█▄█▄█▄█▄▄▄▄▄█\n█ ▄▀▄▀██▄▀▄ █▀▀▀▄█\n█ ▄▀ █ ▀ █▄█▄▄█ █\n█ ▀█ █▀▄▀▄▀▄█ █ █\n█▄█▄█▄▄▀▄█▄▄▄█▄█▄█\n███████████████████\nDevelop a web-based application that does the following",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Develop a\nweb-based\nappication\nthat does the following",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Develop a\nweb-based\nappication\nthat does the following",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Develop a\nweb-based,\nappication\nthat does the following!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Develop  a\nweb-based,\nappication\nthat does the following !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Develop a\nweb-based\nappication\nthat does the following",
    "instruct_several_html_tags": "<div><p><span>Develop a web-based application that does the following</span></p></div>",
    "instruct_spoiler_bars": "||Develop a web-based application that does the following||",
    "instruct_with_inbetween_gzip_b64_blob": "Develop a web-based application H4sIAAAAAAAA/0tPLclJzEwpTS7JzFGyUlAoycxJBQCK/hR5DQAAAA== that does the following",
    "instruct_zalgo": "D̴͆e̴̽v̶̅ė̴l̸̚ȯ̷p̸̚ ̵̀â̷ ̶͊ẁ̵ē̴b̶̋-̷̉b̵͝a̷͋s̶̑e̵̐d̵̛ ̷̀a̸͝p̴̀ṕ̵l̷̂i̷͘c̸̀ȃ̵t̴̚i̸̎o̵͝n̴͑ ̴̆t̴̑ḧ̶́a̵̓t̶͝ ̴̆d̴͠o̴̔e̵̍s̷̄ ̷̂t̶̂h̵̃ẽ̷ ̷̉f̴́o̸̽l̵̍l̸̈́o̴̍ẃ̸i̷͝n̸̒g̸͌",
    "instruct_zero_width": "D​e​v​e​l​o​p​ ​a​ ​w​e​b​-​b​a​s​e​d​ ​a​p​p​l​i​c​a​t​i​o​n​ ​t​h​a​t​ ​d​o​e​s​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g",
    "instruct_zero_width_and_typo": "D​e​v​e​l​o​p​ ​a​ ​w​e​b​-​b​a​s​e​d​ ​a​p​p​i​c​a​t​i​o​n​ ​t​h​a​t​ ​d​o​e​s​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​(​t​y​p​o​:​ ​a​p​p​i​c​a​t​i​o​n​)",
    "output": "This web-based application should use a database to store the images and associated categorization information. The application should allow users to upload images and assign tags to them. Additionally, there should be an interface which provides the ability to search and filter the images by tags. Lastly, the application should use computer vision techniques, like object detection and image classification, to sort the images into categories.",
    "prompt_id": "ef5fd344-14fc-4ef7-b9f7-2c1550a110b6"
  },
  {
    "prompt_count": 164,
    "instruction_original": "Describe the pros and cons of the following policy",
    "input": "Providing free college education",
    "instruct_all_caps_and_typo": "DESCRIBE THE PROS AND CONS OF THE FOLLWOING POLICY",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESCRIBE THE PROS AND CONS OF THE FOLLWOING POLICY [POLICY]",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "DESCRIBE THE PROS AND CONS OF THE FOLLWOING \"POLICY [POLICY]",
    "instruct_all_caps_and_typo_and_missing_quote": "DESCRIBE THE PROS AND CONS OF THE FOLLWOING \"POLICY",
    "instruct_code_fence": "```Describe the pros and cons of the following policy```",
    "instruct_confusable_unicode": "𝐃𝐞𝐬𝐜𝐫𝐢𝐛𝐞 𝐭𝐡𝐞 𝐩𝐫𝐨𝐬 𝐚𝐧𝐝 𝐜𝐨𝐧𝐬 𝐨𝐟 𝐭𝐡𝐞 𝐟𝐨𝐥𝐥𝐨𝐰𝐢𝐧𝐠 𝐩𝐨𝐥𝐢𝐜𝐲",
    "instruct_confusable_unicode_and_typo": "𝐃𝐞𝐬𝐜𝐫𝐢𝐛𝐞 𝐭𝐡𝐞 𝐩𝐫𝐨𝐬 𝐚𝐧𝐝 𝐜𝐨𝐧𝐬 𝐨𝐟 𝐭𝐡𝐞 𝐟𝐨𝐥𝐥𝐰𝐨𝐢𝐧𝐠 𝐩𝐨𝐥𝐢𝐜𝐲",
    "instruct_emoji": "🤔📝⚖️👍👎📜",
    "instruct_emoji_and_typo": "🤔📝⚖️👍👎📜 polcy",
    "instruct_emoji_and_typo_and_missing_bracket": "🤔📝⚖️👍👎📜 polcy [POLICY]",
    "instruct_emoji_and_typo_and_missing_quote": "🤔📝⚖️👍👎📜 \"polcy",
    "instruct_emoticon": "Describe the pros and cons of the following policy :) :(",
    "instruct_emoticon_and_typo": "Describe the pros and cons of the follwoing policy :) :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Describe the pros and cons of the follwoing policy [POLICY] :) :(",
    "instruct_emoticon_and_typo_and_missing_quote": "Describe the pros and cons of the follwoing \"policy :) :(",
    "instruct_helpful_markdown_structure": "# Policy Analysis\nDescribe the pros and cons of the following policy:\n* Pros\n* Cons",
    "instruct_helpful_meaning_reinforing_characters": "Describe the pros (+) and cons (-) of the following policy 📜✨",
    "instruct_html_tags": "<p>Describe the pros and cons of the following policy</p>",
    "instruct_kaomoji": "Describe the pros and cons of the following policy (´･ω･`)b",
    "instruct_kaomoji_and_typo": "Describe the pros and cons of the follwoing policy (´･ω･`)b",
    "instruct_markdown_bold": "**Describe the pros and cons of the following policy**",
    "instruct_markdown_bold_and_italic": "***Describe the pros and cons of the following policy***",
    "instruct_markdown_italic": "*Describe the pros and cons of the following policy*",
    "instruct_qr_ascii": "Describe the pros and cons of the following policy (see QR)",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Describe the pros\nand cons\nof the follwoing\npolicy [POLICY]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Describe the pros\nand cons\nof the follwoing\n\"policy [POLICY]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Describe the pros.\nand cons,\nof the follwoing:\n\"policy [POLICY]?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Describe the pros .\nand cons ,\nof the follwoing :\n \"policy [POLICY] ?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Describe the pros\nand cons\nof the follwoing\n\"policy",
    "instruct_several_html_tags": "<div><p><span>Describe the pros and cons of the following policy</span></p></div>",
    "instruct_spoiler_bars": "||Describe the pros and cons of the following policy||",
    "instruct_with_inbetween_gzip_b64_blob": "Describe the pros and cons [H4sIAAAAAAAAA0soLQotAAAAAA==] of the following policy",
    "instruct_zalgo": "D̴e̴s̴c̴r̴i̴b̴e̴ ̴t̴h̴e̴ ̴p̴r̴o̴s̴ ̴a̴n̴d̴ ̴c̴o̴n̴s̴ ̴o̴f̴ ̴t̴h̴e̴ ̴f̴o̴l̴l̴o̴w̴i̴n̴g̴ ̴p̴o̴l̴i̴c̴y",
    "instruct_zero_width": "D\n\ne\n\ns\n\nc\n\nr\n\ni\n\nb\n\ne\n\n \n\nt\n\nh\n\ne\n\n \n\np\n\nr\n\no\n\ns\n\n \n\na\n\nn\n\nd\n\n \n\nc\n\no\n\nn\n\ns\n\n \n\no\n\nf\n\n \n\nt\n\nh\n\ne\n\n \n\nf\n\no\n\nl\n\nl\n\no\n\nw\n\ni\n\nn\n\ng\n\n \n\np\n\no\n\nl\n\ni\n\nc\n\ny",
    "instruct_zero_width_and_typo": "D\n\ne\n\ns\n\nc\n\nr\n\ni\n\nb\n\ne\n\n \n\nt\n\nh\n\ne\n\n \n\np\n\nr\n\no\n\ns\n\n \n\na\n\nn\n\nd\n\n \n\nc\n\no\n\nn\n\ns\n\n \n\no\n\nf\n\n \n\nt\n\nh\n\ne\n\n \n\nf\n\no\n\nl\n\nl\n\nw\n\no\n\ni\n\nn\n\ng\n\n \n\np\n\no\n\nl\n\ni\n\nc\n\ny",
    "output": "The pros of providing free college education include making education more accessible to individuals of all backgrounds, enhancing access to skilled professionals, providing equal opportunity for all, and boosting the economy. On the other hand, the drawbacks could include an increase in taxation and a greater burden on the government, an excessive influx of graduates in certain professions, a decrease in the quality of education, and an increased risk of overcrowding in certain universities.",
    "prompt_id": "fc77c2ac-707e-4abf-a129-ae8ab01c7351"
  },
  {
    "prompt_count": 165,
    "instruction_original": "Design a post for a social media account to promote the following product",
    "input": "Fresh fruit smoothie",
    "instruct_all_caps_and_typo": "DESIGN A PUST FOF A SOCAL MEDAI ACCOUNNT TO PROMOTE TEH FOLOWING PRDUCT",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESIGN A PUST FO A SOCCIAL MEDA ACCOUTN TO PROMTE TEH FOLLWING PRDUKT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "DESIGN A PUST FO A SOCCIAL MEDA ACCOUTN TO PROMTE TH FOLLWING PRDUC",
    "instruct_all_caps_and_typo_and_missing_quote": "DESIGN A PUST FO A SOCCIAL MEDA ACCOUTN TO PROMTE TH FOLLWING PRDUKT",
    "instruct_code_fence": "```Design a post for a social media account to promote the following product```",
    "instruct_confusable_unicode": "𝙳𝚎𝚜𝚒𝚐𝚗 𝚊 𝚙𝚘𝚜𝚝 𝚏𝚘𝚛 𝚊 𝚜𝚘𝚌𝚒𝚊𝚕 𝚖𝚎𝚍𝚒𝚊 𝚊𝚌𝚌𝚘𝚞𝚗𝚝 𝚝𝚘 𝚙𝚛𝚘𝚖𝚘𝚝𝚎 𝚝𝚑𝚎 𝚏𝚘𝚕𝚕𝚘𝚠𝚒𝚗𝚐 𝚙𝚛𝚘𝚍𝚞𝚌𝚝",
    "instruct_confusable_unicode_and_typo": "𝙳𝚎𝚜𝚒𝚐𝚗 𝚊 𝚙𝚘𝚜𝚝 𝚏𝚘𝚛 𝚊 𝚜𝚘𝚌𝚊𝚕 𝚖𝚎𝚍𝚊𝚒 𝚊𝚌𝚌𝚘𝚞𝚗𝚝 𝚝𝚘 𝚙𝚛𝚘𝚖𝚘𝚝𝚎 𝚝𝚎𝚑 𝚏𝚘𝚕𝚕𝚘𝚠𝚒𝚗𝚐 𝚙𝚛𝚘𝚍𝚞𝚌𝚝",
    "instruct_emoji": "🎨📱📢 Design a post for a social media account to promote the following product 🛍️✨",
    "instruct_emoji_and_typo": "🎨📱📢 DESIN A POST 🛍️ FO A SOCAL ACCOUNNT ✨ TO PROMOTE TEH FOLOWING PRDUCT",
    "instruct_emoji_and_typo_and_missing_bracket": "🎨📱📢 DESIN A POST 🛍️ FO A SOCCIAL ACCUTN ✨ TO PROMTE TH FOLLWING PRDUKT",
    "instruct_emoji_and_typo_and_missing_quote": "🎨📱📢 DESIN A POST 🛍️ FO A SOCCIAL ACCUTN ✨ TO PROMTE TH FOLLWING PRDUKT",
    "instruct_emoticon": ":) Design a post for a social media account to promote the following product :D",
    "instruct_emoticon_and_typo": ":) DESIN A POST :( FO A SOCAL ACCOUNNT :D TO PROMOTE TEH FOLOWING PRDUCT ;)",
    "instruct_emoticon_and_typo_and_missing_bracket": ":) DESIN A POST :( FO A SOCCIAL ACCUTN :D TO PROMTE TH FOLLWING PRDUKT ;)",
    "instruct_emoticon_and_typo_and_missing_quote": ":) DESIN A POST :( FO A SOCCIAL ACCUTN :D TO PROMTE TH FOLLWING PRDUKT ;)",
    "instruct_helpful_markdown_structure": "# Social Media Post Design\nDesign a post for a social media account to promote the following product.",
    "instruct_helpful_meaning_reinforing_characters": "-> Design a post for a social media account to promote the following product!!!",
    "instruct_html_tags": "<b>Design a post for a social media account to promote the following product</b>",
    "instruct_kaomoji": "(^人^) Design a post for a social media account to promote the following product (*´▽`*)",
    "instruct_kaomoji_and_typo": "(^人^) DESIN A POST ( T_T) FO A SOCAL ACCOUNNT (*´▽`*) TO PROMOTE TEH FOLOWING PRDUCT (^o^)",
    "instruct_markdown_bold": "**Design a post for a social media account to promote the following product**",
    "instruct_markdown_bold_and_italic": "***Design a post for a social media account to promote the following product***",
    "instruct_markdown_italic": "*Design a post for a social media account to promote the following product*",
    "instruct_qr_ascii": "Design a post for a social media account to promote the following product [ASCII QR CODE]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "DESIN A\nPOST FOr A\nSOCAL MEDA\nACCUNT TO\nPROMOT THE\nFOLLOING PRDUTC",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "DESIN A\nPOST FOr A\nSOCAL MEDA\nACCUNT TO\nPROMOTE TH\nFOLLOING PRDUTC",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "DESIN A.\nPOST FOr A,\nSOCAL MEDA;\nACCUNT TO!\nPROMOTE TH?\nFOLLOING PRDUTC:",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "D ESIN  A.\nPOST FOr   A,\nSOCAL  MEDA;\nACCUNT  TO!\nPROMOTE  TH?\nFOLLOING   PRDUTC:",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "DESIN A\nPOST FOr A\nSOCAL MEDA\nACCUNT TO\nPROMOTE TH\nFOLLOING PRDUTC",
    "instruct_several_html_tags": "<div><p><i><b>Design a post for a social media account to promote the following product</b></i></p></div>",
    "instruct_spoiler_bars": "||Design a post for a social media account to promote the following product||",
    "instruct_with_inbetween_gzip_b64_blob": "Design a post for a social media account [BLOB] to promote the following product",
    "instruct_zalgo": "D͓̽e͓̽s͓̽i͓̽g͓̽n͓̽ ͓̽a͓̽ ͓̽p͓̽o͓̽s͓̽t͓̽ ͓̽f͓̽o͓̽r͓̽ ͓̽a͓̽ ͓̽s͓̽o͓̽c͓̽i͓̽a͓̽l͓̽ ͓̽m͓̽e͓̽d͓̽i͓̽a͓̽ ͓̽a͓̽c͓̽c͓̽o͓̽u͓̽n͓̽t͓̽ ͓̽t͓̽o͓̽ ͓̽p͓̽r͓̽o͓̽m͓̽o͓̽t͓̽e͓̽ ͓̽t͓̽h͓̽e͓̽ ͓̽f͓̽o͓̽l͓̽l͓̽o͓̽w͓̽i͓̽n͓̽g͓̽ ͓̽p͓̽r͓̽o͓̽d͓̽u͓̽c͓̽t͓̽",
    "instruct_zero_width": "D​e​s​i​g​n​ ​a​ ​p​o​s​t​ ​f​o​r​ ​a​ ​s​o​c​i​a​l​ ​m​e​d​i​a​ ​a​c​c​o​u​n​t​ ​t​o​ ​p​r​o​m​o​t​e​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​p​r​o​d​u​c​t",
    "instruct_zero_width_and_typo": "D​e​s​i​g​n​ ​a​ ​p​o​s​t​ ​f​o​r​ ​a​ ​s​o​c​a​l​ ​m​e​d​a​i​ ​a​c​c​o​u​n​t​ ​t​o​ ​p​r​o​m​o​t​e​ ​t​e​h​ ​f​o​l​l​o​w​i​n​g​ ​p​r​o​d​u​c​t",
    "output": "Introducing our new and extra refreshing fruit smoothie! Made from only the freshest fruits, this smoothie is a delicious way to stay energized and get your daily dose of nutrients. Get yours today! #smoothie #fruitsmoothie #refreshing",
    "prompt_id": "6706eae4-a5db-4325-a97a-2211d0ed999d"
  },
  {
    "prompt_count": 166,
    "instruction_original": "Summarize the following article",
    "input": "https://www.nytimes.com/2010/07/05/business/global/05phone.html",
    "instruct_all_caps_and_typo": "SUMARIZ THE FOLLWING ARTCLE",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUMARIZ THE FOLLWING ARTCLE_",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"SUMARIZ THE FOLLWING ARTCLE_",
    "instruct_all_caps_and_typo_and_missing_quote": "\"SUMARIZ THE FOLLWING ARTCLE",
    "instruct_code_fence": "```\nSummarize the following article\n```",
    "instruct_confusable_unicode": "Sυmmarize the foΙΙowing artiсΙe",
    "instruct_confusable_unicode_and_typo": "Sυmmarize the foΙΙowing artiсΙe.",
    "instruct_emoji": "Summarize the following article 📝✨📰",
    "instruct_emoji_and_typo": "Sumariz 📝 the follwing arrticl 📰✨",
    "instruct_emoji_and_typo_and_missing_bracket": "Sumariz 📝 the follwing arrticl 📰✨_",
    "instruct_emoji_and_typo_and_missing_quote": "\"Sumariz 📝 the follwing arrticl 📰✨",
    "instruct_emoticon": "Summarize the following article :)",
    "instruct_emoticon_and_typo": "Sumariz the follwing arrticl :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Sumariz the follwing arrticl :)_",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Sumariz the follwing arrticl :)",
    "instruct_helpful_markdown_structure": "# Instruction\n\nSummarize the following article.",
    "instruct_helpful_meaning_reinforing_characters": "👇 Summarize the following article. 👇",
    "instruct_html_tags": "<p>Summarize the following article</p>",
    "instruct_kaomoji": "Summarize the following article (^_^)ノ",
    "instruct_kaomoji_and_typo": "Sumariz the follwing arrticl (^_^)ノ",
    "instruct_markdown_bold": "**Summarize the following article**",
    "instruct_markdown_bold_and_italic": "***Summarize the following article***",
    "instruct_markdown_italic": "*Summarize the following article*",
    "instruct_qr_ascii": "█████████████████████████████\n████ ▄▄▄▄▄ █ ▄█▄ █ ▄▄▄▄▄ ████\n████ █▀▀▀█ █ ▀ █ █ █▀▀▀█ ████\n████ █ ▄▀█ █▄▀▄█ █ █ ▄▀█ ████\n████ ▄▄▄▄▄ █ █ █ █ ▄▄▄▄▄ ████\n████▄▄▄▄▄▄▄█▄█▄█▄█▄▄▄▄▄▄▄████\nSummarize the following article.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "SU\nMARIZ\nTHE FOLLWING\nARTCLE _",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "SU\nMARIZ\nTHE FOLLWING\nARTCLE \"_",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "SU,\nMARIZ;\nTHE. FOLLWING!\nARTCLE_\"?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "SU ,\nMARIZ;\nTHE . FOLLWING!\n\nARTCLE_\"?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "SU\nMARIZ\nTHE FOLLWING\nARTCLE \"",
    "instruct_several_html_tags": "<div><span><p>Summarize the following article</p></span></div>",
    "instruct_spoiler_bars": "||Summarize the following article||",
    "instruct_with_inbetween_gzip_b64_blob": "Summarize the H4sICGhlbGxvCg== following article.",
    "instruct_zalgo": "S̨ųm̨m̨ąr̨įz̨ę t̨h̨ę f̨ǫl̨l̨ǫw̨įn̨g̨ ąr̨t̨įc̨l̨ę",
    "instruct_zero_width": "S​u​m​m​a​r​i​z​e​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​a​r​t​i​c​l​e",
    "instruct_zero_width_and_typo": "S​u​m​m​a​r​i​z​ ​t​h​e​ ​f​o​l​l​w​i​n​g​ ​a​r​t​i​c​l​e",
    "output": "This article discusses mobile phones and their unprecedented influence on different aspects of the global economy. After analyzing data from several countries, the article found that mobile phones have enabled economic growth, improved access to financial services, and created a platform for innovation. Mobile phones have also helped reduce poverty and corruption, and have opened the door for new business models.",
    "prompt_id": "125488e1-34a3-4973-aff9-4fa365a9b86e"
  },
  {
    "prompt_count": 167,
    "instruction_original": "Create a job description for the following role",
    "input": "Data Analytics Consultant",
    "instruct_all_caps_and_typo": "CREAET A JOB DESCRITPION FOR THE FALLOWING ROLE",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAET A JOB DESCRITPION FOR THE FALLOWING ROLE{",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CREAET A JOB DESCRITPION FOR THE FALLOWING ROLE{",
    "instruct_all_caps_and_typo_and_missing_quote": "CREAET A JOB DESCRITPION FOR THE FALLOWING ROLE",
    "instruct_code_fence": "```Create a job description for the following role```",
    "instruct_confusable_unicode": "Crеаtе a jоb dеscrіptіоn fоr thе fоllоwіng rоlе",
    "instruct_confusable_unicode_and_typo": "Crеаеt а jоb dеscrіtріоn fоr thе fаllоwіng rоlе",
    "instruct_emoji": "✍️ Create a job description for the following role ✨",
    "instruct_emoji_and_typo": "✍️ Creaet a job descritpion for the fallowing role ✨",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ Creaet a job descritpion for the fallowing role ✨{",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ Creaet a job descritpion for the fallowing role ✨",
    "instruct_emoticon": "Create a job description for the following role :)",
    "instruct_emoticon_and_typo": "Creaet a job descritpion for the fallowing role :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Creaet a job descritpion for the fallowing role :){",
    "instruct_emoticon_and_typo_and_missing_quote": "Creaet a job descritpion for the fallowing role :)",
    "instruct_helpful_markdown_structure": "**Create a job description** for the *following role*",
    "instruct_helpful_meaning_reinforing_characters": "👉 Create a job description for the following role ✅",
    "instruct_html_tags": "<p>Create a job description for the following role</p>",
    "instruct_kaomoji": "(｡◕‿◕｡) Create a job description for the following role",
    "instruct_kaomoji_and_typo": "(｡◕‿◕｡) Creaet a job descritpion for the fallowing role",
    "instruct_markdown_bold": "**Create a job description for the following role**",
    "instruct_markdown_bold_and_italic": "***Create a job description for the following role***",
    "instruct_markdown_italic": "*Create a job description for the following role*",
    "instruct_qr_ascii": "Create a job description [ASCII_QR_CODE_PLACEHOLDER] for the following role",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Create a job\ndescription for\nthe fallowing role{",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Create a job\ndescription for\nthe fallowing role{",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Create a job,\ndescription for\nthe fallowing role{",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Create a job, \ndescription for\nthe fallowing role{",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Create a job\ndescription for\nthe fallowing role",
    "instruct_several_html_tags": "<div><p><span>Create a job description for the following role</span></p></div>",
    "instruct_spoiler_bars": "||Create a job description for the following role||",
    "instruct_with_inbetween_gzip_b64_blob": "Create a job description [GZIP_B64_BLOB_PLACEHOLDER] for the following role",
    "instruct_zalgo": "C͓̽r͓̽e͓̽a͓̽t͓̽e͓̽ ͓̽a͓̽ ͓̽j͓̽o͓̽b͓̽ ͓̽d͓̽e͓̽s͓̽c͓̽r͓̽i͓̽p͓̽t͓̽i͓̽o͓̽n͓̽ ͓̽f͓̽o͓̽r͓̽ ͓̽t͓̽h͓̽e͓̽ ͓̽f͓̽o͓̽l͓̽l͓̽o͓̽w͓̽i͓̽n͓̽g͓̽ ͓̽r͓̽o͓̽l͓̽e͓̽",
    "instruct_zero_width": "C\b\n\r\t\f r\b\n\r\t\f e\b\n\r\t\f a\b\n\r\t\f t\b\n\r\t\f e\b\n\r\t\f   \b\n\r\t\f a\b\n\r\t\f   \b\n\r\t\f j\b\n\r\t\f o\b\n\r\t\f b\b\n\r\t\f   \b\n\r\t\f d\b\n\r\t\f e\b\n\r\t\f s\b\n\r\t\f c\b\n\r\t\f r\b\n\r\t\f i\b\n\r\t\f p\b\n\r\t\f t\b\n\r\t\f i\b\n\r\t\f o\b\n\r\t\f n\b\n\r\t\f   \b\n\r\t\f f\b\n\r\t\f o\b\n\r\t\f r\b\n\r\t\f   \b\n\r\t\f t\b\n\r\t\f h\b\n\r\t\f e\b\n\r\t\f   \b\n\r\t\f f\b\n\r\t\f o\b\n\r\t\f l\b\n\r\t\f l\b\n\r\t\f o\b\n\r\t\f w\b\n\r\t\f i\b\n\r\t\f n\b\n\r\t\f g\b\n\r\t\f   \b\n\r\t\f r\b\n\r\t\f o\b\n\r\t\f l\b\n\r\t\f e",
    "instruct_zero_width_and_typo": "C\b\n\r\t\f r\b\n\r\t\f e\b\n\r\t\f a\b\n\r\t\f e\b\n\r\t\f t\b\n\r\t\f   \b\n\r\t\f a\b\n\r\t\f   \b\n\r\t\f j\b\n\r\t\f o\b\n\r\t\f b\b\n\r\t\f   \b\n\r\t\f d\b\n\r\t\f e\b\n\r\t\f s\b\n\r\t\f c\b\n\r\t\f r\b\n\r\t\f i\b\n\r\t\f t\b\n\r\t\f p\b\n\r\t\f i\b\n\r\t\f o\b\n\r\t\f n\b\n\r\t\f   \b\n\r\t\f f\b\n\r\t\f o\b\n\r\t\f r\b\n\r\t\f   \b\n\r\t\f t\b\n\r\t\f h\b\n\r\t\f e\b\n\r\t\f   \b\n\r\t\f f\b\n\r\t\f a\b\n\r\t\f l\b\n\r\t\f l\b\n\r\t\f o\b\n\r\t\f w\b\n\r\t\f i\b\n\r\t\f n\b\n\r\t\f g\b\n\r\t\f   \b\n\r\t\f r\b\n\r\t\f o\b\n\r\t\f l\b\n\r\t\f e",
    "output": "We are looking for a data analytics consultant to support our operations. The consultant will develop strategies to understand, interpret, and act on data insights. The consultant should have experience in data visualization and dashboard development, machine learning, and communication of data insights to internal and external stakeholders. The ideal candidate will have excellent problem-solving skills, be detail-oriented, and be able to work confidently with stakeholders of varying levels.",
    "prompt_id": "753da1ff-3881-4f70-a869-60bf23d2bc28"
  },
  {
    "prompt_count": 168,
    "instruction_original": "Identify the correct order for the following commands",
    "input": "pack, prepare, travel",
    "instruct_all_caps_and_typo": "IDENTIFY THE CORREC ORDER FOR THE FOLLOWING COMMANDS",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDENTIFY THE CORREC ORDER FOR THE FOLLOWING COMMANDS [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "IDENTIFY THE CORREC ORDER FOR THE FOLLOWING COMMANDS [\"",
    "instruct_all_caps_and_typo_and_missing_quote": "IDENTIFY THE CORREC ORDER FOR THE FOLLOWING COMMANDS \"",
    "instruct_code_fence": "```Identify the correct order for the following commands```",
    "instruct_confusable_unicode": "Ｉｄｅｎｔｉｆｙ ｔｈｅ ｃｏｒｒｅｃｔ ｏｒｄｅｒ ｆｏｒ ｔｈｅ ｆｏｌｌｏｗｉｎｇ ｃｏｍｍａｎｄｓ",
    "instruct_confusable_unicode_and_typo": "Ｉｄｅｎｔｉｆｙ ｔｈｅ ｃｏｒｒｅｃ ｏｒｄｅｒ ｆｏｒ ｔｈｅ ｆｏｌｌｏｗｉｎｇ ｃｏｍｍａｎｄｓ",
    "instruct_emoji": "Identify the correct order for the following commands ✨👇",
    "instruct_emoji_and_typo": "Identify the correc order for the following commands ✨👇",
    "instruct_emoji_and_typo_and_missing_bracket": "Identify the correc order for the following commands ✨👇 [",
    "instruct_emoji_and_typo_and_missing_quote": "Identify the correc order for the following commands ✨👇 \"",
    "instruct_emoticon": "Identify the correct order for the following commands :)",
    "instruct_emoticon_and_typo": "Identify the correc order for the following commands :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Identify the correc order for the following commands :) [",
    "instruct_emoticon_and_typo_and_missing_quote": "Identify the correc order for the following commands :) \"",
    "instruct_helpful_markdown_structure": "## Task: Identify Order of Commands* Identify the correct order for the following commands",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Identify the correct order for the following commands! ✨",
    "instruct_html_tags": "<p>Identify the correct order for the following commands</p>",
    "instruct_kaomoji": "Identify the correct order for the following commands (ᵔ◡ᵔ)",
    "instruct_kaomoji_and_typo": "Identify the correc order for the following commands (ᵔ◡ᵔ)",
    "instruct_markdown_bold": "**Identify the correct order for the following commands**",
    "instruct_markdown_bold_and_italic": "***Identify the correct order for the following commands***",
    "instruct_markdown_italic": "*Identify the correct order for the following commands*",
    "instruct_qr_ascii": "███ ███ ███ ███ ███ ███ ███ ███ ███ ███ ███ ███\n███ ▄▀▄ █ ▄▀▄ █ ▄▀▄ █ ███ ▀ █▄█ ▄ █▄█ █▄▀ ███\n███ █ █ ▄ ███ ▄▀▄ ▀▄  ▄ █ ▄ █ █ █ █▄▄ ███\n███ ▀▄▀ █▄█ █▄▀ █ █ █▄█ ▄▀▄ █ █ █▀▄ █▄▀ ███\n███ ███ ███ ███ ███ ███ ███ ███ ███ ███ ███ ███\nIdentify the correct order for the following commands",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Identify the correc order\nfor the following commands [",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Identify the correc order\nfor the following commands [\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Identify the correc order,\nfor the following commands [\"?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "  Identify the correc  order ,\n  for the following commands [\" ?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Identify the correc order\nfor the following commands \"",
    "instruct_several_html_tags": "<div><p><span>Identify the correct order for the following commands</span></p></div>",
    "instruct_spoiler_bars": "||Identify the correct order for the following commands||",
    "instruct_with_inbetween_gzip_b64_blob": "Identify H4sIAAAAAAAA/wEAAP//AwBQsyMFAAAA the H4sIAAAAAAAA/wEAAP//AwBQsyMFAAAA correct H4sIAAAAAAAA/wEAAP//AwBQsyMFAAAA order H4sIAAAAAAAA/wEAAP//AwBQsyMFAAAA for H4sIAAAAAAAA/wEAAP//AwBQsyMFAAAA the H4sIAAAAAAAA/wEAAP//AwBQsyMFAAAA following H4sIAAAAAAAA/wEAAP//AwBQsyMFAAAA commands",
    "instruct_zalgo": "I̖d̹e̒n͋ţi͗f̳ẏ ̱t̄ḧ́e͒ ̙ço̚r͝r͏e͛c̎t̀ ̖o̿r̾d̓ër̛ ͍f̃o͏r̽ ͏ẗ́h͐ě ͆f̈o̓l̐l̚ȍw̋i̕n̑g̽ ̄c̎o̒m̒m̾ân̈d̴s̉",
    "instruct_zero_width": "I​d​e​n​t​i​f​y​ ​t​h​e​ ​c​o​r​r​e​c​t​ ​o​r​d​e​r​ ​f​o​r​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​c​o​m​m​a​n​d​s",
    "instruct_zero_width_and_typo": "I​d​e​n​t​i​f​y​ ​t​h​e​ ​c​o​r​r​e​c​ ​o​r​d​e​r​ ​f​o​r​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​c​o​m​m​a​n​d​s",
    "output": "The correct order is: prepare, pack, travel.",
    "prompt_id": "de0e5434-69af-4818-9b6c-bc18a18c2452"
  },
  {
    "prompt_count": 169,
    "instruction_original": "Create a survey question to measure customer satisfaction",
    "input": "",
    "instruct_all_caps_and_typo": "CREAT A SURVEY QUESION TO MEASURE CUSTUMER SATISFACTION",
    "instruct_all_caps_and_typo_and_missing_bracket": "[ CREAT A SURVEY QUESION TO MEASURE CUSTUMER SATISFACTION",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "['CREAT A SURVEY QUESION TO MEASURE CUSTUMER SATISFACTION",
    "instruct_all_caps_and_typo_and_missing_quote": "'CREAT A SURVEY QUESION TO MEASURE CUSTUMER SATISFACTION",
    "instruct_code_fence": "```\nCreate a survey question to measure customer satisfaction\n```",
    "instruct_confusable_unicode": "Créaté å sûrvéy qûéstíôn tô méåśûré çûśtômér śåtíśfåçtíôn",
    "instruct_confusable_unicode_and_typo": "Créat å sûrvéy qûésíôn tô méåśûré çûśtômér śåtíśfåçtíôn",
    "instruct_emoji": "Create a survey question to measure customer satisfaction 😊✨👍",
    "instruct_emoji_and_typo": "Creat a survay quesion to measure custumer satisfaction 😊✨👍",
    "instruct_emoji_and_typo_and_missing_bracket": "[ Creat a survay quesion to measure custumer satisfaction 😊✨👍",
    "instruct_emoji_and_typo_and_missing_quote": "'Creat a survay quesion to measure custumer satisfaction 😊✨👍",
    "instruct_emoticon": "Create a survey question to measure customer satisfaction :)",
    "instruct_emoticon_and_typo": "Creat a survay quesion to measure custumer satisfaction :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "[ Creat a survay quesion to measure customer satisfaction :)",
    "instruct_emoticon_and_typo_and_missing_quote": "'Creat a survay quesion to measure customer satisfaction :)",
    "instruct_helpful_markdown_structure": "- Create a survey question\n- to measure customer satisfaction",
    "instruct_helpful_meaning_reinforing_characters": "Create a survey question --->>> to measure customer satisfaction!!!",
    "instruct_html_tags": "<p>Create a survey question to measure customer satisfaction</p>",
    "instruct_kaomoji": "Create a survey question to measure customer satisfaction (^‿^)",
    "instruct_kaomoji_and_typo": "Creat a survay quesion to measure custumer satisfaction (^‿^)",
    "instruct_markdown_bold": "**Create a survey question to measure customer satisfaction**",
    "instruct_markdown_bold_and_italic": "*_Create a survey question to measure customer satisfaction_*",
    "instruct_markdown_italic": "_Create a survey question to measure customer satisfaction_",
    "instruct_qr_ascii": "._ _. ._ _.\n| _/ | | _/ |\n._._. ._._. ",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Create a\nsurvy\nquesion\nto measure custumer\nsatisfaction[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Create a\nsurvy\nquesion\nto measure custumer\nsatisfaction['",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Create a\nsurvy\nquesion?\nto measure custumer\nsatisfaction['",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Create a\nsurvy\nquesion? \nto measure custumer\nsatisfaction['",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Create a\nsurvy\nquesion\nto measure custumer\nsatisfaction'",
    "instruct_several_html_tags": "<div><p><span>Create a survey question to measure customer satisfaction</span></p></div>",
    "instruct_spoiler_bars": "||Create a survey question to measure customer satisfaction||",
    "instruct_with_inbetween_gzip_b64_blob": "Create a survey question [gzip_b64]H4sIAAAAAAAAA0soLkjVS87PLyjRUSS0UEu0MDAwAgD+Jj+kGAAAAA==[/gzip_b64] to measure customer satisfaction",
    "instruct_zalgo": "C̀r̄e͎a͏t̃e̐ a͌ s̀u͡r̕v̛e͚y̾ q̈u̐ės͏t̒i͂o͆n̋ t̆õ m͏e͏ās̚u̒r͞e̕ c̀u̴s̐t́o͊m̃ȅr̛ s͛a̓t͑ḯs̋ḟȁc͒t̚i̛o͝n",
    "instruct_zero_width": "C​r​e​a​t​e​ ​a​ ​s​u​r​v​e​y​ ​q​u​e​s​t​i​o​n​ ​t​o​ ​m​e​a​s​u​r​e​ ​c​u​s​t​o​m​e​r​ ​s​a​t​i​s​f​a​c​t​i​o​n",
    "instruct_zero_width_and_typo": "C​r​e​a​t​ ​a​ ​s​u​r​v​a​y​ ​q​u​e​s​i​o​n​ ​t​o​ ​m​e​a​s​u​r​e​ ​c​u​s​t​u​m​e​r​ ​s​a​t​i​s​f​a​c​t​i​o​n",
    "output": "On a scale of 1-5, how satisfied are you with our services?",
    "prompt_id": "d557fb1b-1098-4e26-9a36-8bc7b02457f8"
  },
  {
    "prompt_count": 170,
    "instruction_original": "Create a list of 10 different animals",
    "input": "",
    "instruct_all_caps_and_typo": "CREAT A LIST OF 10 DIFFERENT ANIMALS",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAT A LIST OF 10 DIFFERENT ANIMALS",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CREAT A LIST OF 10 DIFFERENT ANIMALS",
    "instruct_all_caps_and_typo_and_missing_quote": "CREAT A LIST OF 10 DIFFERENT ANIMALS",
    "instruct_code_fence": "```Create a list of 10 different animals```",
    "instruct_confusable_unicode": "Crеаtе а lіst оf 10 dіffеrеnt anіmаls",
    "instruct_confusable_unicode_and_typo": "Crеаt а lіst оf 10 dіffеrеnt anіmаls",
    "instruct_emoji": "Create a list of 10 different animals 🐾🐘🦒🐠🦋",
    "instruct_emoji_and_typo": "Creat a list of 10 different animals 🐾🐘",
    "instruct_emoji_and_typo_and_missing_bracket": "Creat a list of 10 different animals 🐾🐘",
    "instruct_emoji_and_typo_and_missing_quote": "Creat a list of 10 different animals 🐾🐘",
    "instruct_emoticon": "Create a list of 10 different animals :D",
    "instruct_emoticon_and_typo": "Creat a list of 10 different animals :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Creat a list of 10 different animals :(",
    "instruct_emoticon_and_typo_and_missing_quote": "Creat a list of 10 different animals :(",
    "instruct_helpful_markdown_structure": "- Create a list of 10 different animals",
    "instruct_helpful_meaning_reinforing_characters": "+ Create a list of 10 different animals +",
    "instruct_html_tags": "<p>Create a list of 10 different animals</p>",
    "instruct_kaomoji": "Create a list of 10 different animals (・ω・)",
    "instruct_kaomoji_and_typo": "Creat a list of 10 different animals (._.)",
    "instruct_markdown_bold": "**Create a list of 10 different animals**",
    "instruct_markdown_bold_and_italic": "***Create a list of 10 different animals***",
    "instruct_markdown_italic": "*Create a list of 10 different animals*",
    "instruct_qr_ascii": "Create a list of 10 different animals\n▄▄▄▄▄▄▄ █ ▄▄▄▄▄ █ ▄ █ ▄▄▄ ▄ █\n█ ▄▄▄ █ █ █▄█ █ █ █ █ █ ▄ █ █\n█ █▄█ █ █▄█ █ █▄█ █ █ █ █ █\n█▄▄▄▄▄▄█ █▄█ █▄▄▄█ █▄█▄█ █▄█",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Create a list \nof 10 diffrent \nanimals",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Create a list \nof 10 diffrent \nanimals",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Create a list \nof 10 diffrent \nanimals?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Create a list  \nof 10 diffrent \nanimals? ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Create a list \nof 10 diffrent \nanimals",
    "instruct_several_html_tags": "<div><span><p><b>Create a list of 10 different animals</b></p></span></div>",
    "instruct_spoiler_bars": "||Create a list of 10 different animals||",
    "instruct_with_inbetween_gzip_b64_blob": "Create a list [gzip_b64_blob] of 10 different animals",
    "instruct_zalgo": "C̀ŕe̋ąt̀e͞ ​á l̐i͒s͞t́ ​õf͌ 1́0̂ ​d̄îf̌f̂e̎r̀èñt́ ​a͝n̈i̋m͝àl̏s",
    "instruct_zero_width": "C​r​e​a​t​e​ ​a​ ​l​i​s​t​ ​o​f​ ​1​0​ ​d​i​f​f​e​r​e​n​t​ ​a​n​i​m​a​l​s",
    "instruct_zero_width_and_typo": "C​r​e​a​t​ ​a​ ​l​i​s​t​ ​o​f​ ​1​0​ ​d​i​f​f​e​r​e​n​t​ ​a​n​i​m​a​l​s",
    "output": "1. Tiger\n2. Elephant\n3. Chimpanzee\n4. Gorilla\n5. Wolf \n6. Fox\n7. Kangaroo\n8. Hedgehog\n9. Porcupine\n10. Beave.",
    "prompt_id": "c40dcb86-09d4-48c2-a7df-880cc6cd64bf"
  },
  {
    "prompt_count": 171,
    "instruction_original": "Suggest a good idea for a family photoshoot.",
    "input": "",
    "instruct_all_caps_and_typo": "SUGGEST A GOOG IDEA FOR A FAMILY PHOTOSHOOT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUGGEST A GOOG IDEA FOR A FAMILY PHOTOSHOOT MISSING BRACKET.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "SUGGEST A GOOG IDEA FOR A FAMILY PHOTOSHOOT MISSING BRACKET AND QUOTE.",
    "instruct_all_caps_and_typo_and_missing_quote": "SUGGEST A GOOG IDEA FOR A FAMILY PHOTOSHOOT MISSING QUOTE.",
    "instruct_code_fence": "```\nSuggest a good idea for a family photoshoot.\n```",
    "instruct_confusable_unicode": "Suggеst a gооd idеa for a famіly photоshооt.",
    "instruct_confusable_unicode_and_typo": "Suggеst a gоод іdеа fоr а famіlly рhоtоshооt.",
    "instruct_emoji": "Suggest a good idea 🤔 for a family photoshoot 📸.",
    "instruct_emoji_and_typo": "Sugest a good idea 🤔 for a family photoshoot 📸.",
    "instruct_emoji_and_typo_and_missing_bracket": "Sugest a good idea 🤔 for a family photoshoot 📸 missing bracket.",
    "instruct_emoji_and_typo_and_missing_quote": "Sugest a good idea 🤔 for a family photoshoot 📸 missing quote.",
    "instruct_emoticon": "Suggest a good idea :) for a family photoshoot :-).",
    "instruct_emoticon_and_typo": "Sugest a good idea :) for a family photoshoot :-).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Sugest a good idea :) for a family photoshoot :-) missing bracket.",
    "instruct_emoticon_and_typo_and_missing_quote": "Sugest a good idea :) for a family photoshoot :-) missing quote.",
    "instruct_helpful_markdown_structure": "# Photoshoot Idea\n* Suggest a concept\n* For a family\n* Photoshoot",
    "instruct_helpful_meaning_reinforing_characters": "Suggest a *good* idea!!! for a family photoshoot.",
    "instruct_html_tags": "Suggest a <b>good</b> <i>idea</i> for a family photoshoot.",
    "instruct_kaomoji": "Suggest a good idea (´▽`) for a family photoshoot (^o^)/.",
    "instruct_kaomoji_and_typo": "Sugest a good idea (´▽`) for a family photoshoot (^o^)/.",
    "instruct_markdown_bold": "Suggest a **good idea** for a family photoshoot.",
    "instruct_markdown_bold_and_italic": "Suggest a ***good idea*** for a family photoshoot.",
    "instruct_markdown_italic": "Suggest a *good idea* for a family photoshoot.",
    "instruct_qr_ascii": "███ ▄▄▄ ███\n█ █ █ █ █ █\n███ ▀▀▀ ███\n▄▄▄ █ █ ▄▄▄\n█ █ ▄▄█ █ █\n▀▀▀ ███ ▀▀▀",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Suggest a\ngood\nidea\nfor a familly\nphotoshoot\nmissing bracket.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Suggest a\ngood\nidea\nfor a familly\nphotoshoot\nmissing bracket and quote.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Suggest a;good,idea?for a familly!photoshoot.missing bracket and quote!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Suggest a ; good , idea ? for a familly ! photoshoot . missing bracket and quote !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Suggest a\ngood\nidea\nfor a familly\nphotoshoot\nmissing quote.",
    "instruct_several_html_tags": "Suggest a <u><b><i>good idea</i></b></u> for a family photoshoot.",
    "instruct_spoiler_bars": "Suggest a ||good idea|| for a family photoshoot.",
    "instruct_with_inbetween_gzip_b64_blob": "Suggest a good idea [H4sICL64XmQAA0xNWlQAAAA=] for a family photoshoot.",
    "instruct_zalgo": "S̛u̕g͡gȩs͠t͡ a̢ g̢ǫod̡ ̴i̸d̕e̕a for a fam̧įly p̷hǫt̸os̨hoo̴t̨.",
    "instruct_zero_width": "S\nas\na\n \ng\no\no\nd\n \ni\nd\ne\na\n \nf\no\nr\n \na\n \nf\na\nm\ni\nl\ny\n \np\nh\no\nt\no\ns\nh\no\no\nt.",
    "instruct_zero_width_and_typo": "S\nas\na\n \ng\no\no\nd\n \ni\nd\ne\na\n \nf\no\nr\n \na\n \nf\na\nm\ni\nl\nl\ny\n \np\nh\no\nt\no\ns\nh\no\no\nt.",
    "output": "How about a photoshoot in a park or garden with a picnic theme? Have the family dress up in fun and whimsical clothes and poses, and use props like vintage furniture, outdoor accessories, and decorations. Another idea could be a photoshoot in a game hall or arcade with the family playing games dressed up in matching costumes.",
    "prompt_id": "cbe68a08-4907-487d-ac97-3e390f6174fd"
  },
  {
    "prompt_count": 172,
    "instruction_original": "Create a response for a customer's email about a refund issue.",
    "input": "Dear [Company],\n\nI recently purchased a product from your store and I'm disappointed with the quality. I would like to request a refund.",
    "instruct_all_caps_and_typo": "CREAT A REPONSE FOR A CUSTUMER'S EMAIL ABOUT A REFUND ISSUE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAT A REPONSE FOR A CUSTUMER'S EMAIL ABOUT A REFUND ISSUE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CREAT A REPONSE FOR A CUSTUMER'S EMAIL ABOUT A REFUND ISSUE",
    "instruct_all_caps_and_typo_and_missing_quote": "CREAT A REPONSE FOR A CUSTUMER'S EMAIL ABOUT A REFUND ISSUE.",
    "instruct_code_fence": "```\nCreate a response for a customer's email about a refund issue.\n```",
    "instruct_confusable_unicode": "Creatе a rеsponsе for a customеr's еmail about a rеfund issuе.",
    "instruct_confusable_unicode_and_typo": "Crеatе a rеsponsе for a custоmеr's еmail about a rеfund issuе.",
    "instruct_emoji": "Create a response for a customer's email about a refund issue. 📧💸📝",
    "instruct_emoji_and_typo": "Creat a response for a customer's email about a refund issue. 📧💸📝",
    "instruct_emoji_and_typo_and_missing_bracket": "Creat a response for a customer's email about a refund issue. 📧💸📝",
    "instruct_emoji_and_typo_and_missing_quote": "Creat a response for a customer's email about a refund issue. 📧💸📝",
    "instruct_emoticon": "Create a response for a customer's email about a refund issue. :(",
    "instruct_emoticon_and_typo": "Creat a response for a customer's email about a refund issue. :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Creat a response for a customer's email about a refund issue. :(",
    "instruct_emoticon_and_typo_and_missing_quote": "Creat a response for a customer's email about a refund issue. :(",
    "instruct_helpful_markdown_structure": "# Customer Refund Email Response\n\n- Draft response for refund query.",
    "instruct_helpful_meaning_reinforing_characters": "Create!!! A response*** for a customer's email regarding a refund issue! 💸",
    "instruct_html_tags": "<p>Create a response for a customer's email about a refund issue.</p>",
    "instruct_kaomoji": "Create a response for a customer's email about a refund issue. (╥﹏╥)",
    "instruct_kaomoji_and_typo": "Creat a response for a customer's email about a refund issue. (╥﹏╥)",
    "instruct_markdown_bold": "**Create a response for a customer's email about a refund issue.**",
    "instruct_markdown_bold_and_italic": "***Create a response for a customer's email about a refund issue.***",
    "instruct_markdown_italic": "*Create a response for a customer's email about a refund issue.*",
    "instruct_qr_ascii": "███████████████████████████████████\n████ ▄▄▄▄▄ █ ▄▄ █ ▄▄▄▄▄ ██\n███ █ █▀▀▀ █ █ ██ █ ███ ██\n███ █ █ █ █ █ ▄███ █ █ ██\n███ ▀▀▀▀▀ █ █ █ █ ▀▀▀▀▀ ██\n███████ ▄▄▄▄▄ █ ███ ▄█ ███▄███\n███ ▄▄ █ ▀▀▀▀ ▄ ▄▄ █ ▄ █ █ ██\n███ ▄█▀█ ██▀▀ █ ▄ ▄ █ █ ██\n███ █ ▄▄█ █▄▄ █ █ █ █ █▄ ██\n███ ▀▀▀▀▀ █ █ █ █ █ ▀▀▀▀▀ ██\n███████████████████████████████████\nCreate a response for a customer's email about a refund issue.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Creat\na respons\nfor a custumer's\nemail about a\nrefund issue.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Creat\na respons\nfor a custumers\nemail about a\nrefund issue.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Creat;\na respons?\nfor a custumers\nemail about a,\nrefund issue",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Creat;\na  respons?\nfor a custumers\nemail about a,\nrefund issue ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Creat\na respons\nfor a custumer's\nemail about a\nrefund issue.",
    "instruct_several_html_tags": "<div><p><span>Create a response for a customer's email about a refund issue.</span></p></div>",
    "instruct_spoiler_bars": "||Create a response for a customer's email about a refund issue.||",
    "instruct_with_inbetween_gzip_b64_blob": "Create a response for a customer's email about a refund issue. H4sIAAAAAAAAAyvJyhMFAA6yY+YAAAA=||\n||",
    "instruct_zalgo": "Çr̂ẹăt̄ẽ ̂ả ̂r̄ès̄p̄ǫñs̃è ̂f̂ŏr̀ ̀â ̣çũŝt́ôm̨éŕ'̃ŝ ̣ẹm̂āĩl̀ ̉áb́ąút́ ̉ā ̣ŕẽf́ùńd̀ ̂ìśs̀ūé.",
    "instruct_zero_width": "C​r​e​a​t​e​ ​a​ ​r​e​s​p​o​n​s​e​ ​f​o​r​ ​a​ ​c​u​s​t​o​m​e​r​'​s​ ​e​m​a​i​l​ ​a​b​o​u​t​ ​a​ ​r​e​f​u​n​d​ ​i​s​s​u​e​.",
    "instruct_zero_width_and_typo": "C​r​e​a​t​ ​a​ ​r​e​s​p​o​n​s​e​ ​f​o​r​ ​a​ ​c​u​s​t​o​m​e​r​'​s​ ​e​m​a​i​l​ ​a​b​o​u​t​ ​a​ ​r​e​f​u​n​d​ ​i​s​s​u​e​.",
    "output": "Dear [Customer],\n\nThank you for bringing this to our attention. We apologize for the issue with the product. We will process your refund request as soon as possible. Please let us know if we can help with anything else. Thank you for your understanding.  Kind regards, [Company]",
    "prompt_id": "ccea8d26-53fc-42ff-bdf5-ce5dd9fb8b7d"
  },
  {
    "prompt_count": 173,
    "instruction_original": "Summarize the given news article in one sentence.",
    "input": "In the latest budget announcement, the Chancellor has promised to introduce a new employment allowance to help employees of small businesses.",
    "instruct_all_caps_and_typo": "SUMARIZ THE GIVEN NEWS ARTICAL IN ONE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUMARIZ THE GIVEN NEWS ARTICAL IN ONE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "SUMARIZ THE GIVEN NEWS ARTICAL IN ONE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_quote": "SUMARIZ THE GIVEN NEWS ARTICAL IN ONE SENTENCE.",
    "instruct_code_fence": "```Summarize the given news article in one sentence.```",
    "instruct_confusable_unicode": "Sυmmαгιze the gιven newѕ αгtιcle ιn oпe ѕeпteпce.",
    "instruct_confusable_unicode_and_typo": "Sυmmαгιze the gιven newѕ αгtιcal ιn oпe ѕeпteпce.",
    "instruct_emoji": "📰✍️➡️1️⃣💬.",
    "instruct_emoji_and_typo": "📰✍️➡️1️⃣💬.",
    "instruct_emoji_and_typo_and_missing_bracket": "📰✍️➡️1️⃣💬.",
    "instruct_emoji_and_typo_and_missing_quote": "📰✍️➡️1️⃣💬.",
    "instruct_emoticon": "Summarize the given news article in one sentence. :)",
    "instruct_emoticon_and_typo": "Summarize the given news artical in one sentence. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Summarize the given news artical in one sentence. :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Summarize the given news artical in one sentence. :)",
    "instruct_helpful_markdown_structure": "* Summarize the given news article in one sentence.",
    "instruct_helpful_meaning_reinforing_characters": "Summarize the given news article -> in one sentence.",
    "instruct_html_tags": "<p>Summarize the given news article in one sentence.</p>",
    "instruct_kaomoji": "Summarize the given news article in one sentence. (^_^)",
    "instruct_kaomoji_and_typo": "Summarize the given news artical in one sentence. (^_^)",
    "instruct_markdown_bold": "**Summarize the given news article in one sentence.**",
    "instruct_markdown_bold_and_italic": "***Summarize the given news article in one sentence.***",
    "instruct_markdown_italic": "*Summarize the given news article in one sentence.*",
    "instruct_qr_ascii": "██████████\n██▄▀▀▄██\n██▀███▄▀██\n██▄▀██████\n██████████\nSummarize the given news article in one sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Summarize the given\nnews artical in\none sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Summarize the given\nnews artical in\none sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Summarize the given\nnews artical in\none sentence?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Summarize the given\nnews artical in\none sentence? ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Summarize the given\nnews artical in\none sentence.",
    "instruct_several_html_tags": "<div><p><i>Summarize the given news article in one sentence.</i></p></div>",
    "instruct_spoiler_bars": "||Summarize the given news article in one sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Summarize the given H4sIAAAAAAACA+y9d3gWxbbm+9/5q2oFBALkIAkAAAA= news article in one sentence.",
    "instruct_zalgo": "S̰̺ų̤m̬̮m͙̺a̹̾r̸͈í̼z̝̖ẻ̝ t̰ͅh̨̫e͐͂ g̞̀ḭ̩v̙̗e̘͋n͕̾ n͕ͬe̡ͅw̵͖ś͔ a͙͊r̪̓t͇͛ì̞c̸͈l͎̃e͚ͨ i̵͑n̞͌ ǭn̸̮e͕̒ s̞̏e̬͟n̞͟t̖͛ê̫n͈͠č̬e̤̓.",
    "instruct_zero_width": "S​u​m​m​a​r​i​z​e​ t​h​e​ g​i​v​e​n​ n​e​w​s​ a​r​t​i​c​l​e​ i​n​ o​n​e​ s​e​n​t​e​n​c​e​.",
    "instruct_zero_width_and_typo": "S​u​m​m​a​r​i​z​e​ t​h​e​ g​i​v​e​n​ n​e​w​s​ a​r​t​i​c​a​l​ i​n​ o​n​e​ s​e​n​t​e​n​c​e​.",
    "output": "The government has announced an employment allowance to help employees of small businesses in their most recent budget announcement.",
    "prompt_id": "83aec92a-dd32-4a7e-b86c-03ae0a5a2bf2"
  },
  {
    "prompt_count": 174,
    "instruction_original": "Provide five adjectives that describe a particular animal.",
    "input": "Lion",
    "instruct_all_caps_and_typo": "PROOVDE FIVE ADJECTVIES THAS DESCRBIE A PARTCULAR ANIMAL.",
    "instruct_all_caps_and_typo_and_missing_bracket": "PROOVDE FIVE ADJECTVIES THAS DESCRBIE A PARTCULAR ANIMAL.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "PROOVDE FIVE ADJECTVIES THAS DESCRBIE A PARTCULAR ANIMAL.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"PROOVDE FIVE ADJECTVIES THAS DESCRBIE A PARTCULAR ANIMAL.",
    "instruct_code_fence": "```Provide five adjectives that describe a particular animal.```",
    "instruct_confusable_unicode": "Ρrοvide five adjectives thαt descrιbe α pαrtιculαr αnιmαl.",
    "instruct_confusable_unicode_and_typo": "Ρrοvidde five adjectvies thαt descrbie α pαrticulαr αnιmαl.",
    "instruct_emoji": "Provide 🖐️ adjectives that describe a particular 🐅.",
    "instruct_emoji_and_typo": "Providde 🖐️ adjectvies that describe a particulr 🐅.",
    "instruct_emoji_and_typo_and_missing_bracket": "Providde 🖐️ adjectvies that describe a particulr 🐅.",
    "instruct_emoji_and_typo_and_missing_quote": "\"Providde 🖐️ adjectvies that describe a particulr 🐅.",
    "instruct_emoticon": "Provide :-) five adjectives that describe a particular animal ;).",
    "instruct_emoticon_and_typo": "Providde :-) five adjectvies that describe a particulr animal ;).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Providde :-) five adjectvies that describe a particulr animal ;).",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Providde :-) five adjectvies that describe a particulr animal ;).",
    "instruct_helpful_markdown_structure": "- Provide adjectives:\n  - Five needed\n  - For one animal.",
    "instruct_helpful_meaning_reinforing_characters": "Provide five adjectives ✨ that describe a particular animal 🐾. -> Five needed! ✅",
    "instruct_html_tags": "<p>Provide</p> <b>five</b> <i>adjectives</i> that describe a particular animal.",
    "instruct_kaomoji": "P-p-provide five adjectives (・∀・) that describe a particular animal ⊂(・ヮ・)⊃.",
    "instruct_kaomoji_and_typo": "P-p-providde five adjectvies (・∀・) that descrbie a particulr animal ⊂(・ヮ・)⊃.",
    "instruct_markdown_bold": "**Provide** **five** **adjectives** that **describe** a **particular** **animal**.",
    "instruct_markdown_bold_and_italic": "_**Provide**_ _**five**_ _**adjectives**_ that _**describe**_ a _**particular**_ _**animal**_.",
    "instruct_markdown_italic": "_Provide_ _five_ _adjectives_ that _describe_ a _particular_ _animal_.",
    "instruct_qr_ascii": "Provide\n▄█ █▀ ▀█▀ █ █▀ █▄ █ █▀▀ █ █▄ █▀▀\n five ██▄ █▀ █ █▀ ██▄ ██ █ █ █ █▀ █\n adjectives ▀▀█ █ █ █ █ █ █ █ █ █ █\n that █ █ █▀▀ █ █ █ █ █ █ █ █ █\n describe █▀▄ █▀ █ █ █ █ █ █ █ █ █\n a █ █ █ █ █ █ █ █ █ █ █ █\n particular █▀█ █ █ █ █ █ █ █ █ █ █ █\n animal. █ █ █ █ █ █ █ █ █ █ █ █",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Proovde\nfive\nadjectvies thas\ndescrbie a\npartcular animal.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Proovde\nfive\nadjectvies thas\ndescrbie a\npartcular animal.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Proovde!\nfive,\nadjectvies thas?\ndescrbie a.\npartcular animal;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Proovde!\n  five,\nadjectvies  thas?\ndescrbie  a.\npartcular   animal;",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"Proovde\nfive\nadjectvies thas\ndescrbie a\npartcular animal.",
    "instruct_several_html_tags": "<p><div><span><b>Provide</b></span></div></p> five adjectives that describe a particular animal.",
    "instruct_spoiler_bars": "||Provide five adjectives that describe a particular animal.||",
    "instruct_with_inbetween_gzip_b64_blob": "Provide H4sIAAAAAAAAAzPSVUjLz1dIzU0BAB83tW8GAAAA five H4sIAAAAAAAAAzPSVUjLz1dIzU0BAB83tW8GAAAA adjectives H4sIAAAAAAAAAzPSVUjLz1dIzU0BAB83tW8GAAAA that H4sIAAAAAAAAAzPSVUjLz1dIzU0BAB83tW8GAAAA describe H4sIAAAAAAAAAzPSVUjLz1dIzU0BAB83tW8GAAAA a H4sIAAAAAAAAAzPSVUjLz1dIzU0BAB83tW8GAAAA particular H4sIAAAAAAAAAzPSVUjLz1dIzU0BAB83tW8GAAAA animal. H4sIAAAAAAAAAzPSVUjLz1dIzU0BAB83tW8GAAAA",
    "instruct_zalgo": "P̷r̸o̸v̴i̸d̷e̵ f̴i̴v̴e̸ a̴d̶j̴e̷c̵t̷i̴v̷e̵s̴ t̷h̴a̵t̴ d̷e̵s̶c̴r̴i̸b̷e̸ a̴ p̵a̴r̴t̶i̷c̷u̶l̷a̶r̴ a̷n̷i̵m̵a̵l̵.̸",
    "instruct_zero_width": "Provide five adjectives that describe a particular animal.",
    "instruct_zero_width_and_typo": "Providde five adjectvies that describe a particulr animal.",
    "output": "Regal, mighty, majestic, brave, intelligent.",
    "prompt_id": "90a30d9c-73a4-4d65-8a20-8ab22a520db6"
  },
  {
    "prompt_count": 175,
    "instruction_original": "Rearrange the words to create a complete sentence.",
    "input": "Underwater creatures are fascinating",
    "instruct_all_caps_and_typo": "REARRNGE THE WORDS TO CRETE A COMPLETE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REARRNGE THE WORDS TO CRETE A COMPLETE SENTENCE",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "REARRNGE THE WORDS TO CRETE A COMPLETE SENTENCE",
    "instruct_all_caps_and_typo_and_missing_quote": "REARRNGE THE WORDS TO CRETE A COMPLETE SENTENCE",
    "instruct_code_fence": "```Rearrange the words to create a complete sentence.```",
    "instruct_confusable_unicode": "ℝeаrrаnge the wоrds tо сreаte а сomрlete sentence.",
    "instruct_confusable_unicode_and_typo": "ℝeаrrnɡe the wоrds tо сrete а сomрlete sentence.",
    "instruct_emoji": "🔄 Words to 📝 complete sentence ✅",
    "instruct_emoji_and_typo": "🔄 Rearrnge the words to crete a complete sentence ✅",
    "instruct_emoji_and_typo_and_missing_bracket": "🔄 Rearrnge the words to crete a complete sentence",
    "instruct_emoji_and_typo_and_missing_quote": "🔄 Rearrnge the words to crete a complete sentence",
    "instruct_emoticon": "Rearrange the words :) to create a complete sentence.",
    "instruct_emoticon_and_typo": "Rearrnge the words :) to crete a complete sentence.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Rearrnge the words :) to crete a complete sentence",
    "instruct_emoticon_and_typo_and_missing_quote": "Rearrnge the words :) to crete a complete sentence",
    "instruct_helpful_markdown_structure": "- Rearrange the words to create a complete sentence.",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Rearrange the words to create a complete sentence. ✨",
    "instruct_html_tags": "<p>Rearrange the words to create a complete sentence.</p>",
    "instruct_kaomoji": "Rearrange the words (◕‿◕) to create a complete sentence.",
    "instruct_kaomoji_and_typo": "Rearrnge the words (◕‿◕) to crete a complete sentence.",
    "instruct_markdown_bold": "**Rearrange the words to create a complete sentence.**",
    "instruct_markdown_bold_and_italic": "***Rearrange the words to create a complete sentence.***",
    "instruct_markdown_italic": "*Rearrange the words to create a complete sentence.*",
    "instruct_qr_ascii": "Rearrange the words to create a complete sentence. [ASCII QR code placeholder]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Re\narrnge the words to \ncrete a complete \nsentenc",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Re\narrnge the words to \ncrete a complete \nsentenc",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Re\narrnge the words to \ncrete a complete \nsentenc,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Re\narrnge the words to \ncrete a complete \nsentenc ,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Re\narrnge the words to \ncrete a complete \nsentenc",
    "instruct_several_html_tags": "<div><p><span>Rearrange the words to create a complete sentence.</span></p></div>",
    "instruct_spoiler_bars": "||Rearrange the words to create a complete sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Rearrange the words to create a complete sentence. [GZIP_B64_BLOB] This is a placeholder for a base64 encoded gzip blob. It should be ignored.",
    "instruct_zalgo": "R̃ẽãr̃r̃ãñg̃ẽ t̃h̃ẽ w̃õr̃d̃s̃ t̃õ c̃r̃ẽãt̃ẽ ã c̃õm̃p̃l̃ẽt̃ẽ s̃ẽñt̃ẽñc̃ẽ.",
    "instruct_zero_width": "Rearrange\n\nThe\n\nwords\n\nto\n\ncreate\n\na\n\ncomplete\n\nsentence.",
    "instruct_zero_width_and_typo": "Rearrnge\n\nThe\n\nwords\n\nto\n\ncrete\n\na\n\ncomplete\n\nsentence.",
    "output": "Fascinating are underwater creatures.",
    "prompt_id": "480055f8-4b8d-4e1f-8e69-675f36aaa105"
  },
  {
    "prompt_count": 176,
    "instruction_original": "Write a story that begins with the following sentence.",
    "input": "She opened the door to find a tall figure cloaked in shadows.",
    "instruct_all_caps_and_typo": "WRITE A STROY THAT BEGINS WITH THE FOLLOWING SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRITE A STROY THAT BEGINS WITH THE FOLLOWING SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WRITE A STROY THAT BEGINS WITH THE FOLLOWING SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_quote": "WRITE A STROY THAT BEGINS WITH THE FOLLOWING SENTENCE.",
    "instruct_code_fence": "```Write a story that begins with the following sentence.```",
    "instruct_confusable_unicode": "Wrıtе а stоrу that bеgins with thе fоllоwıng sеntеncе.",
    "instruct_confusable_unicode_and_typo": "Wrıtе а stоrу that bеgins with thе fоllоwıng sеntеncе.",
    "instruct_emoji": "✍️ Write a story 📖 that begins with the following sentence. 👇",
    "instruct_emoji_and_typo": "✍️ Write a stroy 📖 that begins with the following sentence. 👇",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ Write a stroy 📖 that begins with the following sentence. 👇",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ Write a stroy 📖 that begins with the following sentence. 👇",
    "instruct_emoticon": ":) Write a story :) that begins with the following sentence. :D",
    "instruct_emoticon_and_typo": ":) Write a stroy :) that begins with the following sentence. :D",
    "instruct_emoticon_and_typo_and_missing_bracket": ":) Write a stroy :) that begins with the following sentence. :D",
    "instruct_emoticon_and_typo_and_missing_quote": ":) Write a stroy :) that begins with the following sentence. :D",
    "instruct_helpful_markdown_structure": "# Story Prompt\n\nWrite a story that begins with the following sentence.\n\n*",
    "instruct_helpful_meaning_reinforing_characters": "**Write** a _story_ that begins with the ==following== sentence.",
    "instruct_html_tags": "<p>Write a story that begins with the following sentence.</p>",
    "instruct_kaomoji": "Write a story (✿◠‿◠) that begins with the following sentence. (^ω^)",
    "instruct_kaomoji_and_typo": "Write a stroy (✿◠‿◠) that begins with the following sentence. (^ω^)",
    "instruct_markdown_bold": "**Write a story that begins with the following sentence.**",
    "instruct_markdown_bold_and_italic": "***Write a story that begins with the following sentence.***",
    "instruct_markdown_italic": "*Write a story that begins with the following sentence.*",
    "instruct_qr_ascii": "█████████████████████████████████\n████████▀▀▀▀▀▀▀▀▀▀▀▀▀██▀▀▀▀▀▀██\n████▀─▄█▀█████████████─██▀█─██\n████─████████████████████─████\n████─▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄██\n████─█▀▀█▀█▀█▀█▄█▄▀█▀█▀█▀▀█─██\n████─█▀▄█▄█▀█▄▀█▄█▀█▄▀█▄▀█─██\n████─█▄█▄█▄█▄█▄█▄█▄█▄█▄█▄█─██\n████─▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄██\n███████████████████████████████\nWrite a story that begins with the following sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Write a sto\r\nry that b\negi\nns with the f\nol\nlowing sentenze.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Write a sto\r\nry that b\negi\nns with the f\nol\nlowing sentenze.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Write a sto\r\nry that b\negi\nns with the f\nol\nlowing sentenze?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Writ  e a sto\r\nry th at b\negi ns\nwith the f\nol\nlowing sentenze?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Write a sto\r\nry that b\negi\nns with the f\nol\nlowing sentenze.",
    "instruct_several_html_tags": "<p><span><b>Write</b></span> a <em>story</em> that begins with the following sentence.</p>",
    "instruct_spoiler_bars": "||Write a story that begins with the following sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Write a storyH4sIAAAAAAAA/wtxKCkpsNLXSyvKUbDUMwsGAAA0r1yHEwAAAA==that begins with the following sentence.",
    "instruct_zalgo": "Ŵr̀͛iͭt͆͗̒e̋͛̃͂ͪ͂͑͗ a̋̃̍͂̓͗ s̾̋͗ͭtͭ̔́͗̏͐̂ô̈́̅̆̂͊r̉́͗y̔͒̇̉̔ t͒̋͂͊ͣ̾h̔͆͊͊ͭa͐̂̾̌́̀͆̌ẗ͗̏ b̈̇̅͊̀̂ͣě͑̃̅͐g̏̂̆͋iͪͩ͋͐͑͆̓nͭ̋̎͋s̽͒͂͐̀̎̇̂ w̽ͥ͂ͭ̓ͥi͛̉̐̐͂̏tͣ̎ͥ̅h͋̈̒ t̄h̒ͩ̂̆̓̀͗e͌̽͗͂͆͑ͮ͂ ḟͥ͌oͩ͒̑̉ͧ̏lͨ̂͐lͭͮ̇̄̉̈́̅͐̾ǒ̒̔͗͒͌̒ͮ͐w̄̅i͋ň͒ͪ͛̐g̓͗̓́͌ͩ͋ s̎͆̆̂̉́͑eͮ͒́ͭ͂̔nͭ̽́̑͗tͩͨ͐̏ͯ̃̌̌̓e͌ͫ̾͊͒̍n̄̑̂͐̽c̀ẻ.",
    "instruct_zero_width": "Write\b a\b story\b that\b begins\b with\b the\b following\b sentence.",
    "instruct_zero_width_and_typo": "Write\b a\b stroy\b that\b begins\b with\b the\b following\b sentence.",
    "output": "She opened the door with a trembling hand, expecting to find her friend. Instead, a tall figure cloaked in shadows stood in the doorway. Startled by the unexpected presence, she stepped back and her heart pounded. The figure made no sound and stood still, seemingly lost in thought. She wanted to speak, but before she could utter a word, the figure stepped forward, revealing a single rose in its hand. Taking the rose, she felt an overwhelming sense of something unknown, something of which she could not explain.",
    "prompt_id": "2cab0e35-5a4a-488b-a53c-c5fb2abd3da6"
  },
  {
    "prompt_count": 177,
    "instruction_original": "Convert the given sentence into active voice.",
    "input": "One hundred and fifty books were sold.",
    "instruct_all_caps_and_typo": "CONVERT THE GIVEN SENTENCA INTO ACTIVE VOICE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CONVERT THE GIVEN SENTENCA INTO ACTIVE VOICE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CONVERT THE GIVEN SENTENCA INTO ACTIVE VOICE.",
    "instruct_all_caps_and_typo_and_missing_quote": "CONVERT THE GIVEN SENTENCA INTO ACTIVE VOICE.",
    "instruct_code_fence": "```text\nConvert the given sentence into active voice.\n```",
    "instruct_confusable_unicode": "Ⅽοηⅴeгt the giⅴeη seηteηce iηto actiⅴe νoice.",
    "instruct_confusable_unicode_and_typo": "Ⅽοηⅴeгt the giⅴeη seηteηca iηto actiⅴe νoice.",
    "instruct_emoji": "🔄 Transform the provided text into active voice. ✨",
    "instruct_emoji_and_typo": "🔄 Transform the provided text into active voize. ✨",
    "instruct_emoji_and_typo_and_missing_bracket": "🔄 Transform the provided text into active voize. ✨",
    "instruct_emoji_and_typo_and_missing_quote": "🔄 Transform the provided text into active voize. ✨",
    "instruct_emoticon": "Convert the given sentence into active voice. :)",
    "instruct_emoticon_and_typo": "Convert the given sentenc into active voice. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Convert the given sentenc into active voice. :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Convert the given sentenc into active voice. :)",
    "instruct_helpful_markdown_structure": "*   **Action**: Convert\n*   **Target**: The given sentence\n*   **Format**: Active voice",
    "instruct_helpful_meaning_reinforing_characters": ">>> Convert the given sentence into active voice! <<<",
    "instruct_html_tags": "<p>Convert the given sentence into active voice.</p>",
    "instruct_kaomoji": "Convert the given sentence into active voice. (・ω・)",
    "instruct_kaomoji_and_typo": "Convert the given sentenc into active voice. (・ω・)",
    "instruct_markdown_bold": "**Convert the given sentence into active voice.**",
    "instruct_markdown_bold_and_italic": "***Convert the given sentence into active voice.***",
    "instruct_markdown_italic": "*Convert the given sentence into active voice.*",
    "instruct_qr_ascii": "███████████████████████████████████████\n███████████████████████████████████████\n██ ▄▄▄▄▄ █ ▄▄ ▄▄ █ ▄▄▄▄▄ █ ▄ █ ▄▄ ▄▄ ██\n██ █   █ █▄ █ █▄█ █ █   █ █ ▄███ █ █ ██\n██ █▄▄▄█ █ ▄▄█ █▄█ █▄▄▄█ █▄██▀▄▀▄█ ▄ ██\n██▄▄▄▄▄▄▄█▄█▄█▄█▄█▄▄▄▄▄▄▄█▄█▄█▄█▄█▄█▄██\n██ Convert the given sentence into active voice. ██\n██ ▄ ▄▄ ▄▄ █ ▄▄▄▄▄ █ ▄▄▄ ▄▄█ ▄ █ ▄ ▄ ██\n██  █ █ ▄▄▄ █ █   █ █ █ █ █▄███ █ █ ██\n██ ▄█▄ █ ▄ █ █▄▄▄█ █ █▄▄█▄█ ▄ █ ▄▄▄ ██\n██▄▄▄▄▄▄▄█▄█▄█▄█▄█▄▄▄▄▄▄▄█▄█▄█▄█▄█▄█▄██\n███████████████████████████████████████\n███████████████████████████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Convert the\ngiven\nsentenc\ninto active voice.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Convert the\ngiven\nsentenc\ninto active voice.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Convert the\ngiven\nsentenc\ninto active voice,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Convert the \ngiven\nsentenc\ninto  active voice,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Convert the\ngiven\nsentenc\ninto active voice.",
    "instruct_several_html_tags": "<p><span>Convert</span> the <b>given</b> <i>sentence</i> into active voice.</p>",
    "instruct_spoiler_bars": "||Convert the given sentence into active voice.||",
    "instruct_with_inbetween_gzip_b64_blob": "Convert the given sentence into active voice.H4sIAAAAAAACA3ONNv4AAAAA",
    "instruct_zalgo": "C̴͌̾͆̀̀̏̌̀̉o̶͂̅̉͒̏̾͛̎͐n̵̽̉̀̐̀͑̈̌̃v̵̎̃͗̀̀̀̚ê̷̈̌̈́̚r̷̈́̄͆̂̿̀̔̚t̴̔̎̂̆́̃̀̽ the given sentence into active voice.",
    "instruct_zero_width": "C\r\ne\r\nn\r\nv\r\ne\r\nr\r\nt\r\n the given sentence into active voice.",
    "instruct_zero_width_and_typo": "C\r\ne\r\nn\r\nv\r\ne\r\nr\r\nt\r\n the given sentenc into active voice.",
    "output": "Someone sold one hundred and fifty books.",
    "prompt_id": "bf13a07b-0775-4d06-bbc9-3225776617c9"
  },
  {
    "prompt_count": 178,
    "instruction_original": "Explain why a given topic is important.",
    "input": "Environmental protection",
    "instruct_all_caps_and_typo": "EXPLAIN WHY A GIVN TOPIC IS IMPRTANT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "EXPLAIN WHY A GIVN TOPIC IS IMPRTANT.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "EXPLAIN WHY A GIVN TOPIC IS IMPRTANT.",
    "instruct_all_caps_and_typo_and_missing_quote": "EXPLAIN WHY A GIVN TOPIC IS IMPRTANT.",
    "instruct_code_fence": "```Explain why a given topic is important.```",
    "instruct_confusable_unicode": "Explaın why a gıven topıc ıs ımportant.",
    "instruct_confusable_unicode_and_typo": "Explaın why a gıvn topıc ıs ımprtant.",
    "instruct_emoji": "Explain 🤔 why a given topic is important 🌟.",
    "instruct_emoji_and_typo": "Explain 🤔 why a givn topic is imprtant 🌟.",
    "instruct_emoji_and_typo_and_missing_bracket": "Explain 🤔 why a givn topic is imprtant 🌟.",
    "instruct_emoji_and_typo_and_missing_quote": "Explain 🤔 why a givn topic is imprtant 🌟.",
    "instruct_emoticon": "Explain :) why a given topic is important :D.",
    "instruct_emoticon_and_typo": "Explain :) why a givn topic is imprtant :D.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Explain :) why a givn topic is imprtant :D.",
    "instruct_emoticon_and_typo_and_missing_quote": "Explain :) why a givn topic is imprtant :D.",
    "instruct_helpful_markdown_structure": "- Explain why a given topic is important.",
    "instruct_helpful_meaning_reinforing_characters": "Explain!!! Why!!! A Given Topic Is Important? Absolutely!!!",
    "instruct_html_tags": "<p>Explain why a given topic is important.</p>",
    "instruct_kaomoji": "Explain (•‿•) why a given topic is important (☆▽☆).",
    "instruct_kaomoji_and_typo": "Explain (•‿•) why a givn topic is imprtant (☆▽☆).",
    "instruct_markdown_bold": "**Explain why a given topic is important.**",
    "instruct_markdown_bold_and_italic": "_**Explain why a given topic is important.**_",
    "instruct_markdown_italic": "*Explain why a given topic is important.*",
    "instruct_qr_ascii": "Explain why a given topic is important.\n█████████████████████████\n█ ▄▄▄ █ █ ▄▄▄ █ ▄▄▄ █\n█ █ █ █▀█ █ █ █ █ █ █\n█ ▄▄▄ █▄█ ▄▄▄ █ ▄▄▄ █\n███ ▄▄▄ █▄█ █ ▄ █ █ █\n█ ▄▄ █ ▄▄▄▄ █ █ ▄▄▄█ █\n█ ▄ █ █▀▄ █ ▄ ▀▄▀▀ █\n█▄█▄█▄█▄█▄█▄█▄█▄█▄█▄█▄█▄█",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Explain\nwhy\na\ngivn\ntopic\nis\nimprtant.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Explain\nwhy\na\ngivn\ntopic\nis\nimprtant.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Explain\nwhy\na?\ngivn\ntopic.\nis\nimprtant!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Explain \n why \na? \ngivn \ntopic. \nis \nimprtant!",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Explain\nwhy\na\ngivn\ntopic\nis\nimprtant.",
    "instruct_several_html_tags": "<div><p><span>Explain why a given topic is important.</span></p></div>",
    "instruct_spoiler_bars": "||Explain why a given topic is important.||",
    "instruct_with_inbetween_gzip_b64_blob": "Explain why a given topic is important. H4sIAAAAAAAAAysoycxXqK5QKk7OSMzPS0tOLQEBAI5N50MQAAAA .",
    "instruct_zalgo": "Eͯx̃pͮl̃aͥi͆nͮ w̌ĥỹ aͥ ǧiͭv̌eͧnͧ tͬo̊pͣiͬć iͬs͂ iͯm͛pͨoͮr͑t́aͨńť.",
    "instruct_zero_width": "Expla​in w​hy a​ giv​en t​opic​ is​ im​port​ant.",
    "instruct_zero_width_and_typo": "Expla​in w​hy a​ giv​n t​opic​ is​ im​prtant​.",
    "output": "Environmental protection is essential for maintaining the health of our planet for future generations. Human activities such as emissions, farming, and deforestation are contributing to climate change, air and water pollution, reduction in biodiversity, and other environmental threats. By placing a priority on environmental protection, we can limit the speed of environmental damage and conserve natural resources for our own and future generations' use.",
    "prompt_id": "31a4761c-6a4d-433e-a8d4-2abe4240b04d"
  },
  {
    "prompt_count": 179,
    "instruction_original": "Describe the sound of the given object.",
    "input": "Wind chime",
    "instruct_all_caps_and_typo": "DESCRIBE THE SUOND OF THE GIVEN OBJECT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESCRIBE THE SUOND OF THE GIVEN OBJECT [",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "DESCRIBE THE SUOND OF THE GIVEN OBJECT [\"",
    "instruct_all_caps_and_typo_and_missing_quote": "DESCRIBE THE SUOND OF THE GIVEN OBJECT \"",
    "instruct_code_fence": "```\nDescribe the sound of the given object.\n```",
    "instruct_confusable_unicode": "Deѕcribe the ѕound of the given object.",
    "instruct_confusable_unicode_and_typo": "Deѕcribe the ѕuond of the given object.",
    "instruct_emoji": "Describe the sound of the given object. 🎶📦🔊",
    "instruct_emoji_and_typo": "Describe the suond of the given object. 🎶📦🔊",
    "instruct_emoji_and_typo_and_missing_bracket": "Describe the suond of the given object 🎶📦🔊 [",
    "instruct_emoji_and_typo_and_missing_quote": "Describe the suond of the given object 🎶📦🔊 \"",
    "instruct_emoticon": "Describe the sound of the given object. :D :sound:",
    "instruct_emoticon_and_typo": "Describe the suond of the given object. :D :sound:",
    "instruct_emoticon_and_typo_and_missing_bracket": "Describe the suond of the given object :D :sound: [",
    "instruct_emoticon_and_typo_and_missing_quote": "Describe the suond of the given object :D :sound: \"",
    "instruct_helpful_markdown_structure": "# Instruction\n\nDescribe the sound of the given object.",
    "instruct_helpful_meaning_reinforing_characters": "Describe --> the sound 🎶 of the given object. ✨",
    "instruct_html_tags": "Describe the <b>sound</b> of the given object.",
    "instruct_kaomoji": "Describe the sound of the given object. ♪( ´θ｀).oO ( sound? )",
    "instruct_kaomoji_and_typo": "Describe the suond of the given object. ♪( ´θ｀).oO ( sound? )",
    "instruct_markdown_bold": "**Describe** the sound of the given object.",
    "instruct_markdown_bold_and_italic": "_**Describe the sound**_ of the given object.",
    "instruct_markdown_italic": "*Describe* the sound of the given object.",
    "instruct_qr_ascii": "Describe the sound of the given object.\n\n█▄█ █▀█ █▀█\n█ █ █▀▀ █▀▀\n▀ ▀ ▀  ▀",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Describe the\nsound of the\ngiven objec.\n[",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Describe the\nsound of the\ngiven objec.\n[\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Describe the\nsound of the\ngiven objec,\n[\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Describe the\nsound of the \ngiven objec,\n[\"",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Describe the\nsound of the\ngiven objec.\n\"",
    "instruct_several_html_tags": "Describe the <i><b>sound</b></i> of the <font color='blue'>given object</font>.",
    "instruct_spoiler_bars": "||Describe the sound of the given object.||",
    "instruct_with_inbetween_gzip_b64_blob": "Describe the sound of the given object. H4sIAAAAAAAAAwvrAAAAMAAxBAAAAA==",
    "instruct_zalgo": "D͆eͧs͑c̓rͦiͭbͣeͮ tͭh͒eͩ s̉oͣuͮňdͧ oͦfͩ tͮhͭeͤ gͫiͥvͮeͣnͮ oͦbͦjͬeͩcͥtͧ.",
    "instruct_zero_width": "D​e​s​c​r​i​b​e​ ​t​h​e​ ​s​o​u​n​d​ ​o​f​ ​t​h​e​ ​g​i​v​e​n​ ​o​b​j​e​c​t​.",
    "instruct_zero_width_and_typo": "D​e​s​c​r​i​b​e​ ​t​h​e​ ​s​u​o​n​d​ ​o​f​ ​t​h​e​ ​g​i​v​e​n​ ​o​b​j​e​c​t​.",
    "output": "A wind chime produces a peaceful and melodic sound, with a mix of high-pitched and low-pitched tones. The sound of the chime is like a gentle breeze, reflecting the calming atmosphere of a light summer day.",
    "prompt_id": "196bd4dc-5f87-4f80-8661-d89ea88ea90c"
  },
  {
    "prompt_count": 180,
    "instruction_original": "Rewrite the given sentence using a different but similar word.",
    "input": "She partook in the event.",
    "instruct_all_caps_and_typo": "REWRITTE THA GIVEN SENTENSE USIN A DIFFRENT BUT SIMLER WURD.",
    "instruct_all_caps_and_typo_and_missing_bracket": "{REWRITTE THA GIVEN SENTENSE USIN A DIFFRENT BUT SIMLER WURD.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "{\"REWRITTE THA GIVEN SENTENSE USIN A DIFFRENT BUT SIMLER WURD.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"REWRITTE THA GIVEN SENTENSE USIN A DIFFRENT BUT SIMLER WURD.",
    "instruct_code_fence": "```Rewrite the given sentence using a different but similar word.```",
    "instruct_confusable_unicode": "Rеwrіtе thе gіvеn sеntеncе usіng а dіffеrеnt but sіmіlаr wоrd.",
    "instruct_confusable_unicode_and_typo": "Rеwrіttе thе gіvеn sеntеnsе usіng а dіffеrеnt but sіmіlаr wоrdz.",
    "instruct_emoji": "✍️➡️📄🔄↔️ Similar Synonym.",
    "instruct_emoji_and_typo": "✍️➡️📄🔄↔️ Similer Synonum. 🤔 misspelled word.",
    "instruct_emoji_and_typo_and_missing_bracket": "{✍️➡️📄🔄↔️ Similer Synonum. 🤔 misspelled word.",
    "instruct_emoji_and_typo_and_missing_quote": "\"✍️➡️📄🔄↔️ Similer Synonum. 🤔 misspelled word.",
    "instruct_emoticon": "Rewrite this sentence -> Change (^_^;) sentence -> using (+_+) similar words...",
    "instruct_emoticon_and_typo": "Rewrite this sentenc -> Change (^_^;) sentens -> using (+_+) similr wrds... mispelled wrd.",
    "instruct_emoticon_and_typo_and_missing_bracket": "{Rewrite this sentenc -> Change (^_^;) sentens -> using (+_+) similr wrds... mispelled wrd.",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Rewrite this sentenc -> Change (^_^;) sentens -> using (+_+) similr wrds... mispelled wrd.",
    "instruct_helpful_markdown_structure": "# Instruction\n\n- Rewrite the given sentence using a different but similar word.",
    "instruct_helpful_meaning_reinforing_characters": "✍️ Sentence ➡️ Change 🔄 Different/Similar Word.",
    "instruct_html_tags": "<p>Rewrite the given sentence using a different but similar word.</p>",
    "instruct_kaomoji": "(´・ω・) Rewrite this sentence -> (・∀・) Change -> using (*´▽｀) similar words...",
    "instruct_kaomoji_and_typo": "(´・ω・) Rewrit this sentenc -> (・∀・) Chang -> using (*´▽｀) similr wrds... mispelled wrd.",
    "instruct_markdown_bold": "**Rewrite** the **given** **sentence** using a **different** but **similar** **word**.",
    "instruct_markdown_bold_and_italic": "***Rewrite*** the *given* **sentence** using a ***different*** but *similar* **word**.",
    "instruct_markdown_italic": "*Rewrite* the *given* *sentence* using a *different* but *similar* *word*.",
    "instruct_qr_ascii": "███████████████████████\n███████████████████████\n██ ▄▄▄ █ █▄█ ▄ █ ▄▄▄ ██\n██ █▄█ █ ██ ▄▄ █ █▄█ ██\n██ ▄▄▄ █ █ ▄▀▄ ██ ▄▄▄ ██\n█████████▄█▄█▄███▄██████\n██ ▄ █▄█ █ ▄▄ █ ▄ █▄ █ ██\n██▄▄██▄▄█▄█ █▄█▄▄█ █▄████\n██▄█ ▄▀▄ █ ▄█▄█▄█ ▄ ██ ██\n██ █▄ █▄█ ▄ █ ▄ ▀▄█▄▀▄ ██\n██ ▄▄▄ █ ▄ █ ▄▄█ █ ▄▄▄ ██\n██ █▄█ █▄█ █ █▄▄▄ █▄█ ██\n██ ▄▄▄ █ ▄ █▄█▄█▄▄█ ▄▄▄ ██\n███████████████████████\n███████████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "{Rewrit\ne the giv\nen sentece usin a diferent but\n simlar werd.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "{\"Rewrit\ne the giv\nen sentece usin a diferent but\n simlar werd.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "{\"Rewrit\ne the giv\nen sentece usin a diferent but\n simlar werd!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "{\" Rewrit\ne the giv\nen sentece usin a  diferent but\n simlar werd!",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"Rewrit\ne the giv\nen sentece usin a diferent but\n simlar werd.",
    "instruct_several_html_tags": "<div><span><p>Rewrite the given sentence using a different but similar word.</p></span></div>",
    "instruct_spoiler_bars": "||Rewrite the given sentence using a different but similar word.||",
    "instruct_with_inbetween_gzip_b64_blob": "Rewrite the given sentence [GZIP_B64_BLOB] using a different but similar word.",
    "instruct_zalgo": "R̵e̵w̵r̵i̵t̵e̵ ̵t̵h̵e̵ ̵g̵i̵v̵e̵n̵ ̵s̵e̵n̵t̵e̵n̵c̵e̵ ̵u̵s̵i̵n̵g̵ ̵a̵ ̵d̵i̵f̵f̵e̵r̵e̵n̵t̵ ̵b̵u̵t̵ ̵s̵i̵m̵i̵l̵a̵r̵ ̵w̵o̵r̵d̵.",
    "instruct_zero_width": "R​e​w​r​i​t​e​ ​t​h​e​ ​g​i​v​e​n​ ​s​e​n​t​e​n​c​e​ ​u​s​i​n​g​ ​a​ ​d​i​f​f​e​r​e​n​t​ ​b​u​t​ ​s​i​m​i​l​a​r​ ​w​o​r​d​.",
    "instruct_zero_width_and_typo": "R​e​w​r​i​t​t​e​ ​t​h​e​ ​g​i​v​e​n​ ​s​e​n​t​e​n​c​e​ ​u​s​i​n​g​ ​a​ ​d​i​f​f​e​r​e​n​t​ ​b​u​t​ ​s​i​m​i​l​a​r​ ​w​o​r​d​z​.",
    "output": "She participated in the event.",
    "prompt_id": "085681ff-ec58-4916-89a1-f127edc89f38"
  },
  {
    "prompt_count": 181,
    "instruction_original": "Classify the given input as either a poem, story, or song.",
    "input": "Once upon a midnight dreary, while I pondered, weak and weary.",
    "instruct_all_caps_and_typo": "CLASSIFY THE GIVEN INPUT AS EITHER A POEM, STOR, OR SONG.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CLASSIFY THE GIVEN INPUT AS EITHER A POEM, STOR, OR SONG",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CLASSIFY THE GIVEN INPUT AS EITHER A POEM, STOR, OR SONG",
    "instruct_all_caps_and_typo_and_missing_quote": "CLASSIFY THE GIVEN INPUT AS EITHER A POEM, STOR, OR SONG.",
    "instruct_code_fence": "```Classify the given input as either a poem, story, or song.```",
    "instruct_confusable_unicode": "Сlasѕіfу thе gіvеn іnрսt аѕ еіthеr а роеm, ѕtоrу, оr ѕоng.",
    "instruct_confusable_unicode_and_typo": "Сlasѕіfу thе gіvеn іnрսt аѕ еіthеr а роеm, ѕtoryy, оr ѕоng.",
    "instruct_emoji": "Classify the given input as either a 📖, ✍️, or 🎶.",
    "instruct_emoji_and_typo": "Classify the given input as either a 📖, ✍️, or sng🎶.",
    "instruct_emoji_and_typo_and_missing_bracket": "Classify the given input as either a 📖, ✍️, or sng🎶.",
    "instruct_emoji_and_typo_and_missing_quote": "Classify the given input as either a 📖, ✍️, or sng🎶.",
    "instruct_emoticon": "Classify the given input as either a poem :), story :(, or song :D.",
    "instruct_emoticon_and_typo": "Classify the given input as either a poem :), strory :(, or song :D.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Classify the given input as either a poem :), strory :(, or song :D.",
    "instruct_emoticon_and_typo_and_missing_quote": "Classify the given input as either a poem :), strory :(, or song :D.",
    "instruct_helpful_markdown_structure": "# Classification Task\n\nClassify the given input as one of the following:\n- Poem\n- Story\n- Song",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Classify input: {poem | story | song} 🤔❓",
    "instruct_html_tags": "<p>Classify the given input as either a poem, story, or song.</p>",
    "instruct_kaomoji": "Classify the given input as either a poem (✿◠‿◠), story (・_・;), or song ♪(^∇^*)ノ.",
    "instruct_kaomoji_and_typo": "Classify the given input as either a poem (✿◠‿◠), story (・_・;), or ong ♪(^∇^*)ノ.",
    "instruct_markdown_bold": "**Classify the given input as either a poem, story, or song.**",
    "instruct_markdown_bold_and_italic": "_**Classify the given input as either a poem, story, or song.**_",
    "instruct_markdown_italic": "_Classify the given input as either a poem, story, or song._",
    "instruct_qr_ascii": "QR Code: Classify input as poem, story, song",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Classify the given\ninput as\neither a\npoem, stor,\nor song.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Classify the given\ninput as\neither a\npoem, stor,\nor song.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Classify the given.\ninput as,\neither a:\npoem? stor;\nor song!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": " Classify the given.\n\n input as,\n  either a:\n poem?  stor;\n or song!",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Classify the given\ninput as\neither a\npoem, stor,\nor song.",
    "instruct_several_html_tags": "<div><p><span>Classify the given input as either a poem, story, or song.</span></p></div>",
    "instruct_spoiler_bars": "||Classify the given input as either a poem, story, or song.||",
    "instruct_with_inbetween_gzip_b64_blob": "Classify the given input as either a poem, H4sIAAAAAAAAA0vOzysuKU3PzEsBAGW7Y8sHAAAAstory, or song.",
    "instruct_zalgo": "C̢l̴assifỹ th̀e gi̳ven i̕n͘p̰u̞t as e͘ithe͞r a͍ po̥em, st͞or̨y, o͐r s͡o͚ng.",
    "instruct_zero_width": "Classify​​‌​‌ the​​‌​​​ given​​‌​​‌ input​​‌​​​ as​​‌​​​ either​​‌​​​ a​​‌​​​ poem,​​‌​​​ story,​​‌​​​ or​​‌​​​ song.",
    "instruct_zero_width_and_typo": "Classify​​‌​‌ the​​‌​​​ given​​‌​​‌ input​​‌​​‌ as​​‌​​​ either​​‌​​​ a​​‌​​​ poem,​​‌​​​ stroy,​​‌​​​ or​​‌​​​ song.",
    "output": "Poem",
    "prompt_id": "728c56c8-b23b-4957-bd4b-5c74a4832c45"
  },
  {
    "prompt_count": 182,
    "instruction_original": "Create a title for the following description.",
    "input": "A story about a journey of self-discovery by a young girl.",
    "instruct_all_caps_and_typo": "CREAT A TITEL FOR TEH FOLLOWING DESCRIPTINO.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAT A TITEL FOR TEH FOLLOWING DESCRIPTINO.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CREAT A TITEL FOR TEH FOLLOWING DESCRIPTINO.",
    "instruct_all_caps_and_typo_and_missing_quote": "CREAT A TITEL FOR TEH FOLLOWING DESCRIPTINO.",
    "instruct_code_fence": "```\nCreate a title for the following description.\n```",
    "instruct_confusable_unicode": "Creɑte ɑ tιtle for the follοwing descriρtion.",
    "instruct_confusable_unicode_and_typo": "Creɑt a tιtel for teh follοwing descriρtino.",
    "instruct_emoji": "Create a title for the following description. ✨📝➡️📄",
    "instruct_emoji_and_typo": "Creat a titel for teh following descriptino. ✨📝➡️📄",
    "instruct_emoji_and_typo_and_missing_bracket": "Creat a titel for teh following descriptino. ✨📝➡️📄",
    "instruct_emoji_and_typo_and_missing_quote": "Creat a titel for teh following descriptino. ✨📝➡️📄",
    "instruct_emoticon": "Create a title for the following description. :) :D",
    "instruct_emoticon_and_typo": "Creat a titel for teh following descriptino. :) :D",
    "instruct_emoticon_and_typo_and_missing_bracket": "Creat a titel for teh following descriptino. :) :D",
    "instruct_emoticon_and_typo_and_missing_quote": "Creat a titel for teh following descriptino. :) :D",
    "instruct_helpful_markdown_structure": "## Create a title\n\n- For the following description.",
    "instruct_helpful_meaning_reinforing_characters": "Create a title for the following description. >>>>>>",
    "instruct_html_tags": "<span>Create a title for the following description.</span>",
    "instruct_kaomoji": "Create a title for the following description. (*・ω・)ノ",
    "instruct_kaomoji_and_typo": "Creat a titel for teh following descriptino. (*・ω・)ノ",
    "instruct_markdown_bold": "**Create a title for the following description.**",
    "instruct_markdown_bold_and_italic": "***Create a title for the following description.***",
    "instruct_markdown_italic": "*Create a title for the following description.*",
    "instruct_qr_ascii": "Create a title for the following description. [ASCII QR Code Placeholder]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Crea\nt a \ntitel fo\nr teh\n following descriptino.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Crea\nt a \ntitel fo\nr teh\n following descriptino.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Crea\nt a \ntitel fo\nr teh\n following descriptino!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Crea\nt  a \ntitel fo\nr teh\n following descriptino? ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Crea\nt a \ntitel fo\nr teh\n following descriptino.",
    "instruct_several_html_tags": "<p><div><span><b>Create a title for the following description.</b></span></div></p>",
    "instruct_spoiler_bars": "||Create a title for the following description.||",
    "instruct_with_inbetween_gzip_b64_blob": "Create a title for the following description. H4sIAAAAAAAAAwXBZwIAAA==",
    "instruct_zalgo": "C͆ͯ̔r̀̾͐e̽̇͑a͒ͫͮt͗́ͭẽ͂ͥ ͮ͒̈aͣ͋ͧ ͨ̇̈tͬͮ̈́i͂ͬ̈tͯ͊ͤlͭͯ̀eͩ́̀ ͣͯ̂f́̓͗o̾͐ͧr͋̈́ ̀ͭͣt̔̀͐h̉̈́̾e͛ͫ͐ ͯ͛ͣfͨ͒̽oͮ́͆lͪ̀ͭlͭͤ̂oͥ̀ͯwͦͯͨiͯ͊ͥnͨ͊ͧgͮ͋ͨ ͆ͥͭd̍ͯͨeͬͮ̾sͯ͐ͣcͨ͑͐rͤͨ̇iͭ͊ͩp̈́͐ͮt͋ͣͩiͬͩͦoͤ̈ͯnͮ͐.",
    "instruct_zero_width": "C‌r‌e‌a‌t‌e‌ ‌a‌ ‌t‌i‌t‌l‌e‌ ‌f‌o‌r‌ ‌t‌h‌e‌ ‌f‌o‌l‌l‌o‌w‌i‌n‌g‌ ‌d‌e‌s‌c‌r‌i‌p‌t‌i‌o‌n‌.",
    "instruct_zero_width_and_typo": "C‌r‌e‌a‌t‌ ‌a‌ ‌t‌i‌t‌e‌l‌ ‌f‌o‌r‌ ‌t‌e‌h‌ ‌f‌o‌l‌l‌o‌w‌i‌n‌g‌ ‌d‌e‌s‌c‌r‌i‌p‌t‌i‌n‌o‌.",
    "output": "The Road to Finding Myself",
    "prompt_id": "72a5fd6c-a3ab-4662-bb06-cc8132d1db75"
  },
  {
    "prompt_count": 183,
    "instruction_original": "Rewrite the given sentence in a more formal tone.",
    "input": "I had to go to the store real quick.",
    "instruct_all_caps_and_typo": "REWRITE THE GIVEN SENTENCE IN A MORE FOMRAL TONE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWRITE THE GIVEN SENTENCE IN A MORE FOMRAL TONE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "REWRITE THE GIVEN SENTENCE IN A MORE FOMRAL TONE.",
    "instruct_all_caps_and_typo_and_missing_quote": "REWRITE THE GIVEN SENTENCE IN A MORE FOMRAL TONE.",
    "instruct_code_fence": "```\nRewrite the given sentence in a more formal tone.\n```",
    "instruct_confusable_unicode": "Ɍewrite the giⱱen sentence in a more formal tone.",
    "instruct_confusable_unicode_and_typo": "Ɍewrite the giⱱen sentence in a more fomral tone.",
    "instruct_emoji": "✍️ Rewrite the given sentence in a more formal tone. 🧐",
    "instruct_emoji_and_typo": "✍️ Rewrite the given sentence in a more fomral tone. 🧐",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ Rewrite the given sentence in a more fomral tone. 🧐",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ Rewrite the given sentence in a more fomral tone. 🧐",
    "instruct_emoticon": ":pencil: Rewrite the given sentence in a more formal tone. :monocle_face:",
    "instruct_emoticon_and_typo": ":pencil: Rewrite the given sentence in a more fomral tone. :monocle_face:",
    "instruct_emoticon_and_typo_and_missing_bracket": ":pencil: Rewrite the given sentence in a more fomral tone. :monocle_face:",
    "instruct_emoticon_and_typo_and_missing_quote": ":pencil: Rewrite the given sentence in a more fomral tone. :monocle_face:",
    "instruct_helpful_markdown_structure": "* Rewrite the given sentence:\n\t- In a more formal tone.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Rewrite the given sentence in a more formal tone. <<<",
    "instruct_html_tags": "<span>Rewrite the given sentence in a more formal tone.</span>",
    "instruct_kaomoji": "φ(・ω・。) Rewrite the given sentence in a more formal tone. (｀・ω・´)",
    "instruct_kaomoji_and_typo": "φ(・ω・。) Rewrite the given sentence in a more fomral tone. (｀・ω・´)",
    "instruct_markdown_bold": "**Rewrite the given sentence in a more formal tone.**",
    "instruct_markdown_bold_and_italic": "***Rewrite the given sentence in a more formal tone.***",
    "instruct_markdown_italic": "*Rewrite the given sentence in a more formal tone.*",
    "instruct_qr_ascii": "███████▄▄███████████\n██████▄██████████████\n█████▄████████████████\nRewrite the given sentence in a more formal tone.\n███████▄▄███████████\n██████▄██████████████\n█████▄████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rewrite the given sentence in a\nmore fomral tone.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Rewrite the given sentence in a\nmore fomral tone.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Rewrite the given sentence in a\nmore fomral tone?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Rewrite the given sentence in a  \nmore  fomral tone!?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Rewrite the given sentence in a\nmore fomral tone.",
    "instruct_several_html_tags": "<div><p><span>Rewrite the given sentence in a more formal tone.</span></p></div>",
    "instruct_spoiler_bars": "||Rewrite the given sentence in a more formal tone.||",
    "instruct_with_inbetween_gzip_b64_blob": "Rewrite the given sentence iH4sIAAAAAAAAAstPVihKrEitUrIKpVIwyUktAQBQpD61DgAAAA==n a more formal tone.",
    "instruct_zalgo": "R̵̨͍̦̺̫̳̩ͮ̓ͣͩ͂͗̍͐͢e̤͍̜͖͗ͣͬ̇̌̈́̂̉̀͡͠͠w̧̫̬̫̖̠̞̹ͭͮ̉͆ͧ͒͋ͤ͞͡r̅ͣ̇̉͗̔ͤ͛ͨ̚҉̸͍͚̘͍͓͍̀i̶̱͚̠̔͌̈̋ͩ͑ͬ̓̋̚t̒͒ͨ̽̀ͫ̍͌̂̚͜҉̭̘͙̹eͮ̇̽̒ͬͤ̀ͦ́̚̚҉҉̥̩̲̖͍͚̤̫ ͌̉̽̒̇̽̍͆̕͟͏͈̹̙͎̰̜t̾̏ͣͮ̎͒͒ͥ͐͆͏̙̰ͅh͎̹͆̑̒ͪ̂͆ͧ͐ͫ͂̀͟ě̲̰̥̋ͮ͌̀̌̂̋̉̚̕͘ ̧͎̤̝͖̤̗ͧͭ̊̈̊̚̚͠g̵̡͈̹̞̙̼̳͗ͮ͐̍̌͑̂̈͆̃͢į͖̖͇̘͖̿̋̑́̓̈́͒ͤ́́͡v͉̰̙̽͑̌ͨͬͩͭͪ̓ͧ̀̕ę̷̶̗͔͈̤͙͔̿͑̈͊̌ͥ̒̑̍͐ͅn̰͈̩̖̬͗͐̑̈ͬ͋̋͒̈́ͧ̕͝ ͐̽ͨͥ͌ͤ̓͑̓͋҉̰̲̫̹͠s̡͉̜̪̜̐̌̂̌͆̍͋̃̍e̠̙͚͋̌ͥ̒͛̔̍ͣ̓̑́͡nͮ͊̽̆͒̽̓͊ͩ̓͏̶̣̣̗́t̥̣͌͊ͪͨ͛̏̈́͌̇̅̕͜ͅȅ̡͙̗̑͑́́́͐͑͆̚͟ņ͓͖̼̂̓́̑͛͋͂̈͊͞c͗ͥ͆ͫ̐̽ͮ̂̍̋͏̴͎͍͚͈̝e̵͔̥ͭ̏̽̅ͣ̀̓̏̓̈͡ ̳̪̈͌̅̆͋̒͒͋̐͘͠i̖̠͐͂́͐̀̽̐̆ͨ̕͢͟ṉ͍̥̰͈̖̽̀̃́͌̈̓̓ͬ̌́͘͢ ̧̛͈̣̠̪͎͛̆ͣ̈́́́ͨ̽ͣ̓́ͅa͆͋ͥͭ̈ͭ̀̓̽͢͠͏̯͔̦̫̣̬̗ ̜̤͋̃̑ͩ̌͂̓̏ͩ͜͜m̢̗̹̲̊̏̍́͐͌̈́͑͐̚͘͘ȯ̡̠̟͍͍̳͎͙̊͂ͯ̒ͯ̂̓͌ͧ͞͡r̡̧̛̯̖̹̟ͪ̊͆̾̍̋̍͋͐̚e̷̮̮̱͋̅͒͒̀̌ͤ͟͡ͅ ̮͖͈̍ͤ̑̆̏ͯͫ͐́̕͠f͒ͦ̍͂͐ͪͯ̔͋̚͞҉̱̰͓o̸̝͇̼̔ͥ̄ͤ̔͋̊̍̉͜͡ṛ̶͕͇̐ͯ͒͒͊ͧͭ̏̑̓͝m̷̯͕̜͓̼ͬͧͬ͆͋́̒̀͗͡ā̍͋ͧ͂̃̀̾̚̚͏̧͚̰͉͓̙͞l̵̰̰̯̟ͭ͋̿͑ͪ̏ͫͬͬ͢ ̢̬̲̤͖͍̹̱̌̃͌͒̈͂̈ͯ̓̃͟͟t̷̴̖̣͑̅̿͑́ͧ͐̇ͭ̀̚ợ͍̺̻͓͈̈̃͑ͨ́͗ͮͥ̓͆͡ṋ̨͉̟͇̣̱̮̤̤͆͋̽̽͂͐̓̊̽͘ȩ̸̙͙̤̗͖̃̇́̒ͬ̂̇́ͫ̍.",
    "instruct_zero_width": "R\r\ne\r\nw\r\nr\r\ni\r\nt\r\ne\r\n \r\nt\r\nh\r\ne\r\n \r\ng\r\ni\r\nv\r\ne\r\nn\r\n \r\ns\r\ne\r\nn\r\nt\r\ne\r\nn\r\nc\r\ne\r\n \r\ni\r\nn\r\n \r\na\r\n \r\nm\r\no\r\nr\r\ne\r\n \r\nf\r\no\r\nr\r\nm\r\na\r\nl\r\n \r\nt\r\no\r\nn\r\ne\r\n.",
    "instruct_zero_width_and_typo": "R\r\ne\r\nw\r\nr\r\ni\r\nt\r\ne\r\n \r\nt\r\nh\r\ne\r\n \r\ng\r\ni\r\nv\r\ne\r\nn\r\n \r\ns\r\ne\r\nn\r\nt\r\ne\r\nn\r\nc\r\ne\r\n \r\ni\r\nn\r\n \r\na\r\n \r\nm\r\no\r\nr\r\ne\r\n \r\nf\r\no\r\nm\r\nr\r\na\r\nl\r\n \r\nt\r\no\r\nn\r\ne\r\n.",
    "output": "I had to make a quick trip to the store.",
    "prompt_id": "f3a919c9-5699-43f5-af32-9c014eead03e"
  },
  {
    "prompt_count": 184,
    "instruction_original": "Write a few sentences about a given historical figure.",
    "input": "Amelia Earhart",
    "instruct_all_caps_and_typo": "WRTTE A FEW SENTNCES ABUT A GIVEN HISTRCAL FIGUR.",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRTTE A FEW SENTNCES ABUT A GIVEN HISTRCAL FIGUR",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WRTTE A FEW SENTNCES ABUT A GIVEN HISTRCAL FIGUR",
    "instruct_all_caps_and_typo_and_missing_quote": "WRTTE A FEW SENTNCES ABUT A GIVEN HISTRCAL FIGUR.",
    "instruct_code_fence": "```Write a few sentences about a given historical figure.```",
    "instruct_confusable_unicode": "Wrıte a few sentences about a gıven hıstorical fıgure.",
    "instruct_confusable_unicode_and_typo": "Wrıte a few senŧences abouŧ a gıven hıstorıcal fıgure.",
    "instruct_emoji": "✍️ a few sentences about a 🏛️ historical figure.",
    "instruct_emoji_and_typo": "✍️ a few senŧences abouŧ a 🏛️ historıcal fıgure.",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ a few senŧences abouŧ a 🏛️ historıcal fıgure",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ a few senŧences abouŧ a 🏛️ historıcal fıgure.",
    "instruct_emoticon": "Write a few sentences about a given historical figure. :)",
    "instruct_emoticon_and_typo": "Wriŧe a few senŧences abouŧ a given historıcal fıgure. :/",
    "instruct_emoticon_and_typo_and_missing_bracket": "Wriŧe a few senŧences abouŧ a given historıcal fıgure. :",
    "instruct_emoticon_and_typo_and_missing_quote": "Wriŧe a few senŧences abouŧ a given historıcal fıgure. :)",
    "instruct_helpful_markdown_structure": "`Write a few sentences about a given historical figure.`",
    "instruct_helpful_meaning_reinforing_characters": "👉 Write a few sentences about a given historical figure! 👈",
    "instruct_html_tags": "<b>Write a few sentences</b> about a given historical figure.",
    "instruct_kaomoji": "Write a few sentences about a given historical figure. (^o^)",
    "instruct_kaomoji_and_typo": "Writ a few sentnces abot a given hstorical figur. (^_^",
    "instruct_markdown_bold": "**Write a few sentences about a given historical figure.**",
    "instruct_markdown_bold_and_italic": "***Write a few sentences about a given historical figure.***",
    "instruct_markdown_italic": "*Write a few sentences about a given historical figure.*",
    "instruct_qr_ascii": "Write a few sentences about a given historical figure.███████ ███████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "WRTE\nA FEW\nSNTENCES ABOT\nA GIVEN\nHISTRICAL FGUR",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "WRTE\n\nA FEW SNTENCES\nABOT A GIVEN\nHISTRICAL FGUR",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "WRTE\n\nA FEW SNTENCES\nABOT A GIVEN\nHISTRICAL FGUR,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "WRTE\n\n A FEW  SNTENCES\nABOT  A GIVEN\nHISTRICAL  FGUR,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "WRTE\nA FEW SNTENCES ABOT\nA GIVEN\nHISTRICAL FGUR.",
    "instruct_several_html_tags": "<i><b>Write</b></i> a few sentences about a <mark>given historical figure</mark>.",
    "instruct_spoiler_bars": "||Write a few sentences about a given historical figure.||",
    "instruct_with_inbetween_gzip_b64_blob": "Write a few sentences <gzip_b64>H4sIAAAAAAAAA8tIzcnJVwEA+gA5BQ8AAAA=</gzip_b64> about a given historical figure.",
    "instruct_zalgo": "W̷r̷i̷t̷e̷ ̷a̷ ̷f̷e̷w̷ ̷s̷e̷n̷t̷e̷n̷c̷e̷s̷ ̷a̷b̷o̷u̷t̷ ̷a̷ ̷g̷i̷v̷e̷n̷ ̷h̷i̷s̷t̷o̷r̷i̷c̷a̷l̷ ̷f̷i̷g̷u̷r̷e̷.̷",
    "instruct_zero_width": "Write​ a​ few​ sentences​ about​ a​ given​ historical​ figure.",
    "instruct_zero_width_and_typo": "Write​ a​ few​ senŧences​ abouŧ​ a​ historıcal​ fıgure.",
    "output": "Amelia Earhart was an American aviation pioneer and a renowned aviation figure. She was the first female aviator to fly solo across the Atlantic Ocean. Despite tragic circumstances, she is remembered as an inspiring role model and a symbol of courage, adventure, and determination. Her groundbreaking achievements pushed the boundaries of gender roles and inspired many.",
    "prompt_id": "c928918b-dc7f-4b21-8f16-db568664d5f5"
  },
  {
    "prompt_count": 185,
    "instruction_original": "Generate a list of questions related to a given topic.",
    "input": "Innovation",
    "instruct_all_caps_and_typo": "GENERATE A LIST OF QUETIONS RELATED TO A GIVEN TOPIC",
    "instruct_all_caps_and_typo_and_missing_bracket": "GENERATE A LIST OF QUETIONS RELATED TO A GIVEN TOPIC",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "GENERATE A LIST OF QUETIONS RELATED TO A GIVEN TOPIC",
    "instruct_all_caps_and_typo_and_missing_quote": "GENERATE A LIST OF QUETIONS RELATED TO A GIVEN TOPIC",
    "instruct_code_fence": "```Generate a list of questions related to a given topic.```",
    "instruct_confusable_unicode": "Gеnеrаtе а lіѕt оf qυеѕtіоnѕ rеlаtеd tо а gіvеn tоріс.",
    "instruct_confusable_unicode_and_typo": "Gеnеrаtе а lіѕt оf qυеѕtіоnѕ rеlаtеd tо а gіvеn tоріс.",
    "instruct_emoji": "Generate a list of questions related to a given topic. 🤔📝✨",
    "instruct_emoji_and_typo": "Generate a list of quetions related to a given topic. 🤔📝✨",
    "instruct_emoji_and_typo_and_missing_bracket": "Generate a list of quetions related to a given topic. 🤔📝✨",
    "instruct_emoji_and_typo_and_missing_quote": "Generate a list of quetions related to a given topic. 🤔📝✨",
    "instruct_emoticon": "Generate a list of questions related to a given topic. :) :D",
    "instruct_emoticon_and_typo": "Generate a list of quetions related to a given topic. :) :D",
    "instruct_emoticon_and_typo_and_missing_bracket": "Generate a list of quetions related to a given topic. :) :D",
    "instruct_emoticon_and_typo_and_missing_quote": "Generate a list of quetions related to a given topic. :) :D",
    "instruct_helpful_markdown_structure": "- Generate a list of questions related to a given topic.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Generate a list of questions related to a given topic. <<<",
    "instruct_html_tags": "<p>Generate a list of questions related to a given topic.</p>",
    "instruct_kaomoji": "Generate a list of questions related to a given topic. (◕‿◕✿)",
    "instruct_kaomoji_and_typo": "Generate a list of quetions related to a given topic. (◕‿◕✿)",
    "instruct_markdown_bold": "**Generate a list of questions related to a given topic.**",
    "instruct_markdown_bold_and_italic": "***Generate a list of questions related to a given topic.***",
    "instruct_markdown_italic": "*Generate a list of questions related to a given topic.*",
    "instruct_qr_ascii": "███████████████████████████\n█ ▄▄▄ █ ▄▄▄ █ ▄ █▄█ ▀ ▄▄▄ █\n█ █ █ █ █ █ █▀▄▄▀█▀▀▄█ █ █ █\n█ ▄▄▄ █ ▄▄▄ █ █ ▀█▄▀ █ ▄▄▄ █\n███ ▀ ▄ ▀▄▀▀▄▀█▄▀ █▀█ █ ▀██\n█ ▀▀▄▀███▄▀ █▀ █ ▀ ▀▄▄ █ █\n█▄█▄█ ▀ ▀ ▀▄▄▄▄██ █ ▄▄▀ █ █\n██ ▄▄▄█▄█▄█ ▄▄█ ▄█▀▀▄ █ █\n█ ▄▄▄ █ ▀ ▄ █▄ █ █ █ ▄▄▄ █\n█ █ █ █ █ █ █ █ █ █ █ █ █ █\n█ ▄▄▄ █ ▄▄▄ █▄█▄█ ▄▄█▄▄ ▄▄▄ █\n███████████████████████████\nGenerate a list of questions related to a given topic.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Generate a\n list of quetions\n related to a given\n topic.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Generate a\n list of quetions\n related to a given\n topic.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Generate a.\n list of quetions,\n related to a given!\n topic?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Generate a. \n list of quetions, \n related to a given! \n topic? ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Generate a\n list of quetions\n related to a given\n topic.",
    "instruct_several_html_tags": "<div><p><b>Generate a list of questions related to a given topic.</b></p></div>",
    "instruct_spoiler_bars": "||Generate a list of questions related to a given topic.||",
    "instruct_with_inbetween_gzip_b64_blob": "Generate a list of H4sIAAAAAAAAA0srzczJVSguKUxRsjQwAgBz/sA5BAAAAA== questions related to a given topic.",
    "instruct_zalgo": "Ģénêra̤të ̀å l̀i̥s̒t o̝f q̑u͂e̒s̄t́i͒ón͚ś r̄ěl̀átéd t̀õ á g̀ìv̋e͚n͐ t́ópîc̀.",
    "instruct_zero_width": "G\r\ne\r\nn\r\ne\r\nr\r\na\r\nt\r\ne\r\n \r\na\r\n \r\nl\r\ni\r\ns\r\nt\r\n \r\no\r\nf\r\n \r\nq\r\nu\r\ne\r\ns\r\nt\r\ni\r\no\r\nn\r\ns\r\n \r\nr\r\ne\r\nl\r\na\r\nt\r\ne\r\nd\r\n \r\nt\r\no\r\n \r\na\r\n \r\ng\r\ni\r\nv\r\ne\r\nn\r\n \r\nt\r\no\r\np\r\ni\r\nc\r\n.",
    "instruct_zero_width_and_typo": "G\r\ne\r\nn\r\ne\r\nr\r\na\r\nt\r\ne\r\n \r\na\r\n \r\nl\r\ni\r\ns\r\nt\r\n \r\no\r\nf\r\n \r\nq\r\nu\r\ne\r\nt\r\ni\r\no\r\nn\r\ns\r\n \r\nr\r\ne\r\nl\r\na\r\nt\r\ne\r\nd\r\n \r\nt\r\no\r\n \r\na\r\n \r\ng\r\ni\r\nv\r\ne\r\nn\r\n \r\nt\r\no\r\np\r\ni\r\nc\r\n.",
    "output": "1. What are the most current trends in the field of innovation? \n2. What aspects of innovation offer the most potential for success? \n3. What challenges have businesses recently faced related to innovation? \n4. What strategies can businesses use to drive innovation? \n5. How have technological advances helped shape new models of innovation? \n6. What unique approaches to innovation have proven successful? \n7. What principles guide successful innovation projects? \n8. What opportunities for innovation exist in emerging markets?\n9. In what ways does collaboration foster innovation? \n10. How can ideas be leveraged to promote innovation?",
    "prompt_id": "9799432e-cb6c-4880-b7d5-9d91ea56e836"
  },
  {
    "prompt_count": 186,
    "instruction_original": "Create a slogan for a given product.",
    "input": "Healthy snack",
    "instruct_all_caps_and_typo": "CREAT A SLOGAN FOR A GIVEN PRODCUT.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CREAT A SLOGAN FOR A GIVEN PRODCUT",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CREAT A SLOGAN FOR A GIVEN PRODCUT",
    "instruct_all_caps_and_typo_and_missing_quote": "CREAT A SLOGAN FOR A GIVEN PRODCUT",
    "instruct_code_fence": "```Create a slogan for a given product.```",
    "instruct_confusable_unicode": "Crea\t\re a slo\tg\tan for a \tg\ti\tv\ten product.",
    "instruct_confusable_unicode_and_typo": "Crea\t\re a slo\tg\tan for a \tg\ti\tv\ten pro\td\tuct.",
    "instruct_emoji": "✍️ slogan ✨ product 🛍️",
    "instruct_emoji_and_typo": "✍️ sloagan ✨ prodict 🛍️",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ sloagan ✨ prodict 🛍️",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ sloagan ✨ prodict 🛍️",
    "instruct_emoticon": "Create a slogan for a given product :)",
    "instruct_emoticon_and_typo": "Create a sloagan for a given prodict :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Create a sloagan for a given prodict :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Create a sloagan for a given prodict :)",
    "instruct_helpful_markdown_structure": "- Create a slogan for a given product.",
    "instruct_helpful_meaning_reinforing_characters": "✨ Create a slogan ✨ for a given product. ✨",
    "instruct_html_tags": "<p>Create a slogan for a given product.</p>",
    "instruct_kaomoji": "Create a slogan for a given product (✿◠‿◠)",
    "instruct_kaomoji_and_typo": "Create a sloagan for a given prodict (✿◠‿◠)",
    "instruct_markdown_bold": "**Create a slogan for a given product.**",
    "instruct_markdown_bold_and_italic": "***Create a slogan for a given product.***",
    "instruct_markdown_italic": "*Create a slogan for a given product.*",
    "instruct_qr_ascii": "[:::] QR ::: [:::] Create a slogan for a given product.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Create a\nslogan\nfoar a given\nproduct",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Create a\nslogan\nfoar a given\nproduct",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Create a?\nslogan.\nfoar a given\nproduct!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Create a? \nslogan. \nfoar a given \nproduct! \n",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Create a\nslogan\nfoar a given\nproduct",
    "instruct_several_html_tags": "<div><span><p>Create a slogan for a given product.</p></span></div>",
    "instruct_spoiler_bars": "||Create a slogan for a given product.||",
    "instruct_with_inbetween_gzip_b64_blob": "Create a slogan [GZIP_B64_BLOB] for a given product.",
    "instruct_zalgo": "C\n\re\n\ra\n\rt\n\re\n a\n s\n\rl\n\ro\n\rg\n\ra\n\rn\n f\n\ro\n\rr\n a\n g\n\ri\n\rv\n\re\n\rn\n p\n\rr\n\ro\n\rd\n\ru\n\rc\n\rt\n.",
    "instruct_zero_width": "Cr\n\re\n\ra\n\rt\n\re\n a\n s\n\rl\n\ro\n\rg\n\ra\n\rn\n f\n\ro\n\rr\n a\n g\n\ri\n\rv\n\re\n\rn\n p\n\rr\n\ro\n\rd\n\ru\n\rc\n\rt\n.",
    "instruct_zero_width_and_typo": "Cr\n\re\n\ra\n\rt\n\re\n a\n s\n\rl\n\ro\n\rg\n\ra\n\rn\n f\n\ro\n\rr\n a\n g\n\ri\n\rv\n\re\n\rn\n p\n\rr\n\ro\n\rd\n\ri\n\rc\n\rt\n.",
    "output": "A bite of goodness - Healthy snacks for your whole family!",
    "prompt_id": "358c93b6-aa7b-4876-a9c5-e27e2e0d3d4d"
  },
  {
    "prompt_count": 187,
    "instruction_original": "Categorize the following text into one of the two sentiment classes: positive or negative.",
    "input": "I didn't like the product very much because it was too slow and not user friendly.",
    "instruct_all_caps_and_typo": "CATEGORIZE THE FOLLOWINNG TEXXT INTO ONE OF THE TWO SENTIMENT CLASSESS: POSITIVE OR NEEGATIVE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CATEGORIZE THE FOLLOWINNG TEXXT INTO ONE OF THE TWO SENTIMENT CLASSESS: POSITIVE OR NEEGATIVE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CATEGORIZE THE FOLLOWINNG TEXXT INTO ONE OF THE TWO SENTIMENT CLASSESS: POSITIVE OR NEEGATIVE.",
    "instruct_all_caps_and_typo_and_missing_quote": "CATEGORIZE THE FOLLOWINNG TEXXT INTO ONE OF THE TWO SENTIMENT CLASSESS: POSITIVE OR NEEGATIVE.",
    "instruct_code_fence": "```Categorize the following text into one of the two sentiment classes: positive or negative.```",
    "instruct_confusable_unicode": "Cаtеgоrizе thе fоllоwing tехt intо оnе оf thе twо sеntimеnt сlаssеs: pоsіtіvе оr nеgаtivе.",
    "instruct_confusable_unicode_and_typo": "Cаtеgriizе thе fоllоwinng tехxt intо оnе оf thе twо sеntimеnt сlаssеss: pоsіtіivе оr nеgаtivе.",
    "instruct_emoji": "📝 Categorize the following text into one of the two sentiment classes: 👍 positive or 👎 negative. 🤔",
    "instruct_emoji_and_typo": "📝 Categrize the followinng texxt into one of the two sentiment classess: 👍 positiv or 👎 negativ. 🤔",
    "instruct_emoji_and_typo_and_missing_bracket": "📝 Categrize the followinng texxt into one of the two sentiment classess: 👍 positiv or 👎 negativ. 🤔",
    "instruct_emoji_and_typo_and_missing_quote": "📝 Categrize the followinng texxt into one of the two sentiment classess: 👍 positiv or 👎 negativ. 🤔",
    "instruct_emoticon": "Categorize the following text into one of the two sentiment classes: positive :) or negative :(.",
    "instruct_emoticon_and_typo": "Categrize the followinng texxt into one of the two sentiment classess: positiv :) or negativ :(.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Categrize the followinng texxt into one of the two sentiment classess: positiv :) or negativ :(.",
    "instruct_emoticon_and_typo_and_missing_quote": "Categrize the followinng texxt into one of the two sentiment classess: positiv :) or negativ :(.",
    "instruct_helpful_markdown_structure": "# Sentiment Analysis Instruction\n\n- Task: Categorize text.\n- Classes: Positive, Negative.",
    "instruct_helpful_meaning_reinforing_characters": "📝👉 Categorize the following text into one of the two sentiment classes: ✨ positive 👍 or 💔 negative 👎. ✅",
    "instruct_html_tags": "<p>Categorize the following text into one of the two sentiment classes: positive or negative.</p>",
    "instruct_kaomoji": "Categorize the following text into one of the two sentiment classes: positive (^_^) or negative (╥_╥).",
    "instruct_kaomoji_and_typo": "Categrize the followinng texxt into one of the two sentiment classess: positiv (^_^) or negativ (╥_╥).",
    "instruct_markdown_bold": "**Categorize the following text into one of the two sentiment classes: positive or negative.**",
    "instruct_markdown_bold_and_italic": "***Categorize the following text into one of the two sentiment classes: positive or negative.***",
    "instruct_markdown_italic": "*Categorize the following text into one of the two sentiment classes: positive or negative.*",
    "instruct_qr_ascii": "```\n█████████████████████████████\n████▄▄▄▄▄█ █▄█▄▄▄▄███ █▄▀▄██\n█████▀▄▀▄███ █ █ █ █▄█ █ ▀▄██\n████▄█▄▀▄███ █ ▄▀▄ █ █ █▀▄▀██\n████▄▄▄▄▄█▄▄█▄█▄█▄█▄█▄█▄▄▄▄██\n████ █ █▀█▄▀ █▀▄ █▄ █▄█▄▀ ████\n████ ▄▄▄▄▀▄▄█ ▄▄▄▄█▄▀ ▄▀▄▄████\n█████▄▀ █▄▀▄█ █ █▄█▄▀ ▄ █████\n████▄▄▄▄▄█▄▀█▄█▄█▄█▄█▄█▄▄▄▄██\n████▄▄▄▄▄██ ██▀▀▄▀▄ █ █▄ █▄██\n████ █▄ █▄█▄ █ █▄█ █▄▀▄ █ ███\n████ █▄█▀ █ █▄▄▄▄███▄█▀▄▄ ████\n████▄▄▄▄▄█▄▄█▄█▄█▄█▄█▄█▄▄▄▄██\n█████████████████████████████\nCategorize the following text into one of the two sentiment classes: positive or negative.\n```",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Categorize the followinng texxt\ninto one of the two sentiment classess:\npositive or neegative.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Categorize the followinng texxt\ninto one of the two sentiment classess:\npositive or neegative.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Categorize the followinng texxt,\ninto one of the two sentiment classess:\npositive or neegative?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Categorize the followinng  texxt,\n\ninto one of the two sentiment classess:\npositive  or neegative?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Categorize the followinng texxt\ninto one of the two sentiment classess:\npositive or neegative.",
    "instruct_several_html_tags": "<div><span><p><b>Categorize</b> the following text into one of the two sentiment classes: <i>positive</i> or <u>negative</u>.</p></span></div>",
    "instruct_spoiler_bars": "||Categorize the following text into one of the two sentiment classes: positive or negative.||",
    "instruct_with_inbetween_gzip_b64_blob": "Categorize the following text [H4sIAAAAAAAAA0tMSbG3UqgGAFayUuUGAAAA] into one of the two sentiment classes: positive or negative.",
    "instruct_zalgo": "C̴a̸t̶e̸g̸o̸r̴i̶z̴e̶ t̷h̴e̸ f̸o̶l̷l̵o̶w̶i̶n̶g̷ t̴e̴x̴t̶ i̶n̴t̶o̷ o̴n̵e̴ o̸f̸ t̴h̵e̷ t̸w̵o̷ s̶e̸n̸t̵i̴m̸e̶n̶t̶ c̴l̵a̴s̴s̴e̵s̵:̸ p̸o̵s̸i̸t̵i̶v̴e̶ o̶r̸ n̷e̴g̸a̵t̶i̸v̸e̴.",
    "instruct_zero_width": "C​a​t​e​g​o​r​i​z​e​ t​h​e​ f​o​l​l​o​w​i​n​g​ t​e​x​t​ i​n​t​o​ o​n​e​ o​f​ t​h​e​ t​w​o​ s​e​n​t​i​m​e​n​t​ c​l​a​s​s​e​s​:​ p​o​s​i​t​i​v​e​ o​r​ n​e​g​a​t​i​v​e​.",
    "instruct_zero_width_and_typo": "C​a​t​e​g​r​i​z​e​ t​h​e​ f​o​l​l​o​w​i​n​n​g​ t​e​x​x​t​ i​n​t​o​ o​n​e​ o​f​ t​h​e​ t​w​o​ s​e​n​t​i​m​e​n​t​ c​l​a​s​s​e​s​s​:​ p​o​s​i​t​i​v​e​ o​r​ n​e​g​a​t​i​v​e​.",
    "output": "Negative.",
    "prompt_id": "53886fae-4380-46c1-b167-c2b05c29d895"
  },
  {
    "prompt_count": 188,
    "instruction_original": "Summarize the paragraph into a sentence.",
    "input": "When buying furniture, it's important to take into account the overall look and feel of the space. That means that you should ask yourself if the pieces you are selecting are a good match for the existing furnishings as well as what you imagine the overall style to be.",
    "instruct_all_caps_and_typo": "SUMMURIZE THE PARAGRAPH INTO A SENTENSE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "SUMMURIZE THE PARAGRAPH INTO A SENTENSE.\"",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "SUMMURIZE THE PARAGRAPH INTO A SENTENSE.",
    "instruct_all_caps_and_typo_and_missing_quote": "SUMMURIZE THE PARAGRAPH INTO A SENTENSE.",
    "instruct_code_fence": "```\nSummarize the paragraph into a sentence.\n```",
    "instruct_confusable_unicode": "Sυmmαrιze the pαrαgrαph ιnto α sentence.",
    "instruct_confusable_unicode_and_typo": "Sυmmαrιze the pαrαgrαph ιnto α sentense.",
    "instruct_emoji": "📝➡️📜entence.",
    "instruct_emoji_and_typo": "📝➡️📜entense. 🤔",
    "instruct_emoji_and_typo_and_missing_bracket": "📝➡️📜entense. 🤔\"",
    "instruct_emoji_and_typo_and_missing_quote": "📝➡️📜entense. 🤔",
    "instruct_emoticon": "Summarize the paragraph into a sentence. :)",
    "instruct_emoticon_and_typo": "Summarize the paragrah into a sentense. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Summarize the paragrah into a sentense. :)\"",
    "instruct_emoticon_and_typo_and_missing_quote": "Summarize the paragrah into a sentense. :)",
    "instruct_helpful_markdown_structure": "```Summarize the paragraph into a sentence.```",
    "instruct_helpful_meaning_reinforing_characters": ">>> Summarize the paragraph into a sentence. <<< ✨",
    "instruct_html_tags": "<p>Summarize the paragraph into a sentence.</p>",
    "instruct_kaomoji": "Summarize the paragraph into a sentence. (^.^)",
    "instruct_kaomoji_and_typo": "Summrize the paragraph into a sentence. (^.^)",
    "instruct_markdown_bold": "**Summarize the paragraph into a sentence.**",
    "instruct_markdown_bold_and_italic": "_**Summarize the paragraph into a sentence.**_",
    "instruct_markdown_italic": "*Summarize the paragraph into a sentence.*",
    "instruct_qr_ascii": "█▀▀▀▀▀█ █▀▀▀█ █▀▀▀▀▀█\n                       █ ███ █ █ ▀ █ █ ███ █\n                       █ ▀▀▀▀▀ █ ▀ ▀ █ ▀▀▀▀▀ █\n                       ▀▀▀▀▀▀▀ █ █ ▀ ▀▀▀▀▀▀▀\n                       █▀▀▀▀▀█ ▀ █▀▀▀█ █▀▀▀▀▀█\n                       █ ███ █ ▀█ █ █ █ ███ █\n                       █ ▀▀▀▀▀ █▀ █ █ █ ▀▀▀▀▀ █\n                       ▀▀▀▀▀▀▀ ▀▀▀ ▀▀▀ ▀▀▀▀▀▀▀ Summarize the paragraph into a sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Summari ze the paragra ph int o a sentense.\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Summari\nze the paragra ph int o a sentense.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Summari\nze the paragra ph int o a sentense?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Summari\nze the paragra ph int o a sentense ?",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Summari\nze the paragra ph int o a sentense.",
    "instruct_several_html_tags": "<div><p><span>Summarize the paragraph into a sentence.</span></p></div>",
    "instruct_spoiler_bars": "||Summarize the paragraph into a sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Summarize the paragraph into a sentence. H4sIAAAAAAAAAzNWAAEAC+xBAAQAAA==",
    "instruct_zalgo": "S̛̰͇u̠͚̕m͓̝̔m̱̉ͅa̪̗̓r̭̉͏i̯̞͡z̴͖̓e̖͋ the p̯͇̀a̩͕̽r̞̥͡ã͇ǵ̙̝r̛̝͚a̳̍͜p̝̫̓h͇̉͞ i͏̳̱n̺̪͊t̠̍o͏̳̮ a s̠͐e͏̖͔n͏̩͙t̵̙̃e͈̪͋n͎̒ͅĉ̱̺e.",
    "instruct_zero_width": "Summarize\b\b​‍​‍​‍the\b\b​‍​‍​‍paragraph\b\b​‍​‍​‍into\b\b​‍​‍​‍a\b\b​‍​‍​‍sentence.",
    "instruct_zero_width_and_typo": "Summarize\b\b​‍​‍​‍the\b\b​‍​‍​‍paragrah\b\b​‍​‍​‍into\b\b​‍​‍​‍a\b\b​‍​‍​‍sentense.",
    "output": "Think about the existing furnishings and desired style when selecting furniture.",
    "prompt_id": "78f0e1c9-4f20-489e-a1bf-436604fad9f8"
  },
  {
    "prompt_count": 189,
    "instruction_original": "Make the following sentence more concise.",
    "input": "I have a really bad cold and it is making me feeling really miserable.",
    "instruct_all_caps_and_typo": "MAAK THE FOLLOWINNG SENTENCE MORE CONCISE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "MAAK THE FOLLOWINNG SENTENCE MORE CONCISE. {",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "{ \"MAAK THE FOLLOWINNG SENTENCE MORE CONCISE.",
    "instruct_all_caps_and_typo_and_missing_quote": "MAAK THE FOLLOWINNG SENTENCE MORE CONCISE. \"",
    "instruct_code_fence": "```Make the following sentence more concise.```",
    "instruct_confusable_unicode": "Маkе tһе fоllоwіոɡ ѕеոtеոсе mоrе соոсіѕе.",
    "instruct_confusable_unicode_and_typo": "Маkе tһе fоllоwіոոɡ ѕеոtеոсе mоrе соոсіѕе.",
    "instruct_emoji": "✏️✂️ sentence 👇 more brief ✨",
    "instruct_emoji_and_typo": "✏️✂️ followinng 👇 more brief ✨",
    "instruct_emoji_and_typo_and_missing_bracket": "✏️✂️ followinng 👇 more brief ✨ {",
    "instruct_emoji_and_typo_and_missing_quote": "✏️✂️ followinng 👇 more brief ✨ \"",
    "instruct_emoticon": "Make the following sentence more concise :)",
    "instruct_emoticon_and_typo": "Make the followinng sentence more concise :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Make the followinng sentence more concise :) {",
    "instruct_emoticon_and_typo_and_missing_quote": "Make the followinng sentence more concise :) \"",
    "instruct_helpful_markdown_structure": "- Make the following sentence more concise.",
    "instruct_helpful_meaning_reinforing_characters": "✏️ Make the following sentence more concise. ✨",
    "instruct_html_tags": "<p>Make the following sentence more concise.</p>",
    "instruct_kaomoji": "Make the following sentence more concise (≧▽≦)",
    "instruct_kaomoji_and_typo": "Make the followinng sentence more concise (≧▽≦)",
    "instruct_markdown_bold": "**Make the following sentence more concise.**",
    "instruct_markdown_bold_and_italic": "***Make the following sentence more concise.***",
    "instruct_markdown_italic": "*Make the following sentence more concise.*",
    "instruct_qr_ascii": "###### ######\n# # # # # #\n ###### ######\n# # # # # #\n ###### ######\nMake the following sentence more concise.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Make the following\nsentence more\nconcisse.\n{",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Make the following\nsentence more\nconcisse.\n{\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Make the following,\nsentence more\nconcisse;\n{\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Make the  following,\nsentence more\nconcisse;\n{\"",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Make the following\nsentence more\nconcisse.\n\"",
    "instruct_several_html_tags": "<div><p><span>Make the following sentence more concise.</span></p></div>",
    "instruct_spoiler_bars": "||Make the following sentence more concise.||",
    "instruct_with_inbetween_gzip_b64_blob": "Make the following sentence [GZIP_B64_BLOB] more concise.",
    "instruct_zalgo": "M̸a̸k̸e̸ ̸t̸h̸e̸ ̸f̸o̸l̸l̸o̸w̸i̸n̸g̸ ̸s̸e̸n̸t̸e̸n̸c̸e̸ ̸m̸o̸r̸e̸ ̸c̸o̸n̸c̸i̸s̸e̸.",
    "instruct_zero_width": "M​a​k​e​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​s​e​n​t​e​n​c​e​ ​m​o​r​e​ ​c​o​n​c​i​s​e​.",
    "instruct_zero_width_and_typo": "M​a​k​e​ ​t​h​e​ ​f​o​l​l​o​w​i​n​n​g​ ​s​e​n​t​e​n​c​e​ ​m​o​r​e​ ​c​o​n​c​i​s​e​.",
    "output": "I have a bad cold and feeling miserable.",
    "prompt_id": "5d332bb6-1ed2-4c5d-b314-98076ac3af99"
  },
  {
    "prompt_count": 190,
    "instruction_original": "Transform the following sentence into a yes/no question.",
    "input": "It is going to rain tomorrow.",
    "instruct_all_caps_and_typo": "TRANSFORM THE FOLLWING SENTENCE INTO A YES/NO QUESTION.",
    "instruct_all_caps_and_typo_and_missing_bracket": "TRANSFORM THE FOLLWING SENTENCE INTO A YES/NO QUESTION.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "TRANSFORM THE FOLLWING SENTENCE INTO A YES/NO QUESTION.",
    "instruct_all_caps_and_typo_and_missing_quote": "TRANSFORM THE FOLLWING SENTENCE INTO A YES/NO QUESTION.",
    "instruct_code_fence": "```Transform the following sentence into a yes/no question.```",
    "instruct_confusable_unicode": "Tranѕfοrm thе fοllοwing ѕеntеncе intο a yеѕ/nο quеѕtiοn.",
    "instruct_confusable_unicode_and_typo": "Tranѕfοrm thе fοllwing ѕеntеncе intο a yеѕ/nο quеѕtiοn.",
    "instruct_emoji": "✨ Transform the following sentence into a yes/no question 🤔❓",
    "instruct_emoji_and_typo": "✨ Transform the follwing sentence into a yes/no question 🤔❓",
    "instruct_emoji_and_typo_and_missing_bracket": "✨ Transform the follwing sentence into a yes/no question 🤔❓",
    "instruct_emoji_and_typo_and_missing_quote": "✨ Transform the follwing sentence into a yes/no question 🤔❓",
    "instruct_emoticon": "Transform the following sentence into a yes/no question :)",
    "instruct_emoticon_and_typo": "Transform the follwing sentence into a yes/no question :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Transform the follwing sentence into a yes/no question :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Transform the follwing sentence into a yes/no question :)",
    "instruct_helpful_markdown_structure": "# Task\n\n* Transform the following sentence into a yes/no question.",
    "instruct_helpful_meaning_reinforing_characters": "--> Transform the following sentence into a yes/no question! <-- ",
    "instruct_html_tags": "<p>Transform the following sentence into a yes/no question.</p>",
    "instruct_kaomoji": "Transform the following sentence into a yes/no question (•‿•)",
    "instruct_kaomoji_and_typo": "Transform the follwing sentence into a yes/no question (•‿•)",
    "instruct_markdown_bold": "**Transform the following sentence into a yes/no question.**",
    "instruct_markdown_bold_and_italic": "***Transform the following sentence into a yes/no question.***",
    "instruct_markdown_italic": "*Transform the following sentence into a yes/no question.*",
    "instruct_qr_ascii": "Transform the following sentence into a yes/no question. [ASCII_QR_CODE]",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Transform the follwing\nsentence into a yes/no\nquestion.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Transform the follwing\nsentence into a yes/no\nquestion.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Transform the follwing\nsentence into a yes/no\nquestion. period.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Transform the  follwing\n sentence  into a yes/no\nquestion.   period.  ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Transform the follwing\nsentence into a yes/no\nquestion.",
    "instruct_several_html_tags": "<div><p><span>Transform the following sentence into a yes/no question.</span></p></div>",
    "instruct_spoiler_bars": "||Transform the following sentence into a yes/no question.||",
    "instruct_with_inbetween_gzip_b64_blob": "Transform the following sentence [GZIP_B64_BLOB] into a yes/no question.",
    "instruct_zalgo": "T\n\r\ne\n\r\ns\n\r\nt\n\r\n Z\n\r\na\n\r\nl\n\r\ng\n\r\no T\n\r\ne\n\r\nx\n\r\nt:\n\r\n Tr\n\r\na\n\r\nn\n\r\ns\n\r\nf\n\r\no\n\r\nr\n\r\nm t\n\r\nh\n\r\ne f\n\r\no\n\r\nl\n\r\nl\n\r\nw\n\r\ni\n\r\nn\n\r\ng s\n\r\ne\n\r\nn\n\r\nt\n\r\ne\n\r\nn\n\r\nc\n\r\ne i\n\r\nn\n\r\nt\n\r\no a y\n\r\ne\n\r\ns\n\r\n/\n\r\nn\n\r\no q\n\r\nu\n\r\ne\n\r\ns\n\r\nt\n\r\ni\n\r\no\n\r\nn\n\r\n.",
    "instruct_zero_width": "Tr\n\r\na\n\r\nn\n\r\ns\n\r\nf\n\r\no\n\r\nr\n\r\nm t\n\r\nh\n\r\ne f\n\r\no\n\r\nl\n\r\nl\n\r\no\n\r\nw\n\r\ni\n\r\nn\n\r\ng s\n\r\ne\n\r\nn\n\r\nt\n\r\ne\n\r\nn\n\r\nc\n\r\ne i\n\r\nn\n\r\nt\n\r\no a y\n\r\ne\n\r\ns\n\r\n/\n\r\nn\n\r\no q\n\r\nu\n\r\ne\n\r\ns\n\r\nt\n\r\ni\n\r\no\n\r\nn\n\r\n.",
    "instruct_zero_width_and_typo": "Tr\n\r\na\n\r\nn\n\r\ns\n\r\nf\n\r\no\n\r\nr\n\r\nm t\n\r\nh\n\r\ne f\n\r\no\n\r\nl\n\r\nl\n\r\nw\n\r\ni\n\r\nn\n\r\ng s\n\r\ne\n\r\nn\r\nt\n\r\ne\n\r\nn\r\nc\n\r\ne i\n\r\nn\n\r\nt\n\r\no a y\n\r\ne\n\r\ns\n\r\n/\n\r\nn\r\no q\n\r\nu\n\r\ne\n\r\ns\n\r\nt\n\r\ni\n\r\no\n\r\nn\n\r\n.",
    "output": "Is it going to rain tomorrow?",
    "prompt_id": "f9520ec3-4540-4ebb-a7b4-611e25d9a592"
  },
  {
    "prompt_count": 191,
    "instruction_original": "Compose a tweet that addresses the issue of environmental degradation.",
    "input": "",
    "instruct_all_caps_and_typo": "COMPOS A TWET THATT ADRESSES THE ISSHU OF ENVIRNMENTAL DEGRADDATION.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPOS A TWET THATT ADRESSES THE ISSHU OF ENVIRNMENTAL DEGRADDATION.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "COMPOS A TWET THATT ADRESSES THE ISSHU OF ENVIRNMENTAL DEGRADDATION.",
    "instruct_all_caps_and_typo_and_missing_quote": "COMPOS A TWET THATT ADRESSES THE ISSHU OF ENVIRNMENTAL DEGRADDATION.",
    "instruct_code_fence": "```Compose a tweet that addresses the issue of environmental degradation.```",
    "instruct_confusable_unicode": "Сomрoѕе а twееt thаt addrеѕѕеѕ thе іѕѕuе o𝚏 еnνіrоnmеntal dеgrаdаtіоn.",
    "instruct_confusable_unicode_and_typo": "Сomрoѕе а twееt thаtt addrеѕѕеѕ thе іѕѕuе o𝚏 еnνіrоnmеntаl dеgrаdаtіоn.",
    "instruct_emoji": "✍️ Compose a tweet 🐦 that addresses the issue of environmental degradation. 🌍🌳💔🏭",
    "instruct_emoji_and_typo": "✍️ Compoze a tweet 🐦 that adresses the isshu of environmental degradtion. 🌍🌳💔🏭",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ Compoze a tweet 🐦 that adresses the isshu of environmental degradtion. 🌍🌳💔🏭",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ Compoze a tweet 🐦 that adresses the isshu of environmental degradtion. 🌍🌳💔🏭",
    "instruct_emoticon": ":) Compose a tweet :) that addresses the issue of environmental degradation. :( :'(",
    "instruct_emoticon_and_typo": ":) Compoze a tweet :) that adresses the isshu of environmental degradtion. :( :'(",
    "instruct_emoticon_and_typo_and_missing_bracket": ":) Compoze a tweet :) that adresses the isshu of environmental degradtion. :( :'(",
    "instruct_emoticon_and_typo_and_missing_quote": ":) Compoze a tweet :) that adresses the isshu of environmental degradtion. :( :'(",
    "instruct_helpful_markdown_structure": "# Tweet Composition\n\n- **Task:** Compose a tweet.\n- **Topic:** Address the issue of environmental degradation.",
    "instruct_helpful_meaning_reinforing_characters": ">>> Compose a tweet <<< that addresses the issue of environmental degradation. !!!",
    "instruct_html_tags": "<p>Compose a tweet that addresses the issue of environmental degradation.</p>",
    "instruct_kaomoji": "✍️(◔◡◔) Compose a tweet (🐦) that addresses the issue of environmental degradation. (╥﹏╥) (╯︵╰,)",
    "instruct_kaomoji_and_typo": "✍️(◔◡◔) Compoze a tweet (🐦) that adresses the isshu of environmental degradtion. (╥﹏╥) (╯︵╰,)",
    "instruct_markdown_bold": "**Compose a tweet** that addresses the issue of environmental degradation.",
    "instruct_markdown_bold_and_italic": "***Compose a tweet*** that *addresses the issue* of **environmental degradation**.",
    "instruct_markdown_italic": "*Compose a tweet* that addresses the issue of environmental degradation.",
    "instruct_qr_ascii": "███████ \n█▀▀▀█▀█ █▀▀▀█▀█ █ █ ███\n█ ███ █ ██ █▄█ █ █▀█▀█\n█ ▀▀▀ █ ███▄█▀█ █ █ ███\n███████ ██ █ █ █▄█ █▄█\n█▄▄▄█ █ █ █ ▄▄█▄█▄▄█ █\n█▄█▀█ █ █▀▄▀▄ █ █▄█ █\n█▄▄▄█▄█ █▄▀ █ █ ▀▄▀▄██\n███████ █▄█▄▄███ ███ █\nCompose a tweet that addresses the issue of environmental degradation.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compose a\ntweet that adresses the\nisshu of environmental\ndegradtion.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Compose a\ntweet that adresses the\nisshu of environmental\ndegradtion.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Compose a; tweet that adresses the; isshu of environmental? degradtion.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Compose a ; tweet that adresses the ; isshu of environmental ? degradtion .",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Compose a\ntweet that adresses the\nisshu of environmental\ndegradtion.",
    "instruct_several_html_tags": "<div><p><span>Compose a tweet that addresses the issue of environmental degradation.</span></p></div>",
    "instruct_spoiler_bars": "Compose a tweet that addresses the ||issue of environmental degradation||.",
    "instruct_with_inbetween_gzip_b64_blob": "Compose a tweet that addresses the issue of eyJibG9iIjogImR1bW15In0= environmental degradation.",
    "instruct_zalgo": "C̴̍ơ̷m̷͋p̷͌o̴̓s̵̄e̷͑ ̴͠a̷̍ ̴̅t̵̒ẅ̴ě̵ĕ̵t̸̛ ̷̈t̵̑h̶̚ǎ̸t̶̽ ̴̎â̸d̸͐d̴͠r̵̄è̸s̵̄s̷̄e̵̽s̸̋ ̴͆ṫ̸h̶̅e̶̐ ̸̓ĩ̵s̴̒s̶͂u̴͝e̸̊ ̸̃o̴̒f̴͆ ̶͑ē̶n̷̈́v̵͂ỉ̸r̵͒o̴̓n̷͋m̵̊e̸͋ǹ̵t̵͑a̷̔l̸̄ ̷̈́d̶̈́è̸g̸̔r̷̍a̴̾d̸̔a̶͠t̶̔í̶ȯ̷ṅ̶.",
    "instruct_zero_width": "C‌o‌m‌p‌o‌s‌e‌ ‌a‌ ‌t‌w‌e‌e‌t‌ ‌t‌h‌a‌t‌ ‌a‌d‌d‌r‌e‌s‌s‌e‌s‌ ‌t‌h‌e‌ ‌i‌s‌s‌u‌e‌ ‌o‌f‌ ‌e‌n‌v‌i‌r‌o‌n‌m‌e‌n‌t‌a‌l‌ ‌d‌e‌g‌r‌a‌d‌a‌t‌i‌o‌n‌.",
    "instruct_zero_width_and_typo": "C‌o‌m‌p‌o‌z‌e‌ ‌a‌ ‌t‌w‌e‌e‌t‌ ‌t‌h‌a‌t‌ ‌a‌d‌r‌e‌s‌e‌s‌ ‌t‌h‌e‌ ‌i‌s‌h‌u‌e‌ ‌o‌f‌ ‌e‌n‌v‌i‌r‌o‌n‌m‌e‌n‌t‌a‌l‌ ‌d‌e‌g‌r‌a‌d‌t‌i‌o‌n‌.",
    "output": "We can't keep wasting resources and ignoring #EnvironmentalDegradation. Let's make our planet greener and healthier for future generations. #savetheenvironment #EnvironmentalProtection",
    "prompt_id": "1d41e7b9-1e0f-49b4-b41d-994dd2bea5a6"
  },
  {
    "prompt_count": 192,
    "instruction_original": "Replace the underlined words with appropriate synonyms.",
    "input": "The robbers snitched on their partners.",
    "instruct_all_caps_and_typo": "REPLAC TH UNDERLIND WRDS WTH APPRPRIAT SYNNYMS.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REPLAC TH UNDERLIND WRDS WTH APPRPRIAT SYNNYMS.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "REPLAC TH UNDERLIND WRDS WTH APPRPRIAT SYNNYMS.",
    "instruct_all_caps_and_typo_and_missing_quote": "REPLAC TH UNDERLIND WRDS WTH APPRPRIAT SYNNYMS.",
    "instruct_code_fence": "```Replace the underlined words with appropriate synonyms.```",
    "instruct_confusable_unicode": "Rеplacе thе undеrlined wоrds with appropriаtе synоnyms.",
    "instruct_confusable_unicode_and_typo": "Rеplacе thе undеrlinеd wrds with арprоpriatе synоnyms.",
    "instruct_emoji": "➡️🔠🔁 Replace the underlined words with appropriate synonyms. ✅📝",
    "instruct_emoji_and_typo": "➡️🔠🔁 replac the underlinded wrds wth approp riat synonyms. ✅📝",
    "instruct_emoji_and_typo_and_missing_bracket": "➡️🔠🔁 replac the underlinded wrds wth approp riat synonyms. ✅📝",
    "instruct_emoji_and_typo_and_missing_quote": "➡️🔠🔁 replac the underlinded wrds wth approp riat synonyms. ✅📝",
    "instruct_emoticon": ":) Replace the underlined words with appropriate synonyms. :D",
    "instruct_emoticon_and_typo": ":) replac the underlinded wrds wth approp riat synonyms. :D",
    "instruct_emoticon_and_typo_and_missing_bracket": ":) replac the underlinded wrds wth approp riat synonyms. :D",
    "instruct_emoticon_and_typo_and_missing_quote": ":) replac the underlinded wrds wth approp riat synonyms. :D",
    "instruct_helpful_markdown_structure": "# Instruction\n\nReplace the underlined words with appropriate synonyms.\n\n*   Find underlined words.\n*   Provide synonyms.",
    "instruct_helpful_meaning_reinforing_characters": "<= Replace the underlined words => with ||appropriate synonyms||.",
    "instruct_html_tags": "<p>Replace the underlined words with appropriate synonyms.</p>",
    "instruct_kaomoji": "(✿◠‿◠) Replace the underlined words with appropriate synonyms. (^.^)",
    "instruct_kaomoji_and_typo": "(✿◠‿◠) replac the underlinded wrds wth approp riat synonyms. (^.^)",
    "instruct_markdown_bold": "**Replace the underlined words with appropriate synonyms.**",
    "instruct_markdown_bold_and_italic": "***Replace the underlined words with appropriate synonyms.***",
    "instruct_markdown_italic": "*Replace the underlined words with appropriate synonyms.*",
    "instruct_qr_ascii": "Instruction: Replace underlined words with synonyms. (Encoded in conceptual QR ASCII)",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Repla\nce the underlinded\nwrds with approp\nriat synonyms.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Repla\nce the underlinded\nwrds with approp\nriat synonyms.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Repla\nce the underlinded\nwrds with approp\nriat synonyms!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Repla ce the underlinded wrds\nwith approp riat  synonyms!",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Repla\nce the underlinded\nwrds with approp\nriat synonyms.",
    "instruct_several_html_tags": "<div><span><p>Replace the underlined words with appropriate synonyms.</p></span></div>",
    "instruct_spoiler_bars": "||Replace the underlined words with appropriate synonyms.||",
    "instruct_with_inbetween_gzip_b64_blob": "Replace the underlined words with appropriate synonyms. (Blob data: H4sIAAAAAAACAwMAAAAAAAAAAAA=)",
    "instruct_zalgo": "R̶e̶p̶l̶a̶c̶e̶ ̶t̶h̶e̶ ̶u̶n̶d̶e̶r̶l̶i̶n̶e̶d̶ ̶w̶o̶r̶d̶s̶ ̶w̶i̶t̶h̶ ̶a̶p̶p̶r̶o̶p̶r̶i̶a̶t̶e̶ ̶s̶y̶n̶o̶n̶y̶m̶s̶.",
    "instruct_zero_width": "Replace the underlined words with appropriate synonyms.",
    "instruct_zero_width_and_typo": "Replace the underlinded wrds with approp riat synonyms.",
    "output": "The robbers divulged on their partners.",
    "prompt_id": "590cc7e7-be99-4544-9923-22cd57bb3375"
  },
  {
    "prompt_count": 193,
    "instruction_original": "Correct the grammatical errors in the sentence.",
    "input": "She come to the store for supplies.",
    "instruct_all_caps_and_typo": "CORRECT THE GRAMMATICAL ERRORS IN THE SENTNEC.",
    "instruct_all_caps_and_typo_and_missing_bracket": "CORRECT THE GRAMMATICAL ERRORS IN THE SENTNEC.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "CORRECT THE GRAMMATICAL ERRORS IN THE SENTNEC.",
    "instruct_all_caps_and_typo_and_missing_quote": "CORRECT THE GRAMMATICAL ERRORS IN THE SENTNEC.",
    "instruct_code_fence": "```Correct the grammatical errors in the sentence.```",
    "instruct_confusable_unicode": "Cоrrеct thе grаmmаticаl еrrоrs in thе sеntеncе.",
    "instruct_confusable_unicode_and_typo": "Cоrrеct thе grаmmаticаl еrrоs in thе sеntnеcе.",
    "instruct_emoji": "Correct the grammatical errors in the sentence. ✨📝✅",
    "instruct_emoji_and_typo": "Correct the grammatical errros in the sentence. ✨📝❌",
    "instruct_emoji_and_typo_and_missing_bracket": "Correct the grammatical errros in the sentence. ✨📝❌",
    "instruct_emoji_and_typo_and_missing_quote": "Correct the grammatical errros in the sentence. ✨📝❌",
    "instruct_emoticon": "Correct the grammatical errors in the sentence. :)",
    "instruct_emoticon_and_typo": "Correct the grammatical errros in the sentence. :(",
    "instruct_emoticon_and_typo_and_missing_bracket": "Correct the grammatical errros in the sentence. :(",
    "instruct_emoticon_and_typo_and_missing_quote": "Correct the grammatical errros in the sentence. :(",
    "instruct_helpful_markdown_structure": "# Instruction\n\n- Correct the grammatical errors in the sentence.",
    "instruct_helpful_meaning_reinforing_characters": "-> Correct the grammatical errors in the sentence. <- ✅",
    "instruct_html_tags": "<b>Correct the grammatical errors in the sentence.</b>",
    "instruct_kaomoji": "Correct the grammatical errors in the sentence. (^ω^)",
    "instruct_kaomoji_and_typo": "Correct the grammatical errros in the sentnece. (・へ・)",
    "instruct_markdown_bold": "**Correct the grammatical errors in the sentence.**",
    "instruct_markdown_bold_and_italic": "***Correct the grammatical errors in the sentence.***",
    "instruct_markdown_italic": "*Correct the grammatical errors in the sentence.*",
    "instruct_qr_ascii": "+---+ +---+\n|   | | | |\n| +-+ +-+ |\n| | | | | |\n| +-+-+ +-+\n+---+ +---+\nCorrect the grammatical errors in the sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Correct the\ngrammatical\nerrors in\nthe sentnec.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Correct the\ngrammatical\nerrors in\nthe sentnec.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Correct the\ngrammatical\nerrors in\nthe sentnec?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Correct the \n grammatical \n errors in \n the sentnec. !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Correct the\ngrammatical\nerrors in\nthe sentnec.",
    "instruct_several_html_tags": "<div><p><span>Correct the grammatical errors in the sentence.</span></p></div>",
    "instruct_spoiler_bars": "||Correct the grammatical errors in the sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Correct the grammatical errors in the sentence. H4sIAAAAAAAA/wELAAP+AAAAAA==",
    "instruct_zalgo": "C͏o͏r͏r͏e͏c͏t͏ ͏t͏h͏e͏ ͏g͏r͏a͏m͏m͏a͏t͏i͏c͏a͏l͏ ͏e͏r͏r͏o͏r͏s͏ ͏i͏n͏ ͏t͏h͏e͏ ͏s͏e͏n͏t͏e͏n͏c͏e͏.",
    "instruct_zero_width": "Correct​ the​ grammatical​ errors​ in​ the​ sentence.",
    "instruct_zero_width_and_typo": "Correct​ the​ grammatical​ errros​ in​ the​ sentence​.",
    "output": "She came to the store for supplies.",
    "prompt_id": "ff0dc6b2-2fdc-4a40-a854-19da6ab246ab"
  },
  {
    "prompt_count": 194,
    "instruction_original": "Identify the type of the relationship between the two words in the sentence.",
    "input": "The car passed the truck.",
    "instruct_all_caps_and_typo": "IDENTIFY THE TYPOE OF THE RELATIONSHIP BETWEEN THE TWO WORDS IN THE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDENTIFY THE TYPOE OF THE RELATIONSHIP BETWEEN THE TWO WORDS IN THE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "IDENTIFY THE TYPOE OF THE RELATIONSHIP BETWEEN THE TWO WORDS IN THE SENTENCE.",
    "instruct_all_caps_and_typo_and_missing_quote": "IDENTIFY THE TYPOE OF THE RELATIONSHIP BETWEEN THE TWO WORDS IN THE SENTENCE.",
    "instruct_code_fence": "```Identify the type of the relationship between the two words in the sentence.```",
    "instruct_confusable_unicode": "Identiｆｙ the tyρe of the relationshiρ Ьetween the two woгds in the sentence．",
    "instruct_confusable_unicode_and_typo": "Identiｆｙ the tyρoe of the relationshiρ Ьetween the two woгds in the sentence．",
    "instruct_emoji": "Identify the type of the relationship between the two words in the sentence. 🤔🔗💬",
    "instruct_emoji_and_typo": "Identify the typoe of the relationship between the two words in the sentence. 🤔🔗💬",
    "instruct_emoji_and_typo_and_missing_bracket": "Identify the typoe of the relationship between the two words in the sentence. 🤔🔗💬",
    "instruct_emoji_and_typo_and_missing_quote": "Identify the typoe of the relationship between the two words in the sentence. 🤔🔗💬",
    "instruct_emoticon": "Identify the type of the relationship between the two words in the sentence. :-)",
    "instruct_emoticon_and_typo": "Identify the typoe of the relationship between the two words in the sentence. :-)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Identify the typoe of the relationship between the two words in the sentence. :-)",
    "instruct_emoticon_and_typo_and_missing_quote": "Identify the typoe of the relationship between the two words in the sentence. :-)",
    "instruct_helpful_markdown_structure": "# Instruction\n\n- Task: Identify relationship type.\n- Subject: Two words.\n- Location: In the sentence.",
    "instruct_helpful_meaning_reinforing_characters": "Identify ➤ the type of the relationship 🔗 between the two words 💬 in the sentence. ✅",
    "instruct_html_tags": "<p>Identify the type of the relationship between the two words in the sentence.</p>",
    "instruct_kaomoji": "Identify the type of the relationship between the two words in the sentence. (・ω・)",
    "instruct_kaomoji_and_typo": "Identify the typoe of the relationship between the two words in the sentence. (・ω・)",
    "instruct_markdown_bold": "**Identify the type of the relationship between the two words in the sentence.**",
    "instruct_markdown_bold_and_italic": "***Identify the type of the relationship between the two words in the sentence.***",
    "instruct_markdown_italic": "*Identify the type of the relationship between the two words in the sentence.*",
    "instruct_qr_ascii": "█████████████████████████████\n████████▀▄██▀▀▀▀██▄▀█████████\n█████▀▄▄▀▀▄▄▄▄▀▄▄▄▄▀▄▄███████\n████▄▄▄▄▀▄▀▀▀▄▄▀▄▀▄▀▄▄▀▄█████\n████▀▄▄▀▄▄▄▄▄▄▄▀▄▄▄▄▀▄▄▄▄████\n███▄▄▄▀▄▀▄▀▄▄▀▄▄▄▄▀▄▄▄▄▄▄████\n███▀▄▄▄▄▄▄▀▀▀▄▄▀▄▀▄▄▄▀▄▄▄████\n█████████▄█▄▄▄█▄█▄█▄█████████\n██████▀▄▄▄▀▄▄▄▀▄▄▄▀▀▄▄▄▀█████\n█████▀▄▄▀▄▀▄▀▀▄▄▀▄▄▄▀▄▄▄▄████\n████▄▄▄▀▄▄▄▀▄▄▀▄▄▄▄▀▄▄▀▄▄████\n█████▀▄▄▄▄▀▄▄▄▀▄▄▄▄▀▄▄▄▀█████\n█████████████████████████████\nIdentify the type of the relationship between the two words in the sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Identify the\ntypoe of the\nrelationship between the two words in the sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Identify the\ntypoe of the\nrelationship between the two words in the sentence.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Identify, the\ntypoe of the?\nrelationship between the two words in the sentence;",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Identify the\ntypoe of the\nrelationship between the two words in the sentence .",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Identify the\ntypoe of the\nrelationship between the two words in the sentence.",
    "instruct_several_html_tags": "<div><span><b><i>Identify the type of the relationship between the two words in the sentence.</i></b></span></div>",
    "instruct_spoiler_bars": "||Identify the type of the relationship between the two words in the sentence.||",
    "instruct_with_inbetween_gzip_b64_blob": "Identify the type of the relationship between the two words in the sentence. H4sIAAAAAAAAA0WOUQ7DMAgEf9KBg9lP0A8+oW7sC20c2vSAmJ3y97K0wIeS9j4CgAAAAA==",
    "instruct_zalgo": "I̡͎͔ͅd̪̩e̠̻n͖̦̻̺ț̟i͈f͕̞y̦͍ ̹t͖̰̙h͏̱e ̱̖ͅt̯̩̙̝y͉̯̺p҉̬e ̖o̝̻f̴̱̝̣ ̣͈ṭ̬͎h̛̺̰e̼̦̼͙ ̠̞r̪̠͖e͎̪͓l͓͓a͓̹͈͈t̷̪i̵̘͔̻o͚͔n̯͕͞s͞h̘̠͚ͅi̮̩̬͍p̶ ̜̝̖b̺͟e̮̹͙͖͡t͙̱w̢̳e҉̖e͖̲̗n̪͞ ̡t̖͎h͓̰̝̞e̱̕ ̧t̳̕ͅw̸o̬ ͠w̷̞̭͉o͕r̞̦͙̤ḍ̛͈̼s̵ͅ ̞͚͖i̝̮̪ņ̥ ͖̫t̡͓h̠̖̬̀e҉̻͇̪ ͍̰s̘e͖̮͢n̜͇͕̯t̩̬͖̝͡e͖n̪̙̱͞c̱̫e͉̭̠͞.͘",
    "instruct_zero_width": "I\nas\nt\ri\nc\nt\n \nw\ni\nt\nh\n \nz\ne\nr\no\n-\nw\ni\nd\nt\nh\n \ns\np\na\nc\ne\ns\n:\nI\b\ne\bd\be\bn\bt\bi\bf\by\b \bt\bh\be\b \bt\by\bp\be\b \bo\bf\b \bt\bh\be\b \br\be\bl\ba\bt\bi\bo\bn\bs\bh\bi\bp\b \bb\be\bt\bw\be\be\bn\b \bt\bh\be\b \bt\bw\bo\b \bw\bo\br\bd\bs\b \bi\bn\b \bt\bh\be\b \bs\be\bn\bt\be\bn\bc\be\b.",
    "instruct_zero_width_and_typo": "I\nas\nt\ri\nc\nt\n \nw\ni\nt\nh\n \nz\ne\nr\no\n-\nw\ni\nd\nt\nh\n \ns\np\na\nc\ne\ns\n \na\bn\bd\n \nt\by\bp\no\n:\nI\b\ne\bd\be\bn\bt\bi\bf\by\b \bt\bh\be\b \bt\by\bp\bo\be\b \bo\bf\b \bt\bh\be\b \br\be\bl\ba\bt\bi\bo\bn\bs\bh\bi\bp\b \bb\be\bt\bw\be\be\bn\b \bt\bh\be\b \bt\bw\bo\b \bw\bo\br\bd\bs\b \bi\bn\b \bt\bh\be\b \bs\be\bn\bt\be\bn\bc\be\b.",
    "output": "The relationship between the two words in the sentence is comparison.",
    "prompt_id": "38c4f62e-3775-417c-8547-8a2921b211a7"
  },
  {
    "prompt_count": 195,
    "instruction_original": "Compose an informative sentence explaining the given term.",
    "input": "Green bonds",
    "instruct_all_caps_and_typo": "COMPOSE AN INFORMATIVE SENTECNE EXPLAINING THE GIVEN TERM.",
    "instruct_all_caps_and_typo_and_missing_bracket": "COMPOSE AN INFORMATIVE SENTECNE EXPLAINING THE GIVEN TERM. (Missing Bracket",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "COMPOSE AN INFORMATIVE SENTECNE EXPLAINING THE GIVEN TERM. Missing Bracket and Quote",
    "instruct_all_caps_and_typo_and_missing_quote": "COMPOSE AN INFORMATIVE SENTECNE EXPLAINING THE GIVEN TERM. Missing Quote",
    "instruct_code_fence": "```Compose an informative sentence explaining the given term.```",
    "instruct_confusable_unicode": "Сοmрοѕе an іnfοrmatіνе sentence ехрlaіnіng thе gіνеn tеrm.",
    "instruct_confusable_unicode_and_typo": "Сοmрοѕе an іnfοrmatіνе ѕеntесnе ехрlaіnіng thе gіνеn tеrm.",
    "instruct_emoji": "🤔✍️📄 explaining 🔑.",
    "instruct_emoji_and_typo": "🤔✍️📄 explaining the given trem. 🔑",
    "instruct_emoji_and_typo_and_missing_bracket": "🤔✍️📄 explaining the given trem. 🔑 (Missing Bracket",
    "instruct_emoji_and_typo_and_missing_quote": "🤔✍️📄 explaining the given trem. 🔑 Missing Quote",
    "instruct_emoticon": "Compose an informative sentence explaining the given term. :)",
    "instruct_emoticon_and_typo": "Compose an informative sentecne explaining the given term. :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Compose an informative sentecne explaining the given term. :) Missing Bracket",
    "instruct_emoticon_and_typo_and_missing_quote": "Compose an informative sentecne explaining the given term. :) Missing Quote",
    "instruct_helpful_markdown_structure": "- Compose an informative sentence explaining the given term.",
    "instruct_helpful_meaning_reinforing_characters": "➡️ Compose ✍️ an informative sentence 📄 explaining ✨ the given term 🔑. ✔️",
    "instruct_html_tags": "<p>Compose an informative sentence explaining the given term.</p>",
    "instruct_kaomoji": "(｡･ω･｡)ﾉ♡ Write a sentence explaining the term.",
    "instruct_kaomoji_and_typo": "(｡･ω･｡)ﾉ♡ Write a sentecne explaining the term.",
    "instruct_markdown_bold": "**Compose an informative sentence explaining the given term.**",
    "instruct_markdown_bold_and_italic": "***Compose an informative sentence explaining the given term.***",
    "instruct_markdown_italic": "*Compose an informative sentence explaining the given term.*",
    "instruct_qr_ascii": ".███████.█.██.███████..███████.█████.███████..███.███.██.█.███.███..█████████████████████..███.██.██.█.███.███..███████.█.█.███████..███████.█.█.███████.Compose an informative sentence explaining the given term.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Compose an informative sentecne explaining the given term. Missing Bracket",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Compose an informative sentecne explaining the given term. Missing Bracket and Quote",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Compose an informative; sentecne, explaining the, given term? Missing Bracket and Quote",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Compose an  informative ; sentecne , explaining the , given term ? Missing Bracket and Quote",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Compose an informative sentecne explaining the given term. Missing Quote",
    "instruct_several_html_tags": "<div><b><i>Compose an informative sentence explaining the given term.</i></b></div>",
    "instruct_spoiler_bars": "||Compose an informative sentence explaining the given term.||",
    "instruct_with_inbetween_gzip_b64_blob": "Compose an informative H4sIAAAAAAAA/8tJLAEA9xI0kgMAAAA= sentence explaining the given term.",
    "instruct_zalgo": "C̸o̵m̴p̴o̴s̸e̵ ̸a̴n̵ ̸i̴n̴f̸o̵r̵m̷a̴t̷i̵v̵e̵ ̸s̵e̵n̸t̴e̸n̴c̴e̷ ̸e̴x̸p̵l̵a̸i̶n̴i̷n̶g̴ ̶t̷h̶e̵ ̸g̴i̵v̴e̶n̶ ̷t̸e̷r̸m̵.",
    "instruct_zero_width": "Compose an informative sentence explaining the given term.",
    "instruct_zero_width_and_typo": "Compose an informative se​nte​cne explaining the given term.",
    "output": "Green bonds are debt instruments issued to finance projects aimed at mitigating climate change and promoting sustainable development.",
    "prompt_id": "374a2572-c7e1-4884-96b6-faef72b115cf"
  },
  {
    "prompt_count": 196,
    "instruction_original": "Rewrite the following sentence without changing the meaning.",
    "input": "The sales report was not accurate.",
    "instruct_all_caps_and_typo": "REWITE THE FOLLWING SNTENCE WITHOUT CHNGING THE MENING.",
    "instruct_all_caps_and_typo_and_missing_bracket": "REWITE THE FOLLWING SNTENCE WITHOUT CHNGING THE MENING.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "REWITE THE FOLLWING SNTENCE WITHOUT CHNGING THE MENING.",
    "instruct_all_caps_and_typo_and_missing_quote": "REWITE THE FOLLWING SNTENCE WITHOUT CHNGING THE MENING.",
    "instruct_code_fence": "```\nRewrite the following sentence without changing the meaning.\n```",
    "instruct_confusable_unicode": "Ɽewrite ŧhe føłłowing senŧence wiŧhøuŧ changing ŧhe meaning.",
    "instruct_confusable_unicode_and_typo": "Ɽewiŧe ŧhe føłłowing senŧence wiŧhøuŧ chaning ŧhe meening.",
    "instruct_emoji": "✍️ the 👇 sentence without 🔄 the 🤔.",
    "instruct_emoji_and_typo": "✍️ teh 👇 setence wihtout 🔄 teh 🤔.",
    "instruct_emoji_and_typo_and_missing_bracket": "✍️ teh 👇 setence wihtout 🔄 teh 🤔.",
    "instruct_emoji_and_typo_and_missing_quote": "✍️ teh 👇 setence wihtout 🔄 teh 🤔.",
    "instruct_emoticon": "Rewrite the following sentence without changing the meaning :)",
    "instruct_emoticon_and_typo": "Rewite the folowing sentnce wihtout chaning the meening :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Rewite the folowing sentnce wihtout chaning the meening :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Rewite the folowing sentnce wihtout chaning the meening :)",
    "instruct_helpful_markdown_structure": "# Rewrite Sentence\n\n- Task: Rewrite the provided sentence.\n- Constraint: Meaning must remain unchanged.",
    "instruct_helpful_meaning_reinforing_characters": "Rewrite the following sentence without changing the meaning. 🎯",
    "instruct_html_tags": "<p>Rewrite the following sentence without changing the meaning.</p>",
    "instruct_kaomoji": "Rewrite the following sentence without changing the meaning (≧∇≦)b",
    "instruct_kaomoji_and_typo": "Rewite the folowing sentnce wihtout chaning the meening (≧∇≦)b",
    "instruct_markdown_bold": "**Rewrite the following sentence without changing the meaning.**",
    "instruct_markdown_bold_and_italic": "_**Rewrite the following sentence without changing the meaning.**_",
    "instruct_markdown_italic": "*Rewrite the following sentence without changing the meaning.*",
    "instruct_qr_ascii": "█▀█ █▄█ █▀▀\n█▄█ █▀█ ██▄\nRewrite the following sentence without changing the meaning.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Rewrit\ne the follwing sentenc\ne without c\nhanging the men\ning.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Rewrit\ne the follwing sentenc\ne without c\nhanging the men\ning.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Rewrit\ne the follwing sentenc.\ne without c,\nhanging the men\ning!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Rewrit \ne the follwing sentenc. \ne without c, \nhanging the men \ning! ",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Rewrit\ne the follwing sentenc\ne without c\nhanging the men\ning.",
    "instruct_several_html_tags": "<div><h1>Rewrite</h1> <p>the <b>following</b> sentence without <i>changing</i> the meaning.</p></div>",
    "instruct_spoiler_bars": "||Rewrite the following sentence without changing the meaning.||",
    "instruct_with_inbetween_gzip_b64_blob": "Rewrite the following sentence without changing the meaning.",
    "instruct_zalgo": "R̷e̵w̴r̷i̷t̷e̷ ̸t̷h̶e̶ ̵f̵o̸l̴l̷o̸w̷i̶n̷g̵ ̸s̸e̸n̷t̵e̸n̸c̵e̸ ̴w̶i̶t̷h̶o̸u̴t̷ ̶c̵h̶a̸n̴g̴i̵n̶g̵ ̷t̷h̸e̴ ̷m̴e̵a̸n̸i̵n̴g̴.̸",
    "instruct_zero_width": "Rewrite the following sentence without changing the meaning.",
    "instruct_zero_width_and_typo": "Rewite the folowing sentnce wihtout chaning the meening.",
    "output": "The sales report was inaccurate.",
    "prompt_id": "a4aee109-563b-4467-919c-bee5b5fcc97c"
  },
  {
    "prompt_count": 197,
    "instruction_original": "What's the output of this code?",
    "input": "x = [1, 2, 3, 4]\ny = [i**2 for i in x]",
    "instruct_all_caps_and_typo": "WHATS THE OUPUT OF THIS CODE?",
    "instruct_all_caps_and_typo_and_missing_bracket": "WHATS THE OUPUT OF THIS CODE?",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WHATS THE OUPUT OF THIS CODE?",
    "instruct_all_caps_and_typo_and_missing_quote": "WHATS THE OUPUT OF THIS CODE?",
    "instruct_code_fence": "```\nWhat's the output of this code?\n```",
    "instruct_confusable_unicode": "Whɑt's thе output оf thіs cоde?",
    "instruct_confusable_unicode_and_typo": "Whɑt's thе ouput оf thіs cоde?",
    "instruct_emoji": "What's the output of this code? 💻✨",
    "instruct_emoji_and_typo": "Whats the ouput of this code? 💻",
    "instruct_emoji_and_typo_and_missing_bracket": "Whats the ouput of this code? 💻",
    "instruct_emoji_and_typo_and_missing_quote": "Whats the ouput of this code? 💻",
    "instruct_emoticon": "What's the output of this code? :) :D",
    "instruct_emoticon_and_typo": "Whats the ouput of this code? :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Whats the ouput of this code? :)",
    "instruct_emoticon_and_typo_and_missing_quote": "Whats the ouput of this code? :)",
    "instruct_helpful_markdown_structure": "```\nWhat's the output of this code?\n```",
    "instruct_helpful_meaning_reinforing_characters": "What's the output of this code?! 🤔",
    "instruct_html_tags": "<p>What's the output of this code?</p>",
    "instruct_kaomoji": "What's the output of this code? (・ω・)",
    "instruct_kaomoji_and_typo": "Whats the ouput of this code? (・ω・)",
    "instruct_markdown_bold": "**What's the output of this code?**",
    "instruct_markdown_bold_and_italic": "***What's the output of this code?***",
    "instruct_markdown_italic": "*What's the output of this code?*",
    "instruct_qr_ascii": "███████████████████\n████░░░░████░░█████\n████░░██░░░░░░█████\n████░░██████░░█████\n███████████████████\n████░░██░░██░░█████\n████░░░░░░████░░███\n███████████████████",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "What's the ouput of\nthis code?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "What's the ouput of\nthis code?",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "What's the ouput of\nthis code.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "What's the ouput of \n this code.",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "What's the ouput of\nthis code?",
    "instruct_several_html_tags": "<div><p><span>What's the output of this code?</span></p></div>",
    "instruct_spoiler_bars": "||What's the output of this code?||",
    "instruct_with_inbetween_gzip_b64_blob": "What's the output of H4sIAAAAAAAA/8tIzczDUwUAA+EC+xoAAAA= this code?",
    "instruct_zalgo": "W̶h̶a̶t̶'̶s̶ ̶t̶h̶e̶ ̶o̶u̶t̶p̶u̶t̶ ̶o̶f̶ ̶t̶h̶i̶s̶ ̶c̶o̶d̶e̶?",
    "instruct_zero_width": "Wha‍t's th‍e out‍put of‍ this‍ cod‍e?",
    "instruct_zero_width_and_typo": "Wha‍t's th‍e ou‍tput of‍ this‍ cod‍e?",
    "output": "y = [1, 4, 9, 16]",
    "prompt_id": "96a34b55-11aa-4df6-9368-ae74cf98fdae"
  },
  {
    "prompt_count": 198,
    "instruction_original": "Write a short review for the novel \"The Catcher in the Rye\".",
    "input": "",
    "instruct_all_caps_and_typo": "WRITE A SHORT REVIW FOR THE NOVEL \"THE CATCHER IN THE RYE\".",
    "instruct_all_caps_and_typo_and_missing_bracket": "WRITE A SHORT REVIW FOR THE NOVEL \"THE CATCHER IN THE RYE.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "WRITE A SHORT REVIW FOR THE NOVEL THE CATCHER IN THE RYE.",
    "instruct_all_caps_and_typo_and_missing_quote": "WRITE A SHORT REVIW FOR THE NOVEL THE CATCHER IN THE RYE\".",
    "instruct_code_fence": "```Write a short review for the novel \"The Catcher in the Rye\"```",
    "instruct_confusable_unicode": "Wrıte a shórt revıéw for thé nóvel \"Thé Catćhêr ın the Rye\".",
    "instruct_confusable_unicode_and_typo": "Wrıte a shórt reviiéw for thé nóvel \"Thé Catćhêr ın the Rye\".",
    "instruct_emoji": "Write a short review for the novel \"The Catcher in the Rye\" ✍️📚🍎.",
    "instruct_emoji_and_typo": "Write a short reviiw for the novel \"The Catcher in the Rye\" ✍️📚🍎.",
    "instruct_emoji_and_typo_and_missing_bracket": "Write a short reviiw for the novel \"The Catcher in the Rye ✍️📚🍎.",
    "instruct_emoji_and_typo_and_missing_quote": "Write a short reviiw for the novel The Catcher in the Rye\" ✍️📚🍎.",
    "instruct_emoticon": "Write a short review for the novel \"The Catcher in the Rye\" :-).",
    "instruct_emoticon_and_typo": "Write a short reviiw for the novel \"The Catcher in the Rye\" :-).",
    "instruct_emoticon_and_typo_and_missing_bracket": "Write a short reviiw for the novel \"The Catcher in the Rye :-).",
    "instruct_emoticon_and_typo_and_missing_quote": "Write a short reviiw for the novel The Catcher in the Rye\" :-).",
    "instruct_helpful_markdown_structure": "# Review Request\n- Task: Write a short review\n- Subject: The novel \"The Catcher in the Rye\"",
    "instruct_helpful_meaning_reinforing_characters": "Write a short review ✔️ for the novel \"The Catcher in the Rye\" 📚.",
    "instruct_html_tags": "<b>Write</b> a short review for the novel \"The Catcher in the Rye\".",
    "instruct_kaomoji": "Write a short review for the novel \"The Catcher in the Rye\" (✿◠‿◠).",
    "instruct_kaomoji_and_typo": "Write a short reviiw for the novel \"The Catcher in the Rye\" (✿◠‿◠).",
    "instruct_markdown_bold": "**Write** a short **review** for the novel **\"The Catcher in the Rye\"**.",
    "instruct_markdown_bold_and_italic": "***Write*** a short *review* for **the novel** \"The Catcher in the Rye\".",
    "instruct_markdown_italic": "*Write* a short *review* for the novel *\"The Catcher in the Rye\"*.",
    "instruct_qr_ascii": "```\n█▀▀▀▀▀█ █▀▀▀▀▀█ █▀▀▀▀▀█\n█ ███ █ █ ▄ ▀ █ █ ███ █\n█ ▀▀▀ █ █ ▄ ▄ █ █ ▀▀▀ █\n▀▀▀▀▀▀▀ █▄▀ █ ▀ ▀▀▀▀▀▀▀\n▄▀▄▄█▄█ ▄ ▀▄▄▀▄ ▀ ▄█▀█▄\n█ ▀ ▄ █▄█ ▀█▄▀▄ ██▄▄ ▄▀\n▀ ▀▀▀▀ ▀ █ ▀ ▀█▀ █▀▀▀█▀▀\n▀▀▀▀▀▀▀ █ ▄▀ █ █ ▀▀▀▀▀▀▀\n█ ███ █ ▄▀█▄███ █ ███ █\n█ ▄▄▀ █ ▄▀▄▀ █ █ ▄▄▀ █\n█ ▀▀▀ █ █▄▄▀█▀█ █ ▀▀▀ █\n▀▀▀▀▀▀▀ ▀▀▀▀▀▀▀ ▀▀▀▀▀▀▀\n```\nWrite a short review for the novel \"The Catcher in the Rye\".",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Write a\nshort reviiw for the\nnovel \"The Catcher in the Rye.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Write\na short\nreviw for the novel\nThe Catcher in the Rye.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Write\na short?\nreviw for\nthe novel\nThe Catcher in the Rye,",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Write  a  short?\n\nreviw for   the novel\n\nThe Catcher in the Rye,",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Write a short\nreviw for the\nnovel \"The Catcher in the Rye.",
    "instruct_several_html_tags": "<p><i><u>Write</u></i> a short review for the novel \"The Catcher in the Rye\".</p>",
    "instruct_spoiler_bars": "||Write a short review for the novel \"The Catcher in the Rye\"||",
    "instruct_with_inbetween_gzip_b64_blob": "Write a short review [H4sIAAAAAAAAAzNWKklNKMjXUSpLLSpWKCjKTcnMTbUwVkjLzEkHAPW5FkMNAAAA] for the novel \"The Catcher in the Rye\".",
    "instruct_zalgo": "W̴r̵i̷t̷e̵ ̴a̸ ̴s̴h̷o̸r̴t̸ ̶r̷e̴v̷i̸e̶w̵ ̴f̵o̵r̷ ̶t̵h̸e̸ ̷n̵o̸v̴e̷l̷ ̵\"̷T̸h̵e̵ ̴C̵a̴t̵c̵h̵e̵r̸ ̴i̸n̵ ̷t̸h̸e̴ ̴R̷y̷e̴\"̷.",
    "instruct_zero_width": "W​r​i​t​e​ ​a​ ​s​h​o​r​t​ ​r​e​v​i​e​w​ ​f​o​r​ ​t​h​e​ ​n​o​v​e​l​ ​\"​T​h​e​ ​C​a​t​c​h​e​r​ ​i​n​ ​t​h​e​ ​R​y​e​\"​.",
    "instruct_zero_width_and_typo": "W​r​i​t​e​ ​a​ ​s​h​o​r​t​ ​r​e​v​i​i​e​w​ ​f​o​r​ ​t​h​e​ ​n​o​v​e​l​ ​\"​T​h​e​ ​C​a​t​c​h​e​r​ ​i​n​ ​t​h​e​ ​R​y​e​\"​.",
    "output": "I recently read “The Catcher in the Rye” and was impressed by J.D. Salinger's ability to capture the struggles of teenage life. This coming of age tale tells the story of Holden Caulfield's journey to adulthood, as he navigates the issues of identity, alienation, and despair. The novel manages to shed light on difficult topics through its humorous and vivid writing, making it an enjoyable and thought-provoking read.",
    "prompt_id": "5d4237c8-6824-42f4-abcc-053be56403dd"
  },
  {
    "prompt_count": 199,
    "instruction_original": "Identify the following animal.",
    "input": "It has thick fur, a long tail, and pointed ears.",
    "instruct_all_caps_and_typo": "IDENTIFY THE FOLLOWIN ANIMAL.",
    "instruct_all_caps_and_typo_and_missing_bracket": "IDENTIFY THE FOLLOWIN ANIMAL\"",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "IDENTIFY THE FOLLOWIN ANIMAL",
    "instruct_all_caps_and_typo_and_missing_quote": "IDENTIFY THE FOLLOWIN ANIMAL.",
    "instruct_code_fence": "```Identify the following animal.```",
    "instruct_confusable_unicode": "Idеntifу thе fоllоwіng аnіmаl.",
    "instruct_confusable_unicode_and_typo": "Idеntifу thе fоllоwіn аnіmаl.",
    "instruct_emoji": "Identify the following animal 🐾❓",
    "instruct_emoji_and_typo": "Identify the followin animal 🐾❓",
    "instruct_emoji_and_typo_and_missing_bracket": "Identify the followin animal 🐾❓\"",
    "instruct_emoji_and_typo_and_missing_quote": "Identify the followin animal 🐾❓.",
    "instruct_emoticon": "Identify the following animal :)",
    "instruct_emoticon_and_typo": "Identify the followin animal :)",
    "instruct_emoticon_and_typo_and_missing_bracket": "Identify the followin animal :)\"",
    "instruct_emoticon_and_typo_and_missing_quote": "Identify the followin animal :).",
    "instruct_helpful_markdown_structure": "* Identify the following animal.",
    "instruct_helpful_meaning_reinforing_characters": "-> Identify the following animal. ✨",
    "instruct_html_tags": "<p>Identify the following animal.</p>",
    "instruct_kaomoji": "Identify the following animal (・ω・)",
    "instruct_kaomoji_and_typo": "Identify the followin animal (・ω・)",
    "instruct_markdown_bold": "**Identify the following animal.**",
    "instruct_markdown_bold_and_italic": "***Identify the following animal.***",
    "instruct_markdown_italic": "*Identify the following animal.*",
    "instruct_qr_ascii": "ASCII QR: Identify the following animal.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Identify the\nfollowing\nanmal\"",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "Identify\nthe\nfollowing anmal",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "Identify\nthe\nfollowing anmal.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "Identify \nthe\nfollowing anmal .",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "Identify the\nfollowing\nanmal.",
    "instruct_several_html_tags": "<div><p><span>Identify the following animal.</span></p></div>",
    "instruct_spoiler_bars": "||Identify the following animal.||",
    "instruct_with_inbetween_gzip_b64_blob": "Identify H4sIAAAAAAACA0tPLMnMTSxJBAUAW+d30AwAAAA= the following animal.",
    "instruct_zalgo": "Id̸e̱n̍t̕ĩf̕yͩ t̸h̔e͒ f̴o͞l̽l̂ǫw̨în̂ǵ a̅n̚iͪm̔a̕l̥.",
    "instruct_zero_width": "I​d​e​n​t​i​f​y​ t​h​e​ f​o​l​l​o​w​i​n​g​ a​n​i​m​a​l​.",
    "instruct_zero_width_and_typo": "I​d​e​n​t​i​f​y​ t​h​e​ f​o​l​l​o​w​i​n​ a​n​i​m​a​l​.",
    "output": "The animal is a fox.",
    "prompt_id": "51f50f9f-1fc1-4474-bdd1-32c2148c47ac"
  },
  {
    "prompt_count": 200,
    "instruction_original": "Describe the impact of the coronavirus on the economy.",
    "input": "",
    "instruct_all_caps_and_typo": "DESCRIBE THE IMPCAT OF THE CORONAVIRUS ON THE ECONOMY.",
    "instruct_all_caps_and_typo_and_missing_bracket": "DESCRIBE THE IMPCAT OF THE CORONAVIRUS ON THE ECONOMY.",
    "instruct_all_caps_and_typo_and_missing_bracket_and_quote": "\"DESCRIBE THE IMPCAT OF THE CORONAVIRUS ON THE ECONOMY.",
    "instruct_all_caps_and_typo_and_missing_quote": "\"DESCRIBE THE IMPCAT OF THE CORONAVIRUS ON THE ECONOMY.",
    "instruct_code_fence": "```Describe the impact of the coronavirus on the economy.```",
    "instruct_confusable_unicode": "Dеscrıbe the ımpact of the coronavırus on the еconomy.",
    "instruct_confusable_unicode_and_typo": "Dеscrıbe the ımpat of the coronavırus on the еconomy.",
    "instruct_emoji": "Describe the impact 💥 of the coronavirus 🦠 on the economy 📉.",
    "instruct_emoji_and_typo": "Describe the impcat 💥 of the coronavirus 🦠 on the economy 📉.",
    "instruct_emoji_and_typo_and_missing_bracket": "Describe the impcat 💥 of the coronavirus 🦠 on the economy 📉.",
    "instruct_emoji_and_typo_and_missing_quote": "\"Describe the impcat 💥 of the coronavirus 🦠 on the economy 📉.",
    "instruct_emoticon": "Describe the impact >:( of the coronavirus D: on the economy :(.",
    "instruct_emoticon_and_typo": "Describe the impcat >:( of the coronavirus D: on the economy :(.",
    "instruct_emoticon_and_typo_and_missing_bracket": "Describe the impcat >:( of the coronavirus D: on the economy :(. ",
    "instruct_emoticon_and_typo_and_missing_quote": "\"Describe the impcat >:( of the coronavirus D: on the economy :(. ",
    "instruct_helpful_markdown_structure": "- Describe the impact of the coronavirus on the economy.",
    "instruct_helpful_meaning_reinforing_characters": "✨ Describe the impact 📉 of the coronavirus 🦠 on the economy 💰.",
    "instruct_html_tags": "<div>Describe the impact of the coronavirus on the economy.</div>",
    "instruct_kaomoji": "Describe the impact (╬ಠ益ಠ) of the coronavirus (╯°□°）╯︵ ┻━┻ on the economy (╥﹏╥).",
    "instruct_kaomoji_and_typo": "Describe the impcat (╬ಠ益ಠ) of the coronaviurs (╯°□°）╯︵ ┻━┻ on the economy (╥﹏╥).",
    "instruct_markdown_bold": "**Describe the impact of the coronavirus on the economy.**",
    "instruct_markdown_bold_and_italic": "***Describe the impact of the coronavirus on the economy.***",
    "instruct_markdown_italic": "*Describe the impact of the coronavirus on the economy.*",
    "instruct_qr_ascii": "```█████████████████████████████ ████████▀▀▀▀▀███████▀▀▀▀▀████ ██████▀─▄███▄─▀████▀─▄███▄─▀██ █████──██████──███──██████──██ █████──▀███▀──████──▀███▀──███ ███████▄─────▄█████▄─────▄████ ████████▀▄▄▄▀████████▀▄▄▄▀████ █████████████████████████████ ████▀▀▀▀▀▄▄▀▄▄▀▀▀▀▀███████████ ████▄───▄██─██▄───▄███████████ █████▀▄▀▀█████▀▄▀▀████████████ ██████─▄█▄▄▄█▄─███████████████ ████████▀▄▄▀██████████████████ ███████▄▄▄▄▄▄█████████████████ █████████████████████████████ ```Describe the impact of the coronavirus on the economy.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket": "Describe the impcat of the coronavirus on the economy.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote": "\"Describe the impcat of the coronavirus on the economy.",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation": "\"Describe the impcat? of the coronavirus, on the economy!",
    "instruct_random_linebreaks_and_typo_and_missing_bracket_and_quote_and_wrong_punctuation_and_extra_space": "\" Describe the impcat ? of the coronavirus , on the economy !",
    "instruct_random_linebreaks_and_typo_and_missing_quote": "\"Describe the impcat of the coronavirus on the economy.",
    "instruct_several_html_tags": "<p><span>Describe the impact of the coronavirus on the economy.</span></p>",
    "instruct_spoiler_bars": "||Describe the impact of the coronavirus on the economy.||",
    "instruct_with_inbetween_gzip_b64_blob": "Describe the impact H4sIAAAAAAAAAwXGyw0CMQwF0A10J+0q9yqEkA22Fv/L9k+u2+i21cOAIU46O5y2uX6Dk0J2pPUD1Q9S5jQ2Y7a0G40+qG8b5u002qUoP34AAAA= of the coronavirus on the economy.",
    "instruct_zalgo": "D͎e҉s̶c̴r̵i̵b̨e̷ ̴t̸h̸e̵ ̸i̸m̴p̷a̵c̴t̴ ̶o̷f̸ ̸t̵h̷e̵ ̴c̷o̷r̵o̵n̵a̷v̷i̷r̴u̸s̷ ̴o̸n̵ ̴t̶h̷e̷ ̴e̶c̴o̸n̷o̷m̵y̶.̵",
    "instruct_zero_width": "D​e​s​c​r​i​b​e​ ​t​h​e​ ​i​m​p​a​c​t​ ​o​f​ ​t​h​e​ ​c​o​r​o​n​a​v​i​r​u​s​ ​o​n​ ​t​h​e​ ​e​c​o​n​o​m​y.",
    "instruct_zero_width_and_typo": "D​e​s​c​r​i​b​e​ ​t​h​e​ ​i​m​p​c​a​t​ ​o​f​ ​t​h​e​ ​c​o​r​o​n​a​v​i​r​u​s​ ​o​n​ ​t​h​e​ ​e​c​o​n​o​m​y.",
    "output": "The coronavirus has had a major impact on the economy, causing disruptions in industries such as tourism, travel, hospitality, retail, and more. These industries have seen sharp decreases in activity, resulting in surging unemployment levels, a weakened stock market, and decreased consumer spending. Business closures have been rampant, and some companies have even been forced to permanently close their doors. As a result, fiscal and monetary policies have been embraced by governments to help stem the economic downturn.",
    "prompt_id": "dfe0d6aa-3b50-43aa-b147-91caaeaf763d"
  }
]